{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "addToWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "isWhitelisted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "member",
						"type": "address"
					}
				],
				"name": "removeFromWhitelist",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A contract that manages a whitelist of addresses.",
			"kind": "dev",
			"methods": {
				"addToWhitelist(address)": {
					"details": "Adds a member to the whitelist.",
					"params": {
						"member": "Address of the user to be added to the whitelist."
					}
				},
				"isWhitelisted(address)": {
					"details": "Checks if a member is in the whitelist.",
					"params": {
						"member": "Address of the user to check."
					},
					"returns": {
						"_0": "bool Indicates if the user is whitelisted."
					}
				},
				"removeFromWhitelist(address)": {
					"details": "Removes a member from the whitelist.",
					"params": {
						"member": "Address of the user to be removed from the whitelist."
					}
				}
			},
			"title": "Whitelist",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CCK/Token/CCKToken_flattened.sol": "Whitelist"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CCK/Token/CCKToken_flattened.sol": {
			"keccak256": "0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e",
			"urls": [
				"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f",
				"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW"
			]
		}
	},
	"version": 1
}