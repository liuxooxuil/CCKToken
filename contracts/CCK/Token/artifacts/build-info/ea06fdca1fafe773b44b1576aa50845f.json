{
	"id": "ea06fdca1fafe773b44b1576aa50845f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/Token/CCKToken_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/CCK/Token/Whitelist.sol\n\n\npragma solidity ^0.8.0;\n\n/**\n * @title Whitelist\n * @dev A contract that manages a whitelist of addresses.\n */\ncontract Whitelist {\n    // Mapping to track whitelisted addresses\n    mapping(address => bool) public whitelist;\n\n    /**\n     * @dev Adds a member to the whitelist.\n     * @param member Address of the user to be added to the whitelist.\n     */\n    function addToWhitelist(address member) external {\n        whitelist[member] = true;\n    }\n\n    /**\n     * @dev Removes a member from the whitelist.\n     * @param member Address of the user to be removed from the whitelist.\n     */\n    function removeFromWhitelist(address member) external {\n        whitelist[member] = false;\n    }\n\n    /**\n     * @dev Checks if a member is in the whitelist.\n     * @param member Address of the user to check.\n     * @return bool Indicates if the user is whitelisted.\n     */\n    function isWhitelisted(address member) external view returns (bool) {\n        return whitelist[member];\n    }\n}\n// File: contracts/CCK/Token/Freezable.sol\n\n\npragma solidity ^0.8.0;\n\n/**\n * @title Freezable\n * @dev Contract that allows freezing and unfreezing of user accounts.\n */\ncontract Freezable {\n    // Mapping to track frozen status of user accounts\n    mapping(address => bool) public frozen;\n\n    /**\n     * @dev Freezes a user account, preventing it from performing certain actions.\n     * @param user Address of the user to be frozen.\n     */\n    function freezeUser(address user) external {\n        frozen[user] = true;\n    }\n\n    /**\n     * @dev Unfreezes a user account, allowing it to perform actions again.\n     * @param user Address of the user to be unfrozen.\n     */\n    function unfreezeUser(address user) external {\n        frozen[user] = false;\n    }\n\n    /**\n     * @dev Checks if a user account is frozen.\n     * @param userAddress Address of the user to check.\n     * @return bool Indicates if the user account is frozen.\n     */\n    function isFrozen(address userAddress) external view returns (bool) {\n        return frozen[userAddress];\n    }\n}\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n\n// File: contracts/CCK/Token/PriceOracle.sol\n\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title PriceOracle\n * @dev A contract for retrieving the current price from a Uniswap V3 pool.\n */\ncontract PriceOracle {\n    address public uniswapPool; // Address of the Uniswap V3 pool\n\n    /**\n     * @dev Constructor to set the Uniswap V3 pool address.\n     * @param _uniswapPool Address of the Uniswap V3 pool to be used for price retrieval.\n     */\n    constructor(address _uniswapPool) {\n        uniswapPool = _uniswapPool;\n    }\n\n    /**\n     * @dev Retrieves the current price from the Uniswap V3 pool.\n     * @return uint256 The current price calculated from the pool's sqrtPriceX96.\n     */\n    function getCurrentPrice() external view returns (uint256) {\n        IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool);\n        (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\n        uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** 192); // Price calculation\n        return price;\n    }\n}\n// File: contracts/CCK/ERC3643.sol\n\n\npragma solidity ^0.8.0;\n\n/**\n * @title IERC3643\n * @dev Interface for on-chain identity management and compliance.\n */\ninterface IERC3643 {\n    /**\n     * @dev Returns the on-chain ID of the contract.\n     * @return address The address of the contract.\n     */\n    function onchainID() external view returns (address);\n    \n    /**\n     * @dev Returns the version of the contract.\n     * @return string The version string.\n     */\n    function version() external view returns (string memory);\n    \n    /**\n     * @dev Returns the identity registry address.\n     * @return address The identity registry address.\n     */\n    function identityRegistry() external view returns (address);\n    \n    /**\n     * @dev Returns the compliance address.\n     * @return address The compliance address.\n     */\n    function compliance() external view returns (address);\n    \n    /**\n     * @dev Checks if the contract is paused.\n     * @return bool Indicates if the contract is paused.\n     */\n    function paused() external view returns (bool);\n    \n    /**\n     * @dev Checks if a user is frozen.\n     * @param userAddress Address of the user to check.\n     * @return bool Indicates if the user is frozen.\n     */\n    function isFrozen(address userAddress) external view returns (bool);\n    \n    /**\n     * @dev Returns the number of frozen tokens for a user.\n     * @param userAddress Address of the user to check.\n     * @return uint256 Amount of frozen tokens.\n     */\n    function getFrozenTokens(address userAddress) external view returns (uint256);\n}\n// File: contracts/CCK/Token/CCKToken.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n/**\n * @title CCKToken\n * @dev ERC20 token implementation with additional features such as whitelisting,\n * freezing accounts, and price retrieval from Uniswap V3.\n */\ncontract CCKToken is ERC20, Ownable, IERC3643 {\n    uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18; // Total supply of tokens\n    uint256 public mintedAmount; // Amount of tokens already minted\n    \n    Whitelist public whitelistContract; // Instance of the whitelist contract\n    Freezable public freezableContract; // Instance of the freezable contract\n    PriceOracle public priceOracle; // Instance of the price oracle contract\n\n    /**\n     * @dev Constructor to initialize the token and its associated contracts.\n     * @param _whitelist Array of addresses to be added to the whitelist\n     * @param _uniswapPool Address of the Uniswap V3 pool for price retrieval\n     */\n    constructor(address[] memory _whitelist, address _uniswapPool) \n        ERC20(\"CCK\", \"CCK\") \n        Ownable(msg.sender) \n    {\n        whitelistContract = new Whitelist();\n        freezableContract = new Freezable();\n        priceOracle = new PriceOracle(_uniswapPool);\n\n        require(_whitelist.length > 0, \"At least one whitelisted address required\");\n        for (uint256 i = 0; i < _whitelist.length; i++) {\n            whitelistContract.addToWhitelist(_whitelist[i]);\n        }\n\n        _mint(msg.sender, TOTAL_SUPPLY); // Mint total supply to the contract deployer\n    }\n\n    /**\n     * @dev Mints new tokens to a specified address, if the address is whitelisted.\n     * @param to Address to receive the minted tokens\n     * @param amount Amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        require(whitelistContract.isWhitelisted(to), \"Not whitelisted\");\n        require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\");\n        _mint(to, amount);\n        mintedAmount += amount;\n    }\n\n    /**\n     * @dev Transfers tokens to a specified address.\n     * @param recipient Address to receive the tokens\n     * @param amount Amount of tokens to transfer\n     * @return success Indicates if the transfer was successful\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        require(!freezableContract.isFrozen(msg.sender), \"Sender is frozen\");\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\n        return super.transfer(recipient, amount);\n    }\n\n    /**\n     * @dev Transfers tokens from one address to another.\n     * @param sender Address to send tokens from\n     * @param recipient Address to receive the tokens\n     * @param amount Amount of tokens to transfer\n     * @return success Indicates if the transfer was successful\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        require(!freezableContract.isFrozen(sender), \"Sender is frozen\");\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    /**\n     * @dev Returns the balance of a specified user.\n     * @param user Address of the user to check balance\n     * @return balance Amount of tokens held by the user\n     */\n    function balanceOfUser(address user) external view returns (uint256) {\n        return balanceOf(user);\n    }\n\n    /**\n     * @dev Returns the on-chain ID of the contract.\n     * @return address The address of the contract\n     */\n    function onchainID() external view override returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev Returns the version of the contract.\n     * @return version The version string\n     */\n    function version() external view override returns (string memory) {\n        return \"1.0.0\";\n    }\n\n    /**\n     * @dev Returns the identity registry address.\n     * @return address The identity registry address (currently returns zero)\n     */\n    function identityRegistry() external view override returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Returns the compliance address.\n     * @return address The compliance address (currently returns zero)\n     */\n    function compliance() external view override returns (address) {\n        return address(0);\n    }\n\n    /**\n     * @dev Checks if the contract is paused.\n     * @return paused Indicates if the contract is paused (always returns false)\n     */\n    function paused() external view override returns (bool) {\n        return false; \n    }\n\n    /**\n     * @dev Checks if a user is frozen.\n     * @param userAddress Address of the user to check\n     * @return frozen Indicates if the user is frozen\n     */\n    function isFrozen(address userAddress) external view override returns (bool) {\n        return freezableContract.isFrozen(userAddress);\n    }\n\n    /**\n     * @dev Returns the number of frozen tokens for a user.\n     * @param userAddress Address of the user to check\n     * @return frozenTokens Amount of frozen tokens (currently returns zero)\n     */\n    function getFrozenTokens(address userAddress) external view override returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Retrieves the current price from the price oracle.\n     * @return price Current price of the token\n     */\n    function getCurrentPrice() external view returns (uint256) {\n        return priceOracle.getCurrentPrice();\n    }\n\n \n    /**\n     * @dev Returns the number of decimal places used by the token.\n     * @return uint8 The number of decimal places (always returns 0 for this token).\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 0;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/CCK/Token/CCKToken_flattened.sol": {
				"CCKToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_whitelist",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "_uniswapPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOfUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "freezableContract",
							"outputs": [
								{
									"internalType": "contract Freezable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOracle",
							"outputs": [
								{
									"internalType": "contract PriceOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whitelistContract",
							"outputs": [
								{
									"internalType": "contract Whitelist",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token implementation with additional features such as whitelisting, freezing accounts, and price retrieval from Uniswap V3.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"balanceOfUser(address)": {
								"details": "Returns the balance of a specified user.",
								"params": {
									"user": "Address of the user to check balance"
								},
								"returns": {
									"_0": "balance Amount of tokens held by the user"
								}
							},
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address (currently returns zero)"
								}
							},
							"constructor": {
								"details": "Constructor to initialize the token and its associated contracts.",
								"params": {
									"_uniswapPool": "Address of the Uniswap V3 pool for price retrieval",
									"_whitelist": "Array of addresses to be added to the whitelist"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimal places used by the token.",
								"returns": {
									"_0": "uint8 The number of decimal places (always returns 0 for this token)."
								}
							},
							"getCurrentPrice()": {
								"details": "Retrieves the current price from the price oracle.",
								"returns": {
									"_0": "price Current price of the token"
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check"
								},
								"returns": {
									"_0": "frozenTokens Amount of frozen tokens (currently returns zero)"
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address (currently returns zero)"
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check"
								},
								"returns": {
									"_0": "frozen Indicates if the user is frozen"
								}
							},
							"mint(address,uint256)": {
								"details": "Mints new tokens to a specified address, if the address is whitelisted.",
								"params": {
									"amount": "Amount of tokens to mint",
									"to": "Address to receive the minted tokens"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "paused Indicates if the contract is paused (always returns false)"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Transfers tokens to a specified address.",
								"params": {
									"amount": "Amount of tokens to transfer",
									"recipient": "Address to receive the tokens"
								},
								"returns": {
									"_0": "success Indicates if the transfer was successful"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers tokens from one address to another.",
								"params": {
									"amount": "Amount of tokens to transfer",
									"recipient": "Address to receive the tokens",
									"sender": "Address to send tokens from"
								},
								"returns": {
									"_0": "success Indicates if the transfer was successful"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "version The version string"
								}
							}
						},
						"title": "CCKToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54898:60430  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55589:56168  constructor(address[] memory _whitelist, address _uniswapPool) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55698:55708  msg.sender */\n  caller\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12451:12564  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12525:12530  name_ */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12517:12522  _name */\n  0x03\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12517:12530  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12550:12557  symbol_ */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12540:12547  _symbol */\n  0x04\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12540:12557  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12451:12564  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23018:23019  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22994:23020  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22994:23006  initialOwner */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22994:23020  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22990:23085  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23071:23072  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23043:23074  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22990:23085  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23094:23126  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23113:23125  initialOwner */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23094:23112  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23094:23126  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":22946:23133  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55745:55760  new Whitelist() */\n  mload(0x40)\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_20\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_20:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55725:55742  whitelistContract */\n  0x07\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55725:55760  whitelistContract = new Whitelist() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55790:55805  new Freezable() */\n  mload(0x40)\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_23\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_23:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55770:55787  freezableContract */\n  0x08\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55770:55805  freezableContract = new Freezable() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55845:55857  _uniswapPool */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55829:55858  new PriceOracle(_uniswapPool) */\n  mload(0x40)\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  tag_26\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55815:55826  priceOracle */\n  0x09\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55815:55858  priceOracle = new PriceOracle(_uniswapPool) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55897:55898  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55877:55887  _whitelist */\n  dup3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55877:55894  _whitelist.length */\n  mload\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55877:55898  _whitelist.length > 0 */\n  gt\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55869:55944  require(_whitelist.length > 0, \"At least one whitelisted address required\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55959:55968  uint256 i */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55971:55972  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55959:55972  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55954:56074  for (uint256 i = 0; i < _whitelist.length; i++) {... */\ntag_31:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55978:55988  _whitelist */\n  dup3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55978:55995  _whitelist.length */\n  mload\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55974:55975  i */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55974:55995  i < _whitelist.length */\n  lt\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55954:56074  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56016:56033  whitelistContract */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56016:56048  whitelistContract.addToWhitelist */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xe43252d7\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56049:56059  _whitelist */\n  dup5\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56060:56061  i */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56049:56062  _whitelist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_34\n  jumpi\n  tag_35\n  tag_36\n  jump\t// in\ntag_35:\ntag_34:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56016:56063  whitelistContract.addToWhitelist(_whitelist[i]) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_37:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_38\n  jumpi\n  revert(0x00, 0x00)\ntag_38:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_40\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_40:\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55997:56000  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55954:56074  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  jump(tag_31)\ntag_32:\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56084:56115  _mint(msg.sender, TOTAL_SUPPLY) */\n  tag_41\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56090:56100  msg.sender */\n  caller\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54989:55005  500_000 * 10**18 */\n  0x69e10de76676d0800000\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56084:56089  _mint */\n  shl(0x20, tag_42)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56084:56115  _mint(msg.sender, TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55589:56168  constructor(address[] memory _whitelist, address _uniswapPool) ... */\n  pop\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54898:60430  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  jump(tag_43)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24633:24820  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24706:24722  address oldOwner */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24725:24731  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24706:24731  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24750:24758  newOwner */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24741:24747  _owner */\n  0x05\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24741:24758  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24804:24812  newOwner */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24773:24813  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24794:24802  oldOwner */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24773:24813  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24696:24820  {... */\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24633:24820  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\ntag_42:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18397:18398  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18399  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18385  account */\n  dup3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18399  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18374:18465  if (account == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18451:18452  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18422:18454  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18374:18465  if (account == address(0)) {... */\ntag_46:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18509  _update(address(0), account, value) */\n  tag_48\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18490:18491  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18494:18501  account */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18503:18508  value */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18481  _update */\n  shl(0x20, tag_49)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18509  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_49:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16963:16964  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16965  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16951  from */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16965  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\n  tag_51\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17099:17104  value */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17083:17095  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17083:17104  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_52\n  swap2\n  swap1\n  tag_53\n  jump\t// in\ntag_52:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\n  jump(tag_54)\ntag_51:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17135:17154  uint256 fromBalance */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17166  _balances */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17172  _balances[from] */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17167:17171  from */\n  dup6\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17172  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17135:17172  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17204:17209  value */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17190:17201  fromBalance */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17190:17209  fromBalance < value */\n  lt\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17261:17265  from */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17267:17278  fromBalance */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17280:17285  value */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_56\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17186:17301  if (fromBalance < value) {... */\ntag_55:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17453:17458  value */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17439:17450  fromBalance */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17439:17458  fromBalance - value */\n  sub\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17430  _balances */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17436  _balances[from] */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17431:17435  from */\n  dup7\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17436  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17458  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17121:17483  {... */\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\ntag_54:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17511:17512  0 */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17513  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17499  to */\n  dup3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17513  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\n  tag_58\n  jumpi\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17676:17681  value */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17660:17672  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17660:17681  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\n  jump(tag_59)\ntag_58:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17888:17893  value */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17880  _balances */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17884  _balances[to] */\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17881:17883  to */\n  dup5\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17884  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17893  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\ntag_59:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17948:17950  to */\n  dup2\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17942:17946  from */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17952:17957  value */\n  dup4\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n  mload(0x40)\n  tag_60\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54898:60430  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_19:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_2)\n  dup1\n  dataOffset(sub_2)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_25:\n  dataSize(sub_3)\n  dup1\n  dataOffset(sub_3)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_62:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_63:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_64:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_65:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_66:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_67:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_68:\n    /* \"#utility.yul\":834:861   */\n  tag_111\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_66\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_113\n  tag_67\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":907:995   */\ntag_112:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_69:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_115\n  tag_62\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_116\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_68\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_70:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_119\n  tag_67\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1326:1382   */\ntag_118:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_71:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  0x00\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_72:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_73:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_123\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_72\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_74:\n    /* \"#utility.yul\":1920:1944   */\n  tag_125\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_73\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_126\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_126:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_75:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_128\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_74\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_76:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_130\n    /* \"#utility.yul\":2289:2353   */\n  tag_131\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_70\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2273:2354   */\n  tag_69\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_133\n  tag_71\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2505:2627   */\ntag_132:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_134:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_137\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_75\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_134)\ntag_136:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_77:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_140\n  tag_65\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2994:3116   */\ntag_139:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_141\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_76\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3997   */\ntag_3:\n    /* \"#utility.yul\":3391:3397   */\n  0x00\n    /* \"#utility.yul\":3399:3405   */\n  0x00\n    /* \"#utility.yul\":3448:3450   */\n  0x40\n    /* \"#utility.yul\":3436:3445   */\n  dup4\n    /* \"#utility.yul\":3427:3434   */\n  dup6\n    /* \"#utility.yul\":3423:3446   */\n  sub\n    /* \"#utility.yul\":3419:3451   */\n  slt\n    /* \"#utility.yul\":3416:3535   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":3454:3533   */\n  tag_144\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3416:3535   */\ntag_143:\n    /* \"#utility.yul\":3595:3596   */\n  0x00\n    /* \"#utility.yul\":3584:3593   */\n  dup4\n    /* \"#utility.yul\":3580:3597   */\n  add\n    /* \"#utility.yul\":3574:3598   */\n  mload\n    /* \"#utility.yul\":3625:3643   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3617:3623   */\n  dup2\n    /* \"#utility.yul\":3614:3644   */\n  gt\n    /* \"#utility.yul\":3611:3728   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":3647:3726   */\n  tag_146\n  tag_64\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3611:3728   */\ntag_145:\n    /* \"#utility.yul\":3752:3841   */\n  tag_147\n    /* \"#utility.yul\":3833:3840   */\n  dup6\n    /* \"#utility.yul\":3824:3830   */\n  dup3\n    /* \"#utility.yul\":3813:3822   */\n  dup7\n    /* \"#utility.yul\":3809:3831   */\n  add\n    /* \"#utility.yul\":3752:3841   */\n  tag_77\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3742:3841   */\n  swap3\n  pop\n    /* \"#utility.yul\":3545:3851   */\n  pop\n    /* \"#utility.yul\":3890:3892   */\n  0x20\n    /* \"#utility.yul\":3916:3980   */\n  tag_148\n    /* \"#utility.yul\":3972:3979   */\n  dup6\n    /* \"#utility.yul\":3963:3969   */\n  dup3\n    /* \"#utility.yul\":3952:3961   */\n  dup7\n    /* \"#utility.yul\":3948:3970   */\n  add\n    /* \"#utility.yul\":3916:3980   */\n  tag_75\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3906:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3861:3990   */\n  pop\n    /* \"#utility.yul\":3287:3997   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4003:4102   */\ntag_78:\n    /* \"#utility.yul\":4055:4061   */\n  0x00\n    /* \"#utility.yul\":4089:4094   */\n  dup2\n    /* \"#utility.yul\":4083:4095   */\n  mload\n    /* \"#utility.yul\":4073:4095   */\n  swap1\n  pop\n    /* \"#utility.yul\":4003:4102   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4108:4288   */\ntag_79:\n    /* \"#utility.yul\":4156:4233   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4153:4154   */\n  0x00\n    /* \"#utility.yul\":4146:4234   */\n  mstore\n    /* \"#utility.yul\":4253:4257   */\n  0x22\n    /* \"#utility.yul\":4250:4251   */\n  0x04\n    /* \"#utility.yul\":4243:4258   */\n  mstore\n    /* \"#utility.yul\":4277:4281   */\n  0x24\n    /* \"#utility.yul\":4274:4275   */\n  0x00\n    /* \"#utility.yul\":4267:4282   */\n  revert\n    /* \"#utility.yul\":4294:4614   */\ntag_80:\n    /* \"#utility.yul\":4338:4344   */\n  0x00\n    /* \"#utility.yul\":4375:4376   */\n  0x02\n    /* \"#utility.yul\":4369:4373   */\n  dup3\n    /* \"#utility.yul\":4365:4377   */\n  div\n    /* \"#utility.yul\":4355:4377   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4423   */\n  0x01\n    /* \"#utility.yul\":4416:4420   */\n  dup3\n    /* \"#utility.yul\":4412:4424   */\n  and\n    /* \"#utility.yul\":4443:4461   */\n  dup1\n    /* \"#utility.yul\":4433:4514   */\n  tag_152\n  jumpi\n    /* \"#utility.yul\":4499:4503   */\n  0x7f\n    /* \"#utility.yul\":4491:4497   */\n  dup3\n    /* \"#utility.yul\":4487:4504   */\n  and\n    /* \"#utility.yul\":4477:4504   */\n  swap2\n  pop\n    /* \"#utility.yul\":4433:4514   */\ntag_152:\n    /* \"#utility.yul\":4561:4563   */\n  0x20\n    /* \"#utility.yul\":4553:4559   */\n  dup3\n    /* \"#utility.yul\":4550:4564   */\n  lt\n    /* \"#utility.yul\":4530:4548   */\n  dup2\n    /* \"#utility.yul\":4527:4565   */\n  sub\n    /* \"#utility.yul\":4524:4608   */\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4580:4598   */\n  tag_154\n  tag_79\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4524:4608   */\ntag_153:\n    /* \"#utility.yul\":4345:4614   */\n  pop\n    /* \"#utility.yul\":4294:4614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4620:4761   */\ntag_81:\n    /* \"#utility.yul\":4669:4673   */\n  0x00\n    /* \"#utility.yul\":4692:4695   */\n  dup2\n    /* \"#utility.yul\":4684:4695   */\n  swap1\n  pop\n    /* \"#utility.yul\":4715:4718   */\n  dup2\n    /* \"#utility.yul\":4712:4713   */\n  0x00\n    /* \"#utility.yul\":4705:4719   */\n  mstore\n    /* \"#utility.yul\":4749:4753   */\n  0x20\n    /* \"#utility.yul\":4746:4747   */\n  0x00\n    /* \"#utility.yul\":4736:4754   */\n  keccak256\n    /* \"#utility.yul\":4728:4754   */\n  swap1\n  pop\n    /* \"#utility.yul\":4620:4761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4767:4860   */\ntag_82:\n    /* \"#utility.yul\":4804:4810   */\n  0x00\n    /* \"#utility.yul\":4851:4853   */\n  0x20\n    /* \"#utility.yul\":4846:4848   */\n  0x1f\n    /* \"#utility.yul\":4839:4844   */\n  dup4\n    /* \"#utility.yul\":4835:4849   */\n  add\n    /* \"#utility.yul\":4831:4854   */\n  div\n    /* \"#utility.yul\":4821:4854   */\n  swap1\n  pop\n    /* \"#utility.yul\":4767:4860   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:4973   */\ntag_83:\n    /* \"#utility.yul\":4910:4918   */\n  0x00\n    /* \"#utility.yul\":4960:4965   */\n  dup3\n    /* \"#utility.yul\":4954:4958   */\n  dup3\n    /* \"#utility.yul\":4950:4966   */\n  shl\n    /* \"#utility.yul\":4929:4966   */\n  swap1\n  pop\n    /* \"#utility.yul\":4866:4973   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4979:5372   */\ntag_84:\n    /* \"#utility.yul\":5048:5054   */\n  0x00\n    /* \"#utility.yul\":5098:5099   */\n  0x08\n    /* \"#utility.yul\":5086:5096   */\n  dup4\n    /* \"#utility.yul\":5082:5100   */\n  mul\n    /* \"#utility.yul\":5121:5218   */\n  tag_159\n    /* \"#utility.yul\":5151:5217   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5140:5149   */\n  dup3\n    /* \"#utility.yul\":5121:5218   */\n  tag_83\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5239:5278   */\n  tag_160\n    /* \"#utility.yul\":5269:5277   */\n  dup7\n    /* \"#utility.yul\":5258:5267   */\n  dup4\n    /* \"#utility.yul\":5239:5278   */\n  tag_83\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5227:5278   */\n  swap6\n  pop\n    /* \"#utility.yul\":5311:5315   */\n  dup1\n    /* \"#utility.yul\":5307:5316   */\n  not\n    /* \"#utility.yul\":5300:5305   */\n  dup5\n    /* \"#utility.yul\":5296:5317   */\n  and\n    /* \"#utility.yul\":5287:5317   */\n  swap4\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5350:5358   */\n  dup7\n    /* \"#utility.yul\":5346:5365   */\n  and\n    /* \"#utility.yul\":5339:5344   */\n  dup5\n    /* \"#utility.yul\":5336:5366   */\n  or\n    /* \"#utility.yul\":5326:5366   */\n  swap3\n  pop\n    /* \"#utility.yul\":5055:5372   */\n  pop\n  pop\n    /* \"#utility.yul\":4979:5372   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5378:5455   */\ntag_85:\n    /* \"#utility.yul\":5415:5422   */\n  0x00\n    /* \"#utility.yul\":5444:5449   */\n  dup2\n    /* \"#utility.yul\":5433:5449   */\n  swap1\n  pop\n    /* \"#utility.yul\":5378:5455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:5521   */\ntag_86:\n    /* \"#utility.yul\":5489:5492   */\n  0x00\n    /* \"#utility.yul\":5510:5515   */\n  dup2\n    /* \"#utility.yul\":5503:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5461:5521   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5527:5669   */\ntag_87:\n    /* \"#utility.yul\":5577:5586   */\n  0x00\n    /* \"#utility.yul\":5610:5663   */\n  tag_164\n    /* \"#utility.yul\":5628:5662   */\n  tag_165\n    /* \"#utility.yul\":5637:5661   */\n  tag_166\n    /* \"#utility.yul\":5655:5660   */\n  dup5\n    /* \"#utility.yul\":5637:5661   */\n  tag_85\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5628:5662   */\n  tag_86\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5610:5663   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5597:5663   */\n  swap1\n  pop\n    /* \"#utility.yul\":5527:5669   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5675:5750   */\ntag_88:\n    /* \"#utility.yul\":5718:5721   */\n  0x00\n    /* \"#utility.yul\":5739:5744   */\n  dup2\n    /* \"#utility.yul\":5732:5744   */\n  swap1\n  pop\n    /* \"#utility.yul\":5675:5750   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5756:6025   */\ntag_89:\n    /* \"#utility.yul\":5866:5905   */\n  tag_169\n    /* \"#utility.yul\":5897:5904   */\n  dup4\n    /* \"#utility.yul\":5866:5905   */\n  tag_87\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5927:6018   */\n  tag_170\n    /* \"#utility.yul\":5976:6017   */\n  tag_171\n    /* \"#utility.yul\":6000:6016   */\n  dup3\n    /* \"#utility.yul\":5976:6017   */\n  tag_88\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5968:5974   */\n  dup5\n    /* \"#utility.yul\":5961:5965   */\n  dup5\n    /* \"#utility.yul\":5955:5966   */\n  sload\n    /* \"#utility.yul\":5927:6018   */\n  tag_84\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5921:5925   */\n  dup3\n    /* \"#utility.yul\":5914:6019   */\n  sstore\n    /* \"#utility.yul\":5832:6025   */\n  pop\n    /* \"#utility.yul\":5756:6025   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6031:6104   */\ntag_90:\n    /* \"#utility.yul\":6076:6079   */\n  0x00\n    /* \"#utility.yul\":6097:6098   */\n  0x00\n    /* \"#utility.yul\":6090:6098   */\n  swap1\n  pop\n    /* \"#utility.yul\":6031:6104   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6110:6299   */\ntag_91:\n    /* \"#utility.yul\":6187:6219   */\n  tag_174\n  tag_90\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6228:6293   */\n  tag_175\n    /* \"#utility.yul\":6286:6292   */\n  dup2\n    /* \"#utility.yul\":6278:6284   */\n  dup5\n    /* \"#utility.yul\":6272:6276   */\n  dup5\n    /* \"#utility.yul\":6228:6293   */\n  tag_89\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6163:6299   */\n  pop\n    /* \"#utility.yul\":6110:6299   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6305:6491   */\ntag_92:\n    /* \"#utility.yul\":6365:6485   */\ntag_177:\n    /* \"#utility.yul\":6382:6385   */\n  dup2\n    /* \"#utility.yul\":6375:6380   */\n  dup2\n    /* \"#utility.yul\":6372:6386   */\n  lt\n    /* \"#utility.yul\":6365:6485   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":6436:6475   */\n  tag_180\n    /* \"#utility.yul\":6473:6474   */\n  0x00\n    /* \"#utility.yul\":6466:6471   */\n  dup3\n    /* \"#utility.yul\":6436:6475   */\n  tag_91\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6409:6410   */\n  0x01\n    /* \"#utility.yul\":6402:6407   */\n  dup2\n    /* \"#utility.yul\":6398:6411   */\n  add\n    /* \"#utility.yul\":6389:6411   */\n  swap1\n  pop\n    /* \"#utility.yul\":6365:6485   */\n  jump(tag_177)\ntag_179:\n    /* \"#utility.yul\":6305:6491   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6497:7040   */\ntag_93:\n    /* \"#utility.yul\":6598:6600   */\n  0x1f\n    /* \"#utility.yul\":6593:6596   */\n  dup3\n    /* \"#utility.yul\":6590:6601   */\n  gt\n    /* \"#utility.yul\":6587:7033   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":6632:6670   */\n  tag_183\n    /* \"#utility.yul\":6664:6669   */\n  dup2\n    /* \"#utility.yul\":6632:6670   */\n  tag_81\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6716:6745   */\n  tag_184\n    /* \"#utility.yul\":6734:6744   */\n  dup5\n    /* \"#utility.yul\":6716:6745   */\n  tag_82\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6706:6714   */\n  dup2\n    /* \"#utility.yul\":6702:6746   */\n  add\n    /* \"#utility.yul\":6899:6901   */\n  0x20\n    /* \"#utility.yul\":6887:6897   */\n  dup6\n    /* \"#utility.yul\":6884:6902   */\n  lt\n    /* \"#utility.yul\":6881:6930   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6920:6928   */\n  dup2\n    /* \"#utility.yul\":6905:6928   */\n  swap1\n  pop\n    /* \"#utility.yul\":6881:6930   */\ntag_185:\n    /* \"#utility.yul\":6943:7023   */\n  tag_186\n    /* \"#utility.yul\":6999:7021   */\n  tag_187\n    /* \"#utility.yul\":7017:7020   */\n  dup6\n    /* \"#utility.yul\":6999:7021   */\n  tag_82\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":6989:6997   */\n  dup4\n    /* \"#utility.yul\":6985:7022   */\n  add\n    /* \"#utility.yul\":6972:6983   */\n  dup3\n    /* \"#utility.yul\":6943:7023   */\n  tag_92\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6602:7033   */\n  pop\n  pop\n    /* \"#utility.yul\":6587:7033   */\ntag_182:\n    /* \"#utility.yul\":6497:7040   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7046:7163   */\ntag_94:\n    /* \"#utility.yul\":7100:7108   */\n  0x00\n    /* \"#utility.yul\":7150:7155   */\n  dup3\n    /* \"#utility.yul\":7144:7148   */\n  dup3\n    /* \"#utility.yul\":7140:7156   */\n  shr\n    /* \"#utility.yul\":7119:7156   */\n  swap1\n  pop\n    /* \"#utility.yul\":7046:7163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7169:7338   */\ntag_95:\n    /* \"#utility.yul\":7213:7219   */\n  0x00\n    /* \"#utility.yul\":7246:7297   */\n  tag_190\n    /* \"#utility.yul\":7294:7295   */\n  0x00\n    /* \"#utility.yul\":7290:7296   */\n  not\n    /* \"#utility.yul\":7282:7287   */\n  dup5\n    /* \"#utility.yul\":7279:7280   */\n  0x08\n    /* \"#utility.yul\":7275:7288   */\n  mul\n    /* \"#utility.yul\":7246:7297   */\n  tag_94\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7242:7298   */\n  not\n    /* \"#utility.yul\":7327:7331   */\n  dup1\n    /* \"#utility.yul\":7321:7325   */\n  dup4\n    /* \"#utility.yul\":7317:7332   */\n  and\n    /* \"#utility.yul\":7307:7332   */\n  swap2\n  pop\n    /* \"#utility.yul\":7220:7338   */\n  pop\n    /* \"#utility.yul\":7169:7338   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7343:7638   */\ntag_96:\n    /* \"#utility.yul\":7419:7423   */\n  0x00\n    /* \"#utility.yul\":7565:7594   */\n  tag_192\n    /* \"#utility.yul\":7590:7593   */\n  dup4\n    /* \"#utility.yul\":7584:7588   */\n  dup4\n    /* \"#utility.yul\":7565:7594   */\n  tag_95\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7557:7594   */\n  swap2\n  pop\n    /* \"#utility.yul\":7627:7630   */\n  dup3\n    /* \"#utility.yul\":7624:7625   */\n  0x02\n    /* \"#utility.yul\":7620:7631   */\n  mul\n    /* \"#utility.yul\":7614:7618   */\n  dup3\n    /* \"#utility.yul\":7611:7632   */\n  or\n    /* \"#utility.yul\":7603:7632   */\n  swap1\n  pop\n    /* \"#utility.yul\":7343:7638   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7643:9038   */\ntag_9:\n    /* \"#utility.yul\":7760:7797   */\n  tag_194\n    /* \"#utility.yul\":7793:7796   */\n  dup3\n    /* \"#utility.yul\":7760:7797   */\n  tag_78\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7862:7880   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7854:7860   */\n  dup2\n    /* \"#utility.yul\":7851:7881   */\n  gt\n    /* \"#utility.yul\":7848:7904   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":7884:7902   */\n  tag_196\n  tag_67\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7848:7904   */\ntag_195:\n    /* \"#utility.yul\":7928:7966   */\n  tag_197\n    /* \"#utility.yul\":7960:7964   */\n  dup3\n    /* \"#utility.yul\":7954:7965   */\n  sload\n    /* \"#utility.yul\":7928:7966   */\n  tag_80\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":8013:8080   */\n  tag_198\n    /* \"#utility.yul\":8073:8079   */\n  dup3\n    /* \"#utility.yul\":8065:8071   */\n  dup3\n    /* \"#utility.yul\":8059:8063   */\n  dup6\n    /* \"#utility.yul\":8013:8080   */\n  tag_93\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8107:8108   */\n  0x00\n    /* \"#utility.yul\":8131:8135   */\n  0x20\n    /* \"#utility.yul\":8118:8135   */\n  swap1\n  pop\n    /* \"#utility.yul\":8163:8165   */\n  0x1f\n    /* \"#utility.yul\":8155:8161   */\n  dup4\n    /* \"#utility.yul\":8152:8166   */\n  gt\n    /* \"#utility.yul\":8180:8181   */\n  0x01\n    /* \"#utility.yul\":8175:8793   */\n  dup2\n  eq\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8837:8838   */\n  0x00\n    /* \"#utility.yul\":8854:8860   */\n  dup5\n    /* \"#utility.yul\":8851:8928   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8903:8912   */\n  dup3\n    /* \"#utility.yul\":8898:8901   */\n  dup8\n    /* \"#utility.yul\":8894:8913   */\n  add\n    /* \"#utility.yul\":8888:8914   */\n  mload\n    /* \"#utility.yul\":8879:8914   */\n  swap1\n  pop\n    /* \"#utility.yul\":8851:8928   */\ntag_201:\n    /* \"#utility.yul\":8954:9021   */\n  tag_202\n    /* \"#utility.yul\":9014:9020   */\n  dup6\n    /* \"#utility.yul\":9007:9012   */\n  dup3\n    /* \"#utility.yul\":8954:9021   */\n  tag_96\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8948:8952   */\n  dup7\n    /* \"#utility.yul\":8941:9022   */\n  sstore\n    /* \"#utility.yul\":8810:9032   */\n  pop\n    /* \"#utility.yul\":8145:9032   */\n  jump(tag_199)\n    /* \"#utility.yul\":8175:8793   */\ntag_200:\n    /* \"#utility.yul\":8227:8231   */\n  0x1f\n    /* \"#utility.yul\":8223:8232   */\n  not\n    /* \"#utility.yul\":8215:8221   */\n  dup5\n    /* \"#utility.yul\":8211:8233   */\n  and\n    /* \"#utility.yul\":8261:8298   */\n  tag_203\n    /* \"#utility.yul\":8293:8297   */\n  dup7\n    /* \"#utility.yul\":8261:8298   */\n  tag_81\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8320:8321   */\n  0x00\n    /* \"#utility.yul\":8334:8542   */\ntag_204:\n    /* \"#utility.yul\":8348:8355   */\n  dup3\n    /* \"#utility.yul\":8345:8346   */\n  dup2\n    /* \"#utility.yul\":8342:8356   */\n  lt\n    /* \"#utility.yul\":8334:8542   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":8427:8436   */\n  dup5\n    /* \"#utility.yul\":8422:8425   */\n  dup10\n    /* \"#utility.yul\":8418:8437   */\n  add\n    /* \"#utility.yul\":8412:8438   */\n  mload\n    /* \"#utility.yul\":8404:8410   */\n  dup3\n    /* \"#utility.yul\":8397:8439   */\n  sstore\n    /* \"#utility.yul\":8478:8479   */\n  0x01\n    /* \"#utility.yul\":8470:8476   */\n  dup3\n    /* \"#utility.yul\":8466:8480   */\n  add\n    /* \"#utility.yul\":8456:8480   */\n  swap2\n  pop\n    /* \"#utility.yul\":8525:8527   */\n  0x20\n    /* \"#utility.yul\":8514:8523   */\n  dup6\n    /* \"#utility.yul\":8510:8528   */\n  add\n    /* \"#utility.yul\":8497:8528   */\n  swap5\n  pop\n    /* \"#utility.yul\":8371:8375   */\n  0x20\n    /* \"#utility.yul\":8368:8369   */\n  dup2\n    /* \"#utility.yul\":8364:8376   */\n  add\n    /* \"#utility.yul\":8359:8376   */\n  swap1\n  pop\n    /* \"#utility.yul\":8334:8542   */\n  jump(tag_204)\ntag_206:\n    /* \"#utility.yul\":8570:8576   */\n  dup7\n    /* \"#utility.yul\":8561:8568   */\n  dup4\n    /* \"#utility.yul\":8558:8577   */\n  lt\n    /* \"#utility.yul\":8555:8734   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":8628:8637   */\n  dup5\n    /* \"#utility.yul\":8623:8626   */\n  dup10\n    /* \"#utility.yul\":8619:8638   */\n  add\n    /* \"#utility.yul\":8613:8639   */\n  mload\n    /* \"#utility.yul\":8671:8719   */\n  tag_208\n    /* \"#utility.yul\":8713:8717   */\n  0x1f\n    /* \"#utility.yul\":8705:8711   */\n  dup10\n    /* \"#utility.yul\":8701:8718   */\n  and\n    /* \"#utility.yul\":8690:8699   */\n  dup3\n    /* \"#utility.yul\":8671:8719   */\n  tag_95\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8663:8669   */\n  dup4\n    /* \"#utility.yul\":8656:8720   */\n  sstore\n    /* \"#utility.yul\":8578:8734   */\n  pop\n    /* \"#utility.yul\":8555:8734   */\ntag_207:\n    /* \"#utility.yul\":8780:8781   */\n  0x01\n    /* \"#utility.yul\":8776:8777   */\n  0x02\n    /* \"#utility.yul\":8768:8774   */\n  dup9\n    /* \"#utility.yul\":8764:8778   */\n  mul\n    /* \"#utility.yul\":8760:8782   */\n  add\n    /* \"#utility.yul\":8754:8758   */\n  dup9\n    /* \"#utility.yul\":8747:8783   */\n  sstore\n    /* \"#utility.yul\":8182:8793   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8145:9032   */\ntag_199:\n  pop\n    /* \"#utility.yul\":7735:9038   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7643:9038   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9044:9162   */\ntag_97:\n    /* \"#utility.yul\":9131:9155   */\n  tag_210\n    /* \"#utility.yul\":9149:9154   */\n  dup2\n    /* \"#utility.yul\":9131:9155   */\n  tag_73\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":9126:9129   */\n  dup3\n    /* \"#utility.yul\":9119:9156   */\n  mstore\n    /* \"#utility.yul\":9044:9162   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9168:9390   */\ntag_14:\n    /* \"#utility.yul\":9261:9265   */\n  0x00\n    /* \"#utility.yul\":9299:9301   */\n  0x20\n    /* \"#utility.yul\":9288:9297   */\n  dup3\n    /* \"#utility.yul\":9284:9302   */\n  add\n    /* \"#utility.yul\":9276:9302   */\n  swap1\n  pop\n    /* \"#utility.yul\":9312:9383   */\n  tag_212\n    /* \"#utility.yul\":9380:9381   */\n  0x00\n    /* \"#utility.yul\":9369:9378   */\n  dup4\n    /* \"#utility.yul\":9365:9382   */\n  add\n    /* \"#utility.yul\":9356:9362   */\n  dup5\n    /* \"#utility.yul\":9312:9383   */\n  tag_97\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9168:9390   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9396:9565   */\ntag_98:\n    /* \"#utility.yul\":9480:9491   */\n  0x00\n    /* \"#utility.yul\":9514:9520   */\n  dup3\n    /* \"#utility.yul\":9509:9512   */\n  dup3\n    /* \"#utility.yul\":9502:9521   */\n  mstore\n    /* \"#utility.yul\":9554:9558   */\n  0x20\n    /* \"#utility.yul\":9549:9552   */\n  dup3\n    /* \"#utility.yul\":9545:9559   */\n  add\n    /* \"#utility.yul\":9530:9559   */\n  swap1\n  pop\n    /* \"#utility.yul\":9396:9565   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9799   */\ntag_99:\n    /* \"#utility.yul\":9711:9745   */\n  0x4174206c65617374206f6e652077686974656c69737465642061646472657373\n    /* \"#utility.yul\":9707:9708   */\n  0x00\n    /* \"#utility.yul\":9699:9705   */\n  dup3\n    /* \"#utility.yul\":9695:9709   */\n  add\n    /* \"#utility.yul\":9688:9746   */\n  mstore\n    /* \"#utility.yul\":9780:9791   */\n  0x2072657175697265640000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9775:9777   */\n  0x20\n    /* \"#utility.yul\":9767:9773   */\n  dup3\n    /* \"#utility.yul\":9763:9778   */\n  add\n    /* \"#utility.yul\":9756:9792   */\n  mstore\n    /* \"#utility.yul\":9571:9799   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9805:10171   */\ntag_100:\n    /* \"#utility.yul\":9947:9950   */\n  0x00\n    /* \"#utility.yul\":9968:10035   */\n  tag_216\n    /* \"#utility.yul\":10032:10034   */\n  0x29\n    /* \"#utility.yul\":10027:10030   */\n  dup4\n    /* \"#utility.yul\":9968:10035   */\n  tag_98\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9961:10035   */\n  swap2\n  pop\n    /* \"#utility.yul\":10044:10137   */\n  tag_217\n    /* \"#utility.yul\":10133:10136   */\n  dup3\n    /* \"#utility.yul\":10044:10137   */\n  tag_99\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10162:10164   */\n  0x40\n    /* \"#utility.yul\":10157:10160   */\n  dup3\n    /* \"#utility.yul\":10153:10165   */\n  add\n    /* \"#utility.yul\":10146:10165   */\n  swap1\n  pop\n    /* \"#utility.yul\":9805:10171   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10177:10596   */\ntag_30:\n    /* \"#utility.yul\":10343:10347   */\n  0x00\n    /* \"#utility.yul\":10381:10383   */\n  0x20\n    /* \"#utility.yul\":10370:10379   */\n  dup3\n    /* \"#utility.yul\":10366:10384   */\n  add\n    /* \"#utility.yul\":10358:10384   */\n  swap1\n  pop\n    /* \"#utility.yul\":10430:10439   */\n  dup2\n    /* \"#utility.yul\":10424:10428   */\n  dup2\n    /* \"#utility.yul\":10420:10440   */\n  sub\n    /* \"#utility.yul\":10416:10417   */\n  0x00\n    /* \"#utility.yul\":10405:10414   */\n  dup4\n    /* \"#utility.yul\":10401:10418   */\n  add\n    /* \"#utility.yul\":10394:10441   */\n  mstore\n    /* \"#utility.yul\":10458:10589   */\n  tag_219\n    /* \"#utility.yul\":10584:10588   */\n  dup2\n    /* \"#utility.yul\":10458:10589   */\n  tag_100\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10450:10589   */\n  swap1\n  pop\n    /* \"#utility.yul\":10177:10596   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10602:10782   */\ntag_36:\n    /* \"#utility.yul\":10650:10727   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10647:10648   */\n  0x00\n    /* \"#utility.yul\":10640:10728   */\n  mstore\n    /* \"#utility.yul\":10747:10751   */\n  0x32\n    /* \"#utility.yul\":10744:10745   */\n  0x04\n    /* \"#utility.yul\":10737:10752   */\n  mstore\n    /* \"#utility.yul\":10771:10775   */\n  0x24\n    /* \"#utility.yul\":10768:10769   */\n  0x00\n    /* \"#utility.yul\":10761:10776   */\n  revert\n    /* \"#utility.yul\":10788:10968   */\ntag_101:\n    /* \"#utility.yul\":10836:10913   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10833:10834   */\n  0x00\n    /* \"#utility.yul\":10826:10914   */\n  mstore\n    /* \"#utility.yul\":10933:10937   */\n  0x11\n    /* \"#utility.yul\":10930:10931   */\n  0x04\n    /* \"#utility.yul\":10923:10938   */\n  mstore\n    /* \"#utility.yul\":10957:10961   */\n  0x24\n    /* \"#utility.yul\":10954:10955   */\n  0x00\n    /* \"#utility.yul\":10947:10962   */\n  revert\n    /* \"#utility.yul\":10974:11165   */\ntag_53:\n    /* \"#utility.yul\":11014:11017   */\n  0x00\n    /* \"#utility.yul\":11033:11053   */\n  tag_223\n    /* \"#utility.yul\":11051:11052   */\n  dup3\n    /* \"#utility.yul\":11033:11053   */\n  tag_85\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11028:11053   */\n  swap2\n  pop\n    /* \"#utility.yul\":11067:11087   */\n  tag_224\n    /* \"#utility.yul\":11085:11086   */\n  dup4\n    /* \"#utility.yul\":11067:11087   */\n  tag_85\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11062:11087   */\n  swap3\n  pop\n    /* \"#utility.yul\":11110:11111   */\n  dup3\n    /* \"#utility.yul\":11107:11108   */\n  dup3\n    /* \"#utility.yul\":11103:11112   */\n  add\n    /* \"#utility.yul\":11096:11112   */\n  swap1\n  pop\n    /* \"#utility.yul\":11131:11134   */\n  dup1\n    /* \"#utility.yul\":11128:11129   */\n  dup3\n    /* \"#utility.yul\":11125:11135   */\n  gt\n    /* \"#utility.yul\":11122:11158   */\n  iszero\n  tag_225\n  jumpi\n    /* \"#utility.yul\":11138:11156   */\n  tag_226\n  tag_101\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":11122:11158   */\ntag_225:\n    /* \"#utility.yul\":10974:11165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11171:11289   */\ntag_102:\n    /* \"#utility.yul\":11258:11282   */\n  tag_228\n    /* \"#utility.yul\":11276:11281   */\n  dup2\n    /* \"#utility.yul\":11258:11282   */\n  tag_85\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11253:11256   */\n  dup3\n    /* \"#utility.yul\":11246:11283   */\n  mstore\n    /* \"#utility.yul\":11171:11289   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11295:11737   */\ntag_57:\n    /* \"#utility.yul\":11444:11448   */\n  0x00\n    /* \"#utility.yul\":11482:11484   */\n  0x60\n    /* \"#utility.yul\":11471:11480   */\n  dup3\n    /* \"#utility.yul\":11467:11485   */\n  add\n    /* \"#utility.yul\":11459:11485   */\n  swap1\n  pop\n    /* \"#utility.yul\":11495:11566   */\n  tag_230\n    /* \"#utility.yul\":11563:11564   */\n  0x00\n    /* \"#utility.yul\":11552:11561   */\n  dup4\n    /* \"#utility.yul\":11548:11565   */\n  add\n    /* \"#utility.yul\":11539:11545   */\n  dup7\n    /* \"#utility.yul\":11495:11566   */\n  tag_97\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":11576:11648   */\n  tag_231\n    /* \"#utility.yul\":11644:11646   */\n  0x20\n    /* \"#utility.yul\":11633:11642   */\n  dup4\n    /* \"#utility.yul\":11629:11647   */\n  add\n    /* \"#utility.yul\":11620:11626   */\n  dup6\n    /* \"#utility.yul\":11576:11648   */\n  tag_102\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11658:11730   */\n  tag_232\n    /* \"#utility.yul\":11726:11728   */\n  0x40\n    /* \"#utility.yul\":11715:11724   */\n  dup4\n    /* \"#utility.yul\":11711:11729   */\n  add\n    /* \"#utility.yul\":11702:11708   */\n  dup5\n    /* \"#utility.yul\":11658:11730   */\n  tag_102\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11295:11737   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11743:11965   */\ntag_61:\n    /* \"#utility.yul\":11836:11840   */\n  0x00\n    /* \"#utility.yul\":11874:11876   */\n  0x20\n    /* \"#utility.yul\":11863:11872   */\n  dup3\n    /* \"#utility.yul\":11859:11877   */\n  add\n    /* \"#utility.yul\":11851:11877   */\n  swap1\n  pop\n    /* \"#utility.yul\":11887:11958   */\n  tag_234\n    /* \"#utility.yul\":11955:11956   */\n  0x00\n    /* \"#utility.yul\":11944:11953   */\n  dup4\n    /* \"#utility.yul\":11940:11957   */\n  add\n    /* \"#utility.yul\":11931:11937   */\n  dup5\n    /* \"#utility.yul\":11887:11958   */\n  tag_102\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":11743:11965   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54898:60430  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_43:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54898:60430  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xaba63705\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x715018a6\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x84900b04\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6290865d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x56dd475a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2630c12f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2d380242\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12cae7af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x134e18f4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x158b1a57\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58013:58121  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58707:58810  function identityRegistry() external view override returns (address) {... */\n    tag_6:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59804:59916  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_7:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57496:57825  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_9:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55266:55296  PriceOracle public priceOracle */\n    tag_10:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55037:55064  uint256 public mintedAmount */\n    tag_11:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60338:60428  function decimals() public view virtual override returns (uint8) {... */\n    tag_12:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56374:56655  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_13:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58459:58556  function version() external view override returns (string memory) {... */\n    tag_14:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55188:55222  Freezable public freezableContract */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59193:59279  function paused() external view override returns (bool) {... */\n    tag_16:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58947:59044  function compliance() external view override returns (address) {... */\n    tag_17:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13854:13970  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24014:24115  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55110:55144  Whitelist public whitelistContract */\n    tag_20:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23359:23444  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54950:55005  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_22:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12831:12924  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56898:57199  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_24:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58247:58346  function onchainID() external view override returns (address) {... */\n    tag_25:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14401:14541  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59450:59590  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_27:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60049:60161  function getCurrentPrice() external view returns (uint256) {... */\n    tag_28:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24264:24479  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12674:12687  string memory */\n      0x60\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12706:12711  _name */\n      0x03\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12699:12711  return _name */\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_138\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12629:12718  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14921:14925  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14937:14950  address owner */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14953:14965  _msgSender() */\n      tag_144\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14953:14963  _msgSender */\n      tag_145\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14953:14965  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14937:14965  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14975:15006  _approve(owner, spender, value) */\n      tag_146\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14984:14989  owner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14991:14998  spender */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15000:15005  value */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14975:14983  _approve */\n      tag_147\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14975:15006  _approve(owner, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15023:15027  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15016:15027  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14848:15034  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58013:58121  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_49:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58073:58080  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58099:58114  balanceOf(user) */\n      tag_149\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58109:58113  user */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58099:58108  balanceOf */\n      tag_97\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58099:58114  balanceOf(user) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58092:58114  return balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58013:58121  function balanceOfUser(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58707:58810  function identityRegistry() external view override returns (address) {... */\n    tag_53:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58767:58774  address */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58801:58802  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58786:58803  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58707:58810  function identityRegistry() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59804:59916  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_58:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59882:59889  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59908:59909  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59901:59909  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59804:59916  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13751:13758  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13777:13789  _totalSupply */\n      sload(0x02)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13770:13789  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13699:13796  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57496:57825  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_66:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57594:57598  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57619:57636  freezableContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57619:57645  freezableContract.isFrozen */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe5839836\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57646:57652  sender */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57619:57653  freezableContract.isFrozen(sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57618:57653  !freezableContract.isFrozen(sender) */\n      iszero\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57610:57674  require(!freezableContract.isFrozen(sender), \"Sender is frozen\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57718:57724  amount */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57702:57726  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57692:57698  amount */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57692:57726  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57684:57756  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57773:57818  super.transferFrom(sender, recipient, amount) */\n      tag_165\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57792:57798  sender */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57800:57809  recipient */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57811:57817  amount */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57773:57791  super.transferFrom */\n      tag_166\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57773:57818  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57766:57818  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57496:57825  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55266:55296  PriceOracle public priceOracle */\n    tag_69:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55037:55064  uint256 public mintedAmount */\n    tag_73:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60338:60428  function decimals() public view virtual override returns (uint8) {... */\n    tag_76:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60396:60401  uint8 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60420:60421  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60413:60421  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60338:60428  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56374:56655  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_81:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      tag_169\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23263  _checkOwner */\n      tag_170\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56453:56470  whitelistContract */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56453:56484  whitelistContract.isWhitelisted */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3af32abf\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56485:56487  to */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56453:56488  whitelistContract.isWhitelisted(to) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_172:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_175:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56445:56508  require(whitelistContract.isWhitelisted(to), \"Not whitelisted\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54989:55005  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56541:56547  amount */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56526:56538  mintedAmount */\n      sload(0x06)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56526:56547  mintedAmount + amount */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56526:56563  mintedAmount + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56518:56589  require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56599:56616  _mint(to, amount) */\n      tag_184\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56605:56607  to */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56609:56615  amount */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56599:56604  _mint */\n      tag_185\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56599:56616  _mint(to, amount) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56642:56648  amount */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56626:56638  mintedAmount */\n      0x06\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56626:56648  mintedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_186\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56374:56655  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58459:58556  function version() external view override returns (string memory) {... */\n    tag_83:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58510:58523  string memory */\n      0x60\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58535:58549  return \"1.0.0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58459:58556  function version() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55188:55222  Freezable public freezableContract */\n    tag_86:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59193:59279  function paused() external view override returns (bool) {... */\n    tag_90:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59243:59247  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59266:59271  false */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59259:59271  return false */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59193:59279  function paused() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58947:59044  function compliance() external view override returns (address) {... */\n    tag_93:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59001:59008  address */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59035:59036  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59020:59037  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58947:59044  function compliance() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13854:13970  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_97:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13919:13926  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13945:13954  _balances */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13945:13963  _balances[account] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13955:13962  account */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13945:13963  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13938:13963  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":13854:13970  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24014:24115  function renounceOwnership() public virtual onlyOwner {... */\n    tag_100:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      tag_192\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23263  _checkOwner */\n      tag_170\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24078:24108  _transferOwnership(address(0)) */\n      tag_194\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24105:24106  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24078:24096  _transferOwnership */\n      tag_195\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24078:24108  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24014:24115  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":55110:55144  Whitelist public whitelistContract */\n    tag_102:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23359:23444  function owner() public view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23405:23412  address */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23431:23437  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23424:23437  return _owner */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23359:23444  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54950:55005  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n    tag_109:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54989:55005  500_000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":54950:55005  uint256 public constant TOTAL_SUPPLY = 500_000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12831:12924  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12878:12891  string memory */\n      0x60\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12910:12917  _symbol */\n      0x04\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12903:12917  return _symbol */\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_138\n      jump\t// in\n    tag_198:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_138\n      jump\t// in\n    tag_199:\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_201\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_200)\n    tag_201:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_202:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_202\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":12831:12924  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56898:57199  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_116:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56976:56980  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57001:57018  freezableContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57001:57027  freezableContract.isFrozen */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe5839836\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57028:57038  msg.sender */\n      caller\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57001:57039  freezableContract.isFrozen(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_207:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57000:57039  !freezableContract.isFrozen(msg.sender) */\n      iszero\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56992:57060  require(!freezableContract.isFrozen(msg.sender), \"Sender is frozen\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_161\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57104:57110  amount */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57088:57112  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57078:57084  amount */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57078:57112  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57070:57142  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_164\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57159:57192  super.transfer(recipient, amount) */\n      tag_212\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57174:57183  recipient */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57185:57191  amount */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57159:57173  super.transfer */\n      tag_213\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57159:57192  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":57152:57192  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":56898:57199  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58247:58346  function onchainID() external view override returns (address) {... */\n    tag_119:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58300:58307  address */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58334:58338  this */\n      address\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58319:58339  return address(this) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":58247:58346  function onchainID() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14401:14541  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_124:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14481:14488  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14507:14518  _allowances */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14507:14525  _allowances[owner] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14519:14524  owner */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14507:14525  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14507:14534  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14526:14533  spender */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14507:14534  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14500:14534  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14401:14541  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59450:59590  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_128:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59521:59525  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59544:59561  freezableContract */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59544:59570  freezableContract.isFrozen */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe5839836\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59571:59582  userAddress */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59544:59583  freezableContract.isFrozen(userAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_220:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59537:59583  return freezableContract.isFrozen(userAddress) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":59450:59590  function isFrozen(address userAddress) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60049:60161  function getCurrentPrice() external view returns (uint256) {... */\n    tag_131:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60099:60106  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60125:60136  priceOracle */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60125:60152  priceOracle.getCurrentPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xeb91d37e\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60125:60154  priceOracle.getCurrentPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60118:60154  return priceOracle.getCurrentPrice() */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":60049:60161  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24264:24479  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_135:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      tag_227\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23263  _checkOwner */\n      tag_170\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23252:23265  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24368:24369  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24348:24370  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24348:24356  newOwner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24348:24370  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24344:24435  if (newOwner == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24421:24422  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24393:24424  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24344:24435  if (newOwner == address(0)) {... */\n    tag_229:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24444:24472  _transferOwnership(newOwner) */\n      tag_231\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24463:24471  newOwner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24444:24462  _transferOwnership */\n      tag_195\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24444:24472  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24264:24479  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":4177:4273  function _msgSender() internal view virtual returns (address) {... */\n    tag_145:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":4230:4237  address */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":4256:4266  msg.sender */\n      caller\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":4249:4266  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":4177:4273  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19576:19704  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_147:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19660:19697  _approve(owner, spender, value, true) */\n      tag_234\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19669:19674  owner */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19676:19683  spender */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19685:19690  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19692:19696  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19660:19668  _approve */\n      tag_235\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19660:19697  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":19576:19704  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15626:15870  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_166:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15713:15717  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15729:15744  address spender */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15747:15759  _msgSender() */\n      tag_237\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15747:15757  _msgSender */\n      tag_145\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15747:15759  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15729:15759  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15769:15806  _spendAllowance(from, spender, value) */\n      tag_238\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15785:15789  from */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15791:15798  spender */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15800:15805  value */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15769:15784  _spendAllowance */\n      tag_239\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15769:15806  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15816:15842  _transfer(from, to, value) */\n      tag_240\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15826:15830  from */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15832:15834  to */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15836:15841  value */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15816:15825  _transfer */\n      tag_241\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15816:15842  _transfer(from, to, value) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15859:15863  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15852:15863  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":15626:15870  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23517:23679  function _checkOwner() internal view virtual {... */\n    tag_170:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23587:23599  _msgSender() */\n      tag_243\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23587:23597  _msgSender */\n      tag_145\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23587:23599  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23576:23599  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23576:23583  owner() */\n      tag_244\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23576:23581  owner */\n      tag_106\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23576:23583  owner() */\n      jump\t// in\n    tag_244:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23576:23599  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23572:23673  if (owner() != _msgSender()) {... */\n      tag_245\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23649:23661  _msgSender() */\n      tag_246\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23649:23659  _msgSender */\n      tag_145\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23649:23661  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23622:23662  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23572:23673  if (owner() != _msgSender()) {... */\n    tag_245:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":23517:23679  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\n    tag_185:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18397:18398  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18399  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18385  account */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18378:18399  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18374:18465  if (account == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18451:18452  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18422:18454  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18374:18465  if (account == address(0)) {... */\n    tag_249:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18509  _update(address(0), account, value) */\n      tag_251\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18490:18491  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18494:18501  account */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18503:18508  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18481  _update */\n      tag_252\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18474:18509  _update(address(0), account, value) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":18308:18516  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24633:24820  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_195:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24706:24722  address oldOwner */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24725:24731  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24706:24731  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24750:24758  newOwner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24741:24747  _owner */\n      0x05\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24741:24758  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24804:24812  newOwner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24773:24813  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24794:24802  oldOwner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24773:24813  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24696:24820  {... */\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24633:24820  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14165:14343  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_213:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14234:14238  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14250:14263  address owner */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14266:14278  _msgSender() */\n      tag_255\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14266:14276  _msgSender */\n      tag_145\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14266:14278  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14250:14278  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14288:14315  _transfer(owner, to, value) */\n      tag_256\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14298:14303  owner */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14305:14307  to */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14309:14314  value */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14288:14297  _transfer */\n      tag_241\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14288:14315  _transfer(owner, to, value) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14332:14336  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14325:14336  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":14165:14343  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20551:20983  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_235:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20680:20681  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20663:20682  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20663:20668  owner */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20663:20682  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20659:20748  if (owner == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20734:20735  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20705:20737  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20659:20748  if (owner == address(0)) {... */\n    tag_258:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20780:20781  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20761:20782  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20761:20768  spender */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20761:20782  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20757:20847  if (spender == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20833:20834  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20805:20836  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20757:20847  if (spender == address(0)) {... */\n    tag_260:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20886:20891  value */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20867  _allowances */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20874  _allowances[owner] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20868:20873  owner */\n      dup7\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20874  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20883  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20875:20882  spender */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20883  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20856:20891  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20905:20914  emitEvent */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20901:20977  if (emitEvent) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20951:20958  spender */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20944:20949  owner */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20960:20965  value */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20935:20966  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20901:20977  if (emitEvent) {... */\n    tag_262:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":20551:20983  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21265:21741  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_239:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21364:21388  uint256 currentAllowance */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21391:21416  allowance(owner, spender) */\n      tag_265\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21401:21406  owner */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21408:21415  spender */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21391:21400  allowance */\n      tag_124\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21391:21416  allowance(owner, spender) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21364:21416  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21449:21466  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21430:21446  currentAllowance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21430:21466  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21426:21735  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21505:21510  value */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21486:21502  currentAllowance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21486:21510  currentAllowance < value */\n      lt\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21482:21612  if (currentAllowance < value) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21564:21571  spender */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21573:21589  currentAllowance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21591:21596  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21537:21597  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21482:21612  if (currentAllowance < value) {... */\n    tag_267:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21653:21710  _approve(owner, spender, currentAllowance - value, false) */\n      tag_270\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21662:21667  owner */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21669:21676  spender */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21697:21702  value */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21678:21694  currentAllowance */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21678:21702  currentAllowance - value */\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21704:21709  false */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21653:21661  _approve */\n      tag_235\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21653:21710  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21426:21735  if (currentAllowance < type(uint256).max) {... */\n    tag_266:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21354:21741  {... */\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":21265:21741  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16243:16543  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_241:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16342:16343  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16326:16344  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16326:16330  from */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16326:16344  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16322:16408  if (from == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16394:16395  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16367:16397  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16322:16408  if (from == address(0)) {... */\n    tag_272:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16435:16436  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16421:16437  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16421:16423  to */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16421:16437  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16417:16503  if (to == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16489:16490  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16460:16492  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16417:16503  if (to == address(0)) {... */\n    tag_274:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16512:16536  _update(from, to, value) */\n      tag_276\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16520:16524  from */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16526:16528  to */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16530:16535  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16512:16519  _update */\n      tag_252\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16512:16536  _update(from, to, value) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16243:16543  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_252:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16963:16964  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16965  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16951  from */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16947:16965  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17099:17104  value */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17083:17095  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17083:17104  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_279\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_279:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\n      jump(tag_280)\n    tag_278:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17135:17154  uint256 fromBalance */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17166  _balances */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17172  _balances[from] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17167:17171  from */\n      dup6\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17157:17172  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17135:17172  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17204:17209  value */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17190:17201  fromBalance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17190:17209  fromBalance < value */\n      lt\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17261:17265  from */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17267:17278  fromBalance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17280:17285  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17236:17286  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17186:17301  if (fromBalance < value) {... */\n    tag_281:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17453:17458  value */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17439:17450  fromBalance */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17439:17458  fromBalance - value */\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17430  _balances */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17436  _balances[from] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17431:17435  from */\n      dup7\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17436  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17421:17458  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17121:17483  {... */\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16943:17483  if (from == address(0)) {... */\n    tag_280:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17511:17512  0 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17513  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17499  to */\n      dup3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17497:17513  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17676:17681  value */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17660:17672  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17660:17681  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\n      jump(tag_284)\n    tag_283:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17888:17893  value */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17880  _balances */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17884  _balances[to] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17881:17883  to */\n      dup5\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17884  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17871:17893  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17493:17918  if (to == address(0)) {... */\n    tag_284:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17948:17950  to */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17942:17946  from */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17952:17957  value */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":17933:17958  Transfer(from, to, value) */\n      mload(0x40)\n      tag_285\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":16858:17965  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_286:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_287:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_288:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_289:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_290:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_335\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_286\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":711:782   */\n      tag_336\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_287\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_337\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_288\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":881:910   */\n      tag_338\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_289\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_340\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_290\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_292:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_294:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_295:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_346\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_294\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_296:\n        /* \"#utility.yul\":1876:1900   */\n      tag_348\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_295\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_349:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_297:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_351\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_296\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_298:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_299:\n        /* \"#utility.yul\":2232:2256   */\n      tag_354\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_298\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_355:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_300:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_357\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_299\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_42:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_360\n      tag_292\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2525:2644   */\n    tag_359:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_361\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_297\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_362\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_300\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_301:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_302:\n        /* \"#utility.yul\":3089:3110   */\n      tag_365\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_301\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_45:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_367\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_302\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_48:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_370\n      tag_292\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3415:3534   */\n    tag_369:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_371\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_297\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_303:\n        /* \"#utility.yul\":3761:3785   */\n      tag_373\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_298\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_51:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_375\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_303\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4144   */\n    tag_304:\n        /* \"#utility.yul\":4113:4137   */\n      tag_377\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4113:4137   */\n      tag_295\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4101:4138   */\n      mstore\n        /* \"#utility.yul\":4026:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4372   */\n    tag_55:\n        /* \"#utility.yul\":4243:4247   */\n      0x00\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4266:4284   */\n      add\n        /* \"#utility.yul\":4258:4284   */\n      swap1\n      pop\n        /* \"#utility.yul\":4294:4365   */\n      tag_379\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4365   */\n      tag_304\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4150:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4997   */\n    tag_65:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4463:4469   */\n      0x00\n        /* \"#utility.yul\":4471:4477   */\n      0x00\n        /* \"#utility.yul\":4520:4522   */\n      0x60\n        /* \"#utility.yul\":4508:4517   */\n      dup5\n        /* \"#utility.yul\":4499:4506   */\n      dup7\n        /* \"#utility.yul\":4495:4518   */\n      sub\n        /* \"#utility.yul\":4491:4523   */\n      slt\n        /* \"#utility.yul\":4488:4607   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":4526:4605   */\n      tag_382\n      tag_292\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4488:4607   */\n    tag_381:\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4671:4724   */\n      tag_383\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup8\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4671:4724   */\n      tag_297\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4661:4724   */\n      swap4\n      pop\n        /* \"#utility.yul\":4617:4734   */\n      pop\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4799:4852   */\n      tag_384\n        /* \"#utility.yul\":4844:4851   */\n      dup7\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup8\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4799:4852   */\n      tag_297\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4789:4852   */\n      swap3\n      pop\n        /* \"#utility.yul\":4744:4862   */\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4927:4980   */\n      tag_385\n        /* \"#utility.yul\":4972:4979   */\n      dup7\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup8\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_300\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4990   */\n      pop\n        /* \"#utility.yul\":4378:4997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5003:5063   */\n    tag_305:\n        /* \"#utility.yul\":5031:5034   */\n      0x00\n        /* \"#utility.yul\":5052:5057   */\n      dup2\n        /* \"#utility.yul\":5045:5057   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5211   */\n    tag_306:\n        /* \"#utility.yul\":5119:5128   */\n      0x00\n        /* \"#utility.yul\":5152:5205   */\n      tag_388\n        /* \"#utility.yul\":5170:5204   */\n      tag_389\n        /* \"#utility.yul\":5179:5203   */\n      tag_390\n        /* \"#utility.yul\":5197:5202   */\n      dup5\n        /* \"#utility.yul\":5179:5203   */\n      tag_294\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5170:5204   */\n      tag_305\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5152:5205   */\n      tag_294\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":5139:5205   */\n      swap1\n      pop\n        /* \"#utility.yul\":5069:5211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5217:5343   */\n    tag_307:\n        /* \"#utility.yul\":5267:5276   */\n      0x00\n        /* \"#utility.yul\":5300:5337   */\n      tag_392\n        /* \"#utility.yul\":5331:5336   */\n      dup3\n        /* \"#utility.yul\":5300:5337   */\n      tag_306\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":5287:5337   */\n      swap1\n      pop\n        /* \"#utility.yul\":5217:5343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5349:5495   */\n    tag_308:\n        /* \"#utility.yul\":5419:5428   */\n      0x00\n        /* \"#utility.yul\":5452:5489   */\n      tag_394\n        /* \"#utility.yul\":5483:5488   */\n      dup3\n        /* \"#utility.yul\":5452:5489   */\n      tag_307\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":5439:5489   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5501:5672   */\n    tag_309:\n        /* \"#utility.yul\":5608:5665   */\n      tag_396\n        /* \"#utility.yul\":5659:5664   */\n      dup2\n        /* \"#utility.yul\":5608:5665   */\n      tag_308\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5603:5606   */\n      dup3\n        /* \"#utility.yul\":5596:5666   */\n      mstore\n        /* \"#utility.yul\":5501:5672   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5940   */\n    tag_71:\n        /* \"#utility.yul\":5791:5795   */\n      0x00\n        /* \"#utility.yul\":5829:5831   */\n      0x20\n        /* \"#utility.yul\":5818:5827   */\n      dup3\n        /* \"#utility.yul\":5814:5832   */\n      add\n        /* \"#utility.yul\":5806:5832   */\n      swap1\n      pop\n        /* \"#utility.yul\":5842:5933   */\n      tag_398\n        /* \"#utility.yul\":5930:5931   */\n      0x00\n        /* \"#utility.yul\":5919:5928   */\n      dup4\n        /* \"#utility.yul\":5915:5932   */\n      add\n        /* \"#utility.yul\":5906:5912   */\n      dup5\n        /* \"#utility.yul\":5842:5933   */\n      tag_309\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5678:5940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5946:6032   */\n    tag_310:\n        /* \"#utility.yul\":5981:5988   */\n      0x00\n        /* \"#utility.yul\":6021:6025   */\n      0xff\n        /* \"#utility.yul\":6014:6019   */\n      dup3\n        /* \"#utility.yul\":6010:6026   */\n      and\n        /* \"#utility.yul\":5999:6026   */\n      swap1\n      pop\n        /* \"#utility.yul\":5946:6032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6038:6150   */\n    tag_311:\n        /* \"#utility.yul\":6121:6143   */\n      tag_401\n        /* \"#utility.yul\":6137:6142   */\n      dup2\n        /* \"#utility.yul\":6121:6143   */\n      tag_310\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":6116:6119   */\n      dup3\n        /* \"#utility.yul\":6109:6144   */\n      mstore\n        /* \"#utility.yul\":6038:6150   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6156:6370   */\n    tag_78:\n        /* \"#utility.yul\":6245:6249   */\n      0x00\n        /* \"#utility.yul\":6283:6285   */\n      0x20\n        /* \"#utility.yul\":6272:6281   */\n      dup3\n        /* \"#utility.yul\":6268:6286   */\n      add\n        /* \"#utility.yul\":6260:6286   */\n      swap1\n      pop\n        /* \"#utility.yul\":6296:6363   */\n      tag_403\n        /* \"#utility.yul\":6360:6361   */\n      0x00\n        /* \"#utility.yul\":6349:6358   */\n      dup4\n        /* \"#utility.yul\":6345:6362   */\n      add\n        /* \"#utility.yul\":6336:6342   */\n      dup5\n        /* \"#utility.yul\":6296:6363   */\n      tag_311\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6156:6370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6376:6520   */\n    tag_312:\n        /* \"#utility.yul\":6444:6453   */\n      0x00\n        /* \"#utility.yul\":6477:6514   */\n      tag_405\n        /* \"#utility.yul\":6508:6513   */\n      dup3\n        /* \"#utility.yul\":6477:6514   */\n      tag_307\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6464:6514   */\n      swap1\n      pop\n        /* \"#utility.yul\":6376:6520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6526:6693   */\n    tag_313:\n        /* \"#utility.yul\":6631:6686   */\n      tag_407\n        /* \"#utility.yul\":6680:6685   */\n      dup2\n        /* \"#utility.yul\":6631:6686   */\n      tag_312\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6626:6629   */\n      dup3\n        /* \"#utility.yul\":6619:6687   */\n      mstore\n        /* \"#utility.yul\":6526:6693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6699:6957   */\n    tag_88:\n        /* \"#utility.yul\":6810:6814   */\n      0x00\n        /* \"#utility.yul\":6848:6850   */\n      0x20\n        /* \"#utility.yul\":6837:6846   */\n      dup3\n        /* \"#utility.yul\":6833:6851   */\n      add\n        /* \"#utility.yul\":6825:6851   */\n      swap1\n      pop\n        /* \"#utility.yul\":6861:6950   */\n      tag_409\n        /* \"#utility.yul\":6947:6948   */\n      0x00\n        /* \"#utility.yul\":6936:6945   */\n      dup4\n        /* \"#utility.yul\":6932:6949   */\n      add\n        /* \"#utility.yul\":6923:6929   */\n      dup5\n        /* \"#utility.yul\":6861:6950   */\n      tag_313\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6699:6957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6963:7106   */\n    tag_314:\n        /* \"#utility.yul\":7030:7039   */\n      0x00\n        /* \"#utility.yul\":7063:7100   */\n      tag_411\n        /* \"#utility.yul\":7094:7099   */\n      dup3\n        /* \"#utility.yul\":7063:7100   */\n      tag_307\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7050:7100   */\n      swap1\n      pop\n        /* \"#utility.yul\":6963:7106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7112:7277   */\n    tag_315:\n        /* \"#utility.yul\":7216:7270   */\n      tag_413\n        /* \"#utility.yul\":7264:7269   */\n      dup2\n        /* \"#utility.yul\":7216:7270   */\n      tag_314\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7211:7214   */\n      dup3\n        /* \"#utility.yul\":7204:7271   */\n      mstore\n        /* \"#utility.yul\":7112:7277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7283:7539   */\n    tag_104:\n        /* \"#utility.yul\":7393:7397   */\n      0x00\n        /* \"#utility.yul\":7431:7433   */\n      0x20\n        /* \"#utility.yul\":7420:7429   */\n      dup3\n        /* \"#utility.yul\":7416:7434   */\n      add\n        /* \"#utility.yul\":7408:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7444:7532   */\n      tag_415\n        /* \"#utility.yul\":7529:7530   */\n      0x00\n        /* \"#utility.yul\":7518:7527   */\n      dup4\n        /* \"#utility.yul\":7514:7531   */\n      add\n        /* \"#utility.yul\":7505:7511   */\n      dup5\n        /* \"#utility.yul\":7444:7532   */\n      tag_315\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7283:7539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7545:8019   */\n    tag_123:\n        /* \"#utility.yul\":7613:7619   */\n      0x00\n        /* \"#utility.yul\":7621:7627   */\n      0x00\n        /* \"#utility.yul\":7670:7672   */\n      0x40\n        /* \"#utility.yul\":7658:7667   */\n      dup4\n        /* \"#utility.yul\":7649:7656   */\n      dup6\n        /* \"#utility.yul\":7645:7668   */\n      sub\n        /* \"#utility.yul\":7641:7673   */\n      slt\n        /* \"#utility.yul\":7638:7757   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":7676:7755   */\n      tag_418\n      tag_292\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7638:7757   */\n    tag_417:\n        /* \"#utility.yul\":7796:7797   */\n      0x00\n        /* \"#utility.yul\":7821:7874   */\n      tag_419\n        /* \"#utility.yul\":7866:7873   */\n      dup6\n        /* \"#utility.yul\":7857:7863   */\n      dup3\n        /* \"#utility.yul\":7846:7855   */\n      dup7\n        /* \"#utility.yul\":7842:7864   */\n      add\n        /* \"#utility.yul\":7821:7874   */\n      tag_297\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7811:7874   */\n      swap3\n      pop\n        /* \"#utility.yul\":7767:7884   */\n      pop\n        /* \"#utility.yul\":7923:7925   */\n      0x20\n        /* \"#utility.yul\":7949:8002   */\n      tag_420\n        /* \"#utility.yul\":7994:8001   */\n      dup6\n        /* \"#utility.yul\":7985:7991   */\n      dup3\n        /* \"#utility.yul\":7974:7983   */\n      dup7\n        /* \"#utility.yul\":7970:7992   */\n      add\n        /* \"#utility.yul\":7949:8002   */\n      tag_297\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7939:8002   */\n      swap2\n      pop\n        /* \"#utility.yul\":7894:8012   */\n      pop\n        /* \"#utility.yul\":7545:8019   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8025:8205   */\n    tag_316:\n        /* \"#utility.yul\":8073:8150   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8070:8071   */\n      0x00\n        /* \"#utility.yul\":8063:8151   */\n      mstore\n        /* \"#utility.yul\":8170:8174   */\n      0x22\n        /* \"#utility.yul\":8167:8168   */\n      0x04\n        /* \"#utility.yul\":8160:8175   */\n      mstore\n        /* \"#utility.yul\":8194:8198   */\n      0x24\n        /* \"#utility.yul\":8191:8192   */\n      0x00\n        /* \"#utility.yul\":8184:8199   */\n      revert\n        /* \"#utility.yul\":8211:8531   */\n    tag_138:\n        /* \"#utility.yul\":8255:8261   */\n      0x00\n        /* \"#utility.yul\":8292:8293   */\n      0x02\n        /* \"#utility.yul\":8286:8290   */\n      dup3\n        /* \"#utility.yul\":8282:8294   */\n      div\n        /* \"#utility.yul\":8272:8294   */\n      swap1\n      pop\n        /* \"#utility.yul\":8339:8340   */\n      0x01\n        /* \"#utility.yul\":8333:8337   */\n      dup3\n        /* \"#utility.yul\":8329:8341   */\n      and\n        /* \"#utility.yul\":8360:8378   */\n      dup1\n        /* \"#utility.yul\":8350:8431   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":8416:8420   */\n      0x7f\n        /* \"#utility.yul\":8408:8414   */\n      dup3\n        /* \"#utility.yul\":8404:8421   */\n      and\n        /* \"#utility.yul\":8394:8421   */\n      swap2\n      pop\n        /* \"#utility.yul\":8350:8431   */\n    tag_423:\n        /* \"#utility.yul\":8478:8480   */\n      0x20\n        /* \"#utility.yul\":8470:8476   */\n      dup3\n        /* \"#utility.yul\":8467:8481   */\n      lt\n        /* \"#utility.yul\":8447:8465   */\n      dup2\n        /* \"#utility.yul\":8444:8482   */\n      sub\n        /* \"#utility.yul\":8441:8525   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":8497:8515   */\n      tag_425\n      tag_316\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8441:8525   */\n    tag_424:\n        /* \"#utility.yul\":8262:8531   */\n      pop\n        /* \"#utility.yul\":8211:8531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8537:8653   */\n    tag_317:\n        /* \"#utility.yul\":8607:8628   */\n      tag_427\n        /* \"#utility.yul\":8622:8627   */\n      dup2\n        /* \"#utility.yul\":8607:8628   */\n      tag_301\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8600:8605   */\n      dup2\n        /* \"#utility.yul\":8597:8629   */\n      eq\n        /* \"#utility.yul\":8587:8647   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":8643:8644   */\n      0x00\n        /* \"#utility.yul\":8640:8641   */\n      0x00\n        /* \"#utility.yul\":8633:8645   */\n      revert\n        /* \"#utility.yul\":8587:8647   */\n    tag_428:\n        /* \"#utility.yul\":8537:8653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8659:8796   */\n    tag_318:\n        /* \"#utility.yul\":8713:8718   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup2\n        /* \"#utility.yul\":8738:8751   */\n      mload\n        /* \"#utility.yul\":8729:8751   */\n      swap1\n      pop\n        /* \"#utility.yul\":8760:8790   */\n      tag_430\n        /* \"#utility.yul\":8784:8789   */\n      dup2\n        /* \"#utility.yul\":8760:8790   */\n      tag_317\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8659:8796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8802:9147   */\n    tag_158:\n        /* \"#utility.yul\":8869:8875   */\n      0x00\n        /* \"#utility.yul\":8918:8920   */\n      0x20\n        /* \"#utility.yul\":8906:8915   */\n      dup3\n        /* \"#utility.yul\":8897:8904   */\n      dup5\n        /* \"#utility.yul\":8893:8916   */\n      sub\n        /* \"#utility.yul\":8889:8921   */\n      slt\n        /* \"#utility.yul\":8886:9005   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":8924:9003   */\n      tag_433\n      tag_292\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8886:9005   */\n    tag_432:\n        /* \"#utility.yul\":9044:9045   */\n      0x00\n        /* \"#utility.yul\":9069:9130   */\n      tag_434\n        /* \"#utility.yul\":9122:9129   */\n      dup5\n        /* \"#utility.yul\":9113:9119   */\n      dup3\n        /* \"#utility.yul\":9102:9111   */\n      dup6\n        /* \"#utility.yul\":9098:9120   */\n      add\n        /* \"#utility.yul\":9069:9130   */\n      tag_318\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9059:9130   */\n      swap2\n      pop\n        /* \"#utility.yul\":9015:9140   */\n      pop\n        /* \"#utility.yul\":8802:9147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9319   */\n    tag_319:\n        /* \"#utility.yul\":9293:9311   */\n      0x53656e6465722069732066726f7a656e00000000000000000000000000000000\n        /* \"#utility.yul\":9289:9290   */\n      0x00\n        /* \"#utility.yul\":9281:9287   */\n      dup3\n        /* \"#utility.yul\":9277:9291   */\n      add\n        /* \"#utility.yul\":9270:9312   */\n      mstore\n        /* \"#utility.yul\":9153:9319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9325:9691   */\n    tag_320:\n        /* \"#utility.yul\":9467:9470   */\n      0x00\n        /* \"#utility.yul\":9488:9555   */\n      tag_437\n        /* \"#utility.yul\":9552:9554   */\n      0x10\n        /* \"#utility.yul\":9547:9550   */\n      dup4\n        /* \"#utility.yul\":9488:9555   */\n      tag_287\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9481:9555   */\n      swap2\n      pop\n        /* \"#utility.yul\":9564:9657   */\n      tag_438\n        /* \"#utility.yul\":9653:9656   */\n      dup3\n        /* \"#utility.yul\":9564:9657   */\n      tag_319\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9682:9684   */\n      0x20\n        /* \"#utility.yul\":9677:9680   */\n      dup3\n        /* \"#utility.yul\":9673:9685   */\n      add\n        /* \"#utility.yul\":9666:9685   */\n      swap1\n      pop\n        /* \"#utility.yul\":9325:9691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9697:10116   */\n    tag_161:\n        /* \"#utility.yul\":9863:9867   */\n      0x00\n        /* \"#utility.yul\":9901:9903   */\n      0x20\n        /* \"#utility.yul\":9890:9899   */\n      dup3\n        /* \"#utility.yul\":9886:9904   */\n      add\n        /* \"#utility.yul\":9878:9904   */\n      swap1\n      pop\n        /* \"#utility.yul\":9950:9959   */\n      dup2\n        /* \"#utility.yul\":9944:9948   */\n      dup2\n        /* \"#utility.yul\":9940:9960   */\n      sub\n        /* \"#utility.yul\":9936:9937   */\n      0x00\n        /* \"#utility.yul\":9925:9934   */\n      dup4\n        /* \"#utility.yul\":9921:9938   */\n      add\n        /* \"#utility.yul\":9914:9961   */\n      mstore\n        /* \"#utility.yul\":9978:10109   */\n      tag_440\n        /* \"#utility.yul\":10104:10108   */\n      dup2\n        /* \"#utility.yul\":9978:10109   */\n      tag_320\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9970:10109   */\n      swap1\n      pop\n        /* \"#utility.yul\":9697:10116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10122:10297   */\n    tag_321:\n        /* \"#utility.yul\":10262:10289   */\n      0x416d6f756e74206d75737420626520616e20696e746567657200000000000000\n        /* \"#utility.yul\":10258:10259   */\n      0x00\n        /* \"#utility.yul\":10250:10256   */\n      dup3\n        /* \"#utility.yul\":10246:10260   */\n      add\n        /* \"#utility.yul\":10239:10290   */\n      mstore\n        /* \"#utility.yul\":10122:10297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10303:10669   */\n    tag_322:\n        /* \"#utility.yul\":10445:10448   */\n      0x00\n        /* \"#utility.yul\":10466:10533   */\n      tag_443\n        /* \"#utility.yul\":10530:10532   */\n      0x19\n        /* \"#utility.yul\":10525:10528   */\n      dup4\n        /* \"#utility.yul\":10466:10533   */\n      tag_287\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10459:10533   */\n      swap2\n      pop\n        /* \"#utility.yul\":10542:10635   */\n      tag_444\n        /* \"#utility.yul\":10631:10634   */\n      dup3\n        /* \"#utility.yul\":10542:10635   */\n      tag_321\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10660:10662   */\n      0x20\n        /* \"#utility.yul\":10655:10658   */\n      dup3\n        /* \"#utility.yul\":10651:10663   */\n      add\n        /* \"#utility.yul\":10644:10663   */\n      swap1\n      pop\n        /* \"#utility.yul\":10303:10669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10675:11094   */\n    tag_164:\n        /* \"#utility.yul\":10841:10845   */\n      0x00\n        /* \"#utility.yul\":10879:10881   */\n      0x20\n        /* \"#utility.yul\":10868:10877   */\n      dup3\n        /* \"#utility.yul\":10864:10882   */\n      add\n        /* \"#utility.yul\":10856:10882   */\n      swap1\n      pop\n        /* \"#utility.yul\":10928:10937   */\n      dup2\n        /* \"#utility.yul\":10922:10926   */\n      dup2\n        /* \"#utility.yul\":10918:10938   */\n      sub\n        /* \"#utility.yul\":10914:10915   */\n      0x00\n        /* \"#utility.yul\":10903:10912   */\n      dup4\n        /* \"#utility.yul\":10899:10916   */\n      add\n        /* \"#utility.yul\":10892:10939   */\n      mstore\n        /* \"#utility.yul\":10956:11087   */\n      tag_446\n        /* \"#utility.yul\":11082:11086   */\n      dup2\n        /* \"#utility.yul\":10956:11087   */\n      tag_322\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10948:11087   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:11094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11100:11265   */\n    tag_323:\n        /* \"#utility.yul\":11240:11257   */\n      0x4e6f742077686974656c69737465640000000000000000000000000000000000\n        /* \"#utility.yul\":11236:11237   */\n      0x00\n        /* \"#utility.yul\":11228:11234   */\n      dup3\n        /* \"#utility.yul\":11224:11238   */\n      add\n        /* \"#utility.yul\":11217:11258   */\n      mstore\n        /* \"#utility.yul\":11100:11265   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11271:11637   */\n    tag_324:\n        /* \"#utility.yul\":11413:11416   */\n      0x00\n        /* \"#utility.yul\":11434:11501   */\n      tag_449\n        /* \"#utility.yul\":11498:11500   */\n      0x0f\n        /* \"#utility.yul\":11493:11496   */\n      dup4\n        /* \"#utility.yul\":11434:11501   */\n      tag_287\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11427:11501   */\n      swap2\n      pop\n        /* \"#utility.yul\":11510:11603   */\n      tag_450\n        /* \"#utility.yul\":11599:11602   */\n      dup3\n        /* \"#utility.yul\":11510:11603   */\n      tag_323\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11628:11630   */\n      0x20\n        /* \"#utility.yul\":11623:11626   */\n      dup3\n        /* \"#utility.yul\":11619:11631   */\n      add\n        /* \"#utility.yul\":11612:11631   */\n      swap1\n      pop\n        /* \"#utility.yul\":11271:11637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11643:12062   */\n    tag_178:\n        /* \"#utility.yul\":11809:11813   */\n      0x00\n        /* \"#utility.yul\":11847:11849   */\n      0x20\n        /* \"#utility.yul\":11836:11845   */\n      dup3\n        /* \"#utility.yul\":11832:11850   */\n      add\n        /* \"#utility.yul\":11824:11850   */\n      swap1\n      pop\n        /* \"#utility.yul\":11896:11905   */\n      dup2\n        /* \"#utility.yul\":11890:11894   */\n      dup2\n        /* \"#utility.yul\":11886:11906   */\n      sub\n        /* \"#utility.yul\":11882:11883   */\n      0x00\n        /* \"#utility.yul\":11871:11880   */\n      dup4\n        /* \"#utility.yul\":11867:11884   */\n      add\n        /* \"#utility.yul\":11860:11907   */\n      mstore\n        /* \"#utility.yul\":11924:12055   */\n      tag_452\n        /* \"#utility.yul\":12050:12054   */\n      dup2\n        /* \"#utility.yul\":11924:12055   */\n      tag_324\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11916:12055   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:12062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12068:12248   */\n    tag_325:\n        /* \"#utility.yul\":12116:12193   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12113:12114   */\n      0x00\n        /* \"#utility.yul\":12106:12194   */\n      mstore\n        /* \"#utility.yul\":12213:12217   */\n      0x11\n        /* \"#utility.yul\":12210:12211   */\n      0x04\n        /* \"#utility.yul\":12203:12218   */\n      mstore\n        /* \"#utility.yul\":12237:12241   */\n      0x24\n        /* \"#utility.yul\":12234:12235   */\n      0x00\n        /* \"#utility.yul\":12227:12242   */\n      revert\n        /* \"#utility.yul\":12254:12445   */\n    tag_180:\n        /* \"#utility.yul\":12294:12297   */\n      0x00\n        /* \"#utility.yul\":12313:12333   */\n      tag_455\n        /* \"#utility.yul\":12331:12332   */\n      dup3\n        /* \"#utility.yul\":12313:12333   */\n      tag_298\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12308:12333   */\n      swap2\n      pop\n        /* \"#utility.yul\":12347:12367   */\n      tag_456\n        /* \"#utility.yul\":12365:12366   */\n      dup4\n        /* \"#utility.yul\":12347:12367   */\n      tag_298\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12342:12367   */\n      swap3\n      pop\n        /* \"#utility.yul\":12390:12391   */\n      dup3\n        /* \"#utility.yul\":12387:12388   */\n      dup3\n        /* \"#utility.yul\":12383:12392   */\n      add\n        /* \"#utility.yul\":12376:12392   */\n      swap1\n      pop\n        /* \"#utility.yul\":12411:12414   */\n      dup1\n        /* \"#utility.yul\":12408:12409   */\n      dup3\n        /* \"#utility.yul\":12405:12415   */\n      gt\n        /* \"#utility.yul\":12402:12438   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":12418:12436   */\n      tag_458\n      tag_325\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12402:12438   */\n    tag_457:\n        /* \"#utility.yul\":12254:12445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12451:12622   */\n    tag_326:\n        /* \"#utility.yul\":12591:12614   */\n      0x546f74616c20737570706c792065786365656465640000000000000000000000\n        /* \"#utility.yul\":12587:12588   */\n      0x00\n        /* \"#utility.yul\":12579:12585   */\n      dup3\n        /* \"#utility.yul\":12575:12589   */\n      add\n        /* \"#utility.yul\":12568:12615   */\n      mstore\n        /* \"#utility.yul\":12451:12622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12628:12994   */\n    tag_327:\n        /* \"#utility.yul\":12770:12773   */\n      0x00\n        /* \"#utility.yul\":12791:12858   */\n      tag_461\n        /* \"#utility.yul\":12855:12857   */\n      0x15\n        /* \"#utility.yul\":12850:12853   */\n      dup4\n        /* \"#utility.yul\":12791:12858   */\n      tag_287\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12784:12858   */\n      swap2\n      pop\n        /* \"#utility.yul\":12867:12960   */\n      tag_462\n        /* \"#utility.yul\":12956:12959   */\n      dup3\n        /* \"#utility.yul\":12867:12960   */\n      tag_326\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12985:12987   */\n      0x20\n        /* \"#utility.yul\":12980:12983   */\n      dup3\n        /* \"#utility.yul\":12976:12988   */\n      add\n        /* \"#utility.yul\":12969:12988   */\n      swap1\n      pop\n        /* \"#utility.yul\":12628:12994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13000:13419   */\n    tag_183:\n        /* \"#utility.yul\":13166:13170   */\n      0x00\n        /* \"#utility.yul\":13204:13206   */\n      0x20\n        /* \"#utility.yul\":13193:13202   */\n      dup3\n        /* \"#utility.yul\":13189:13207   */\n      add\n        /* \"#utility.yul\":13181:13207   */\n      swap1\n      pop\n        /* \"#utility.yul\":13253:13262   */\n      dup2\n        /* \"#utility.yul\":13247:13251   */\n      dup2\n        /* \"#utility.yul\":13243:13263   */\n      sub\n        /* \"#utility.yul\":13239:13240   */\n      0x00\n        /* \"#utility.yul\":13228:13237   */\n      dup4\n        /* \"#utility.yul\":13224:13241   */\n      add\n        /* \"#utility.yul\":13217:13264   */\n      mstore\n        /* \"#utility.yul\":13281:13412   */\n      tag_464\n        /* \"#utility.yul\":13407:13411   */\n      dup2\n        /* \"#utility.yul\":13281:13412   */\n      tag_327\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13273:13412   */\n      swap1\n      pop\n        /* \"#utility.yul\":13000:13419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13425:13568   */\n    tag_328:\n        /* \"#utility.yul\":13482:13487   */\n      0x00\n        /* \"#utility.yul\":13513:13519   */\n      dup2\n        /* \"#utility.yul\":13507:13520   */\n      mload\n        /* \"#utility.yul\":13498:13520   */\n      swap1\n      pop\n        /* \"#utility.yul\":13529:13562   */\n      tag_466\n        /* \"#utility.yul\":13556:13561   */\n      dup2\n        /* \"#utility.yul\":13529:13562   */\n      tag_299\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13425:13568   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13574:13925   */\n    tag_225:\n        /* \"#utility.yul\":13644:13650   */\n      0x00\n        /* \"#utility.yul\":13693:13695   */\n      0x20\n        /* \"#utility.yul\":13681:13690   */\n      dup3\n        /* \"#utility.yul\":13672:13679   */\n      dup5\n        /* \"#utility.yul\":13668:13691   */\n      sub\n        /* \"#utility.yul\":13664:13696   */\n      slt\n        /* \"#utility.yul\":13661:13780   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":13699:13778   */\n      tag_469\n      tag_292\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13661:13780   */\n    tag_468:\n        /* \"#utility.yul\":13819:13820   */\n      0x00\n        /* \"#utility.yul\":13844:13908   */\n      tag_470\n        /* \"#utility.yul\":13900:13907   */\n      dup5\n        /* \"#utility.yul\":13891:13897   */\n      dup3\n        /* \"#utility.yul\":13880:13889   */\n      dup6\n        /* \"#utility.yul\":13876:13898   */\n      add\n        /* \"#utility.yul\":13844:13908   */\n      tag_328\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13834:13908   */\n      swap2\n      pop\n        /* \"#utility.yul\":13790:13918   */\n      pop\n        /* \"#utility.yul\":13574:13925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13931:14373   */\n    tag_269:\n        /* \"#utility.yul\":14080:14084   */\n      0x00\n        /* \"#utility.yul\":14118:14120   */\n      0x60\n        /* \"#utility.yul\":14107:14116   */\n      dup3\n        /* \"#utility.yul\":14103:14121   */\n      add\n        /* \"#utility.yul\":14095:14121   */\n      swap1\n      pop\n        /* \"#utility.yul\":14131:14202   */\n      tag_472\n        /* \"#utility.yul\":14199:14200   */\n      0x00\n        /* \"#utility.yul\":14188:14197   */\n      dup4\n        /* \"#utility.yul\":14184:14201   */\n      add\n        /* \"#utility.yul\":14175:14181   */\n      dup7\n        /* \"#utility.yul\":14131:14202   */\n      tag_304\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14212:14284   */\n      tag_473\n        /* \"#utility.yul\":14280:14282   */\n      0x20\n        /* \"#utility.yul\":14269:14278   */\n      dup4\n        /* \"#utility.yul\":14265:14283   */\n      add\n        /* \"#utility.yul\":14256:14262   */\n      dup6\n        /* \"#utility.yul\":14212:14284   */\n      tag_303\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14294:14366   */\n      tag_474\n        /* \"#utility.yul\":14362:14364   */\n      0x40\n        /* \"#utility.yul\":14351:14360   */\n      dup4\n        /* \"#utility.yul\":14347:14365   */\n      add\n        /* \"#utility.yul\":14338:14344   */\n      dup5\n        /* \"#utility.yul\":14294:14366   */\n      tag_303\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13931:14373   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122071f06dd889a253c53401ead606c64d3bcefb97a1fcab2428ba5cb243c29c98a664736f6c634300081e0033\n}\n\nsub_1: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24980:25856  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24980:25856  contract Whitelist {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x3af32abf\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x8ab1d681\n          eq\n          tag_4\n          jumpi\n          dup1\n          0x9b19251a\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xe43252d7\n          eq\n          tag_6\n          jumpi\n        tag_2:\n          revert(0x00, 0x00)\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n        tag_3:\n          tag_7\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_8\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_8:\n          tag_10\n          jump\t// in\n        tag_7:\n          mload(0x40)\n          tag_11\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_11:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n        tag_4:\n          tag_13\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_14\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_14:\n          tag_15\n          jump\t// in\n        tag_13:\n          stop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25051:25092  mapping(address => bool) public whitelist */\n        tag_5:\n          tag_16\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_17\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_17:\n          tag_18\n          jump\t// in\n        tag_16:\n          mload(0x40)\n          tag_19\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_19:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n        tag_6:\n          tag_20\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_21\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_21:\n          tag_22\n          jump\t// in\n        tag_20:\n          stop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n        tag_10:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25807:25811  bool */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25839  whitelist */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25847  whitelist[member] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25840:25846  member */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25847  whitelist[member] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xff\n          and\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25823:25847  return whitelist[member] */\n          swap1\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n        tag_15:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25550:25555  false */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25539  whitelist */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25547  whitelist[member] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25540:25546  member */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25547  whitelist[member] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25555  whitelist[member] = false */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xff\n          mul\n          not\n          and\n          swap1\n          dup4\n          iszero\n          iszero\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n          pop\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25051:25092  mapping(address => bool) public whitelist */\n        tag_18:\n          mstore(0x20, 0x00)\n          dup1\n          0x00\n          mstore\n          keccak256(0x00, 0x40)\n          0x00\n          swap2\n          pop\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xff\n          and\n          dup2\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n        tag_22:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25309:25313  true */\n          0x01\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25298  whitelist */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25306  whitelist[member] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25299:25305  member */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25306  whitelist[member] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25313  whitelist[member] = true */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xff\n          mul\n          not\n          and\n          swap1\n          dup4\n          iszero\n          iszero\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":88:205   */\n        tag_27:\n            /* \"#utility.yul\":197:198   */\n          0x00\n            /* \"#utility.yul\":194:195   */\n          0x00\n            /* \"#utility.yul\":187:199   */\n          revert\n            /* \"#utility.yul\":334:460   */\n        tag_29:\n            /* \"#utility.yul\":371:378   */\n          0x00\n            /* \"#utility.yul\":411:453   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":404:409   */\n          dup3\n            /* \"#utility.yul\":400:454   */\n          and\n            /* \"#utility.yul\":389:454   */\n          swap1\n          pop\n            /* \"#utility.yul\":334:460   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":466:562   */\n        tag_30:\n            /* \"#utility.yul\":503:510   */\n          0x00\n            /* \"#utility.yul\":532:556   */\n          tag_41\n            /* \"#utility.yul\":550:555   */\n          dup3\n            /* \"#utility.yul\":532:556   */\n          tag_29\n          jump\t// in\n        tag_41:\n            /* \"#utility.yul\":521:556   */\n          swap1\n          pop\n            /* \"#utility.yul\":466:562   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":568:690   */\n        tag_31:\n            /* \"#utility.yul\":641:665   */\n          tag_43\n            /* \"#utility.yul\":659:664   */\n          dup2\n            /* \"#utility.yul\":641:665   */\n          tag_30\n          jump\t// in\n        tag_43:\n            /* \"#utility.yul\":634:639   */\n          dup2\n            /* \"#utility.yul\":631:666   */\n          eq\n            /* \"#utility.yul\":621:684   */\n          tag_44\n          jumpi\n            /* \"#utility.yul\":680:681   */\n          0x00\n            /* \"#utility.yul\":677:678   */\n          0x00\n            /* \"#utility.yul\":670:682   */\n          revert\n            /* \"#utility.yul\":621:684   */\n        tag_44:\n            /* \"#utility.yul\":568:690   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":696:835   */\n        tag_32:\n            /* \"#utility.yul\":742:747   */\n          0x00\n            /* \"#utility.yul\":780:786   */\n          dup2\n            /* \"#utility.yul\":767:787   */\n          calldataload\n            /* \"#utility.yul\":758:787   */\n          swap1\n          pop\n            /* \"#utility.yul\":796:829   */\n          tag_46\n            /* \"#utility.yul\":823:828   */\n          dup2\n            /* \"#utility.yul\":796:829   */\n          tag_31\n          jump\t// in\n        tag_46:\n            /* \"#utility.yul\":696:835   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":841:1170   */\n        tag_9:\n            /* \"#utility.yul\":900:906   */\n          0x00\n            /* \"#utility.yul\":949:951   */\n          0x20\n            /* \"#utility.yul\":937:946   */\n          dup3\n            /* \"#utility.yul\":928:935   */\n          dup5\n            /* \"#utility.yul\":924:947   */\n          sub\n            /* \"#utility.yul\":920:952   */\n          slt\n            /* \"#utility.yul\":917:1036   */\n          iszero\n          tag_48\n          jumpi\n            /* \"#utility.yul\":955:1034   */\n          tag_49\n          tag_27\n          jump\t// in\n        tag_49:\n            /* \"#utility.yul\":917:1036   */\n        tag_48:\n            /* \"#utility.yul\":1075:1076   */\n          0x00\n            /* \"#utility.yul\":1100:1153   */\n          tag_50\n            /* \"#utility.yul\":1145:1152   */\n          dup5\n            /* \"#utility.yul\":1136:1142   */\n          dup3\n            /* \"#utility.yul\":1125:1134   */\n          dup6\n            /* \"#utility.yul\":1121:1143   */\n          add\n            /* \"#utility.yul\":1100:1153   */\n          tag_32\n          jump\t// in\n        tag_50:\n            /* \"#utility.yul\":1090:1153   */\n          swap2\n          pop\n            /* \"#utility.yul\":1046:1163   */\n          pop\n            /* \"#utility.yul\":841:1170   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1176:1266   */\n        tag_33:\n            /* \"#utility.yul\":1210:1217   */\n          0x00\n            /* \"#utility.yul\":1253:1258   */\n          dup2\n            /* \"#utility.yul\":1246:1259   */\n          iszero\n            /* \"#utility.yul\":1239:1260   */\n          iszero\n            /* \"#utility.yul\":1228:1260   */\n          swap1\n          pop\n            /* \"#utility.yul\":1176:1266   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1272:1381   */\n        tag_34:\n            /* \"#utility.yul\":1353:1374   */\n          tag_53\n            /* \"#utility.yul\":1368:1373   */\n          dup2\n            /* \"#utility.yul\":1353:1374   */\n          tag_33\n          jump\t// in\n        tag_53:\n            /* \"#utility.yul\":1348:1351   */\n          dup3\n            /* \"#utility.yul\":1341:1375   */\n          mstore\n            /* \"#utility.yul\":1272:1381   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1387:1597   */\n        tag_12:\n            /* \"#utility.yul\":1474:1478   */\n          0x00\n            /* \"#utility.yul\":1512:1514   */\n          0x20\n            /* \"#utility.yul\":1501:1510   */\n          dup3\n            /* \"#utility.yul\":1497:1515   */\n          add\n            /* \"#utility.yul\":1489:1515   */\n          swap1\n          pop\n            /* \"#utility.yul\":1525:1590   */\n          tag_55\n            /* \"#utility.yul\":1587:1588   */\n          0x00\n            /* \"#utility.yul\":1576:1585   */\n          dup4\n            /* \"#utility.yul\":1572:1589   */\n          add\n            /* \"#utility.yul\":1563:1569   */\n          dup5\n            /* \"#utility.yul\":1525:1590   */\n          tag_34\n          jump\t// in\n        tag_55:\n            /* \"#utility.yul\":1387:1597   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033\n    }\n}\n\nsub_2: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26026:26917  contract Freezable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26026:26917  contract Freezable {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0xcb4b73ab\n          eq\n          tag_3\n          jumpi\n          dup1\n          0xd0516650\n          eq\n          tag_4\n          jumpi\n          dup1\n          0xe08ba51a\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xe5839836\n          eq\n          tag_6\n          jumpi\n        tag_2:\n          revert(0x00, 0x00)\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n        tag_3:\n          tag_7\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_8\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_8:\n          tag_10\n          jump\t// in\n        tag_7:\n          stop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26106:26144  mapping(address => bool) public frozen */\n        tag_4:\n          tag_11\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_12\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_12:\n          tag_13\n          jump\t// in\n        tag_11:\n          mload(0x40)\n          tag_14\n          swap2\n          swap1\n          tag_15\n          jump\t// in\n        tag_14:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n        tag_5:\n          tag_16\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_17\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_17:\n          tag_18\n          jump\t// in\n        tag_16:\n          stop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n        tag_6:\n          tag_19\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_20\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_20:\n          tag_21\n          jump\t// in\n        tag_19:\n          mload(0x40)\n          tag_22\n          swap2\n          swap1\n          tag_15\n          jump\t// in\n        tag_22:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n        tag_10:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26605:26610  false */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26596  frozen */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26602  frozen[user] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26597:26601  user */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26602  frozen[user] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26610  frozen[user] = false */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xff\n          mul\n          not\n          and\n          swap1\n          dup4\n          iszero\n          iszero\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n          pop\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26106:26144  mapping(address => bool) public frozen */\n        tag_13:\n          mstore(0x20, 0x00)\n          dup1\n          0x00\n          mstore\n          keccak256(0x00, 0x40)\n          0x00\n          swap2\n          pop\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xff\n          and\n          dup2\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n        tag_18:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26371:26375  true */\n          0x01\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26362  frozen */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26368  frozen[user] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26363:26367  user */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26368  frozen[user] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26375  frozen[user] = true */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xff\n          mul\n          not\n          and\n          swap1\n          dup4\n          iszero\n          iszero\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n          pop\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n        tag_21:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26866:26870  bool */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26895  frozen */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26908  frozen[userAddress] */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26896:26907  userAddress */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26908  frozen[userAddress] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xff\n          and\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26882:26908  return frozen[userAddress] */\n          swap1\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":88:205   */\n        tag_27:\n            /* \"#utility.yul\":197:198   */\n          0x00\n            /* \"#utility.yul\":194:195   */\n          0x00\n            /* \"#utility.yul\":187:199   */\n          revert\n            /* \"#utility.yul\":334:460   */\n        tag_29:\n            /* \"#utility.yul\":371:378   */\n          0x00\n            /* \"#utility.yul\":411:453   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":404:409   */\n          dup3\n            /* \"#utility.yul\":400:454   */\n          and\n            /* \"#utility.yul\":389:454   */\n          swap1\n          pop\n            /* \"#utility.yul\":334:460   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":466:562   */\n        tag_30:\n            /* \"#utility.yul\":503:510   */\n          0x00\n            /* \"#utility.yul\":532:556   */\n          tag_41\n            /* \"#utility.yul\":550:555   */\n          dup3\n            /* \"#utility.yul\":532:556   */\n          tag_29\n          jump\t// in\n        tag_41:\n            /* \"#utility.yul\":521:556   */\n          swap1\n          pop\n            /* \"#utility.yul\":466:562   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":568:690   */\n        tag_31:\n            /* \"#utility.yul\":641:665   */\n          tag_43\n            /* \"#utility.yul\":659:664   */\n          dup2\n            /* \"#utility.yul\":641:665   */\n          tag_30\n          jump\t// in\n        tag_43:\n            /* \"#utility.yul\":634:639   */\n          dup2\n            /* \"#utility.yul\":631:666   */\n          eq\n            /* \"#utility.yul\":621:684   */\n          tag_44\n          jumpi\n            /* \"#utility.yul\":680:681   */\n          0x00\n            /* \"#utility.yul\":677:678   */\n          0x00\n            /* \"#utility.yul\":670:682   */\n          revert\n            /* \"#utility.yul\":621:684   */\n        tag_44:\n            /* \"#utility.yul\":568:690   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":696:835   */\n        tag_32:\n            /* \"#utility.yul\":742:747   */\n          0x00\n            /* \"#utility.yul\":780:786   */\n          dup2\n            /* \"#utility.yul\":767:787   */\n          calldataload\n            /* \"#utility.yul\":758:787   */\n          swap1\n          pop\n            /* \"#utility.yul\":796:829   */\n          tag_46\n            /* \"#utility.yul\":823:828   */\n          dup2\n            /* \"#utility.yul\":796:829   */\n          tag_31\n          jump\t// in\n        tag_46:\n            /* \"#utility.yul\":696:835   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":841:1170   */\n        tag_9:\n            /* \"#utility.yul\":900:906   */\n          0x00\n            /* \"#utility.yul\":949:951   */\n          0x20\n            /* \"#utility.yul\":937:946   */\n          dup3\n            /* \"#utility.yul\":928:935   */\n          dup5\n            /* \"#utility.yul\":924:947   */\n          sub\n            /* \"#utility.yul\":920:952   */\n          slt\n            /* \"#utility.yul\":917:1036   */\n          iszero\n          tag_48\n          jumpi\n            /* \"#utility.yul\":955:1034   */\n          tag_49\n          tag_27\n          jump\t// in\n        tag_49:\n            /* \"#utility.yul\":917:1036   */\n        tag_48:\n            /* \"#utility.yul\":1075:1076   */\n          0x00\n            /* \"#utility.yul\":1100:1153   */\n          tag_50\n            /* \"#utility.yul\":1145:1152   */\n          dup5\n            /* \"#utility.yul\":1136:1142   */\n          dup3\n            /* \"#utility.yul\":1125:1134   */\n          dup6\n            /* \"#utility.yul\":1121:1143   */\n          add\n            /* \"#utility.yul\":1100:1153   */\n          tag_32\n          jump\t// in\n        tag_50:\n            /* \"#utility.yul\":1090:1153   */\n          swap2\n          pop\n            /* \"#utility.yul\":1046:1163   */\n          pop\n            /* \"#utility.yul\":841:1170   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1176:1266   */\n        tag_33:\n            /* \"#utility.yul\":1210:1217   */\n          0x00\n            /* \"#utility.yul\":1253:1258   */\n          dup2\n            /* \"#utility.yul\":1246:1259   */\n          iszero\n            /* \"#utility.yul\":1239:1260   */\n          iszero\n            /* \"#utility.yul\":1228:1260   */\n          swap1\n          pop\n            /* \"#utility.yul\":1176:1266   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1272:1381   */\n        tag_34:\n            /* \"#utility.yul\":1353:1374   */\n          tag_53\n            /* \"#utility.yul\":1368:1373   */\n          dup2\n            /* \"#utility.yul\":1353:1374   */\n          tag_33\n          jump\t// in\n        tag_53:\n            /* \"#utility.yul\":1348:1351   */\n          dup3\n            /* \"#utility.yul\":1341:1375   */\n          mstore\n            /* \"#utility.yul\":1272:1381   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1387:1597   */\n        tag_15:\n            /* \"#utility.yul\":1474:1478   */\n          0x00\n            /* \"#utility.yul\":1512:1514   */\n          0x20\n            /* \"#utility.yul\":1501:1510   */\n          dup3\n            /* \"#utility.yul\":1497:1515   */\n          add\n            /* \"#utility.yul\":1489:1515   */\n          swap1\n          pop\n            /* \"#utility.yul\":1525:1590   */\n          tag_55\n            /* \"#utility.yul\":1587:1588   */\n          0x00\n            /* \"#utility.yul\":1576:1585   */\n          dup4\n            /* \"#utility.yul\":1572:1589   */\n          add\n            /* \"#utility.yul\":1563:1569   */\n          dup5\n            /* \"#utility.yul\":1525:1590   */\n          tag_34\n          jump\t// in\n        tag_55:\n            /* \"#utility.yul\":1387:1597   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033\n    }\n}\n\nsub_3: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n      mstore(0x40, 0x80)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52532:52609  constructor(address _uniswapPool) {... */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      mload(0x40)\n      sub(codesize, bytecodeSize)\n      dup1\n      bytecodeSize\n      dup4\n      codecopy\n      dup2\n      dup2\n      add\n      0x40\n      mstore\n      dup2\n      add\n      swap1\n      tag_2\n      swap2\n      swap1\n      tag_3\n      jump\t// in\n    tag_2:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52590:52602  _uniswapPool */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52576:52587  uniswapPool */\n      0x00\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52576:52602  uniswapPool = _uniswapPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52532:52609  constructor(address _uniswapPool) {... */\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n      jump(tag_6)\n        /* \"#utility.yul\":88:205   */\n    tag_8:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_10:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_11:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_20\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_10\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_12:\n        /* \"#utility.yul\":641:665   */\n      tag_22\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_11\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_23\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_23:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:839   */\n    tag_13:\n        /* \"#utility.yul\":753:758   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup2\n        /* \"#utility.yul\":778:791   */\n      mload\n        /* \"#utility.yul\":769:791   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:833   */\n      tag_25\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":800:833   */\n      tag_12\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":696:839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1196   */\n    tag_3:\n        /* \"#utility.yul\":915:921   */\n      0x00\n        /* \"#utility.yul\":964:966   */\n      0x20\n        /* \"#utility.yul\":952:961   */\n      dup3\n        /* \"#utility.yul\":943:950   */\n      dup5\n        /* \"#utility.yul\":939:962   */\n      sub\n        /* \"#utility.yul\":935:967   */\n      slt\n        /* \"#utility.yul\":932:1051   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":970:1049   */\n      tag_28\n      tag_8\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":932:1051   */\n    tag_27:\n        /* \"#utility.yul\":1090:1091   */\n      0x00\n        /* \"#utility.yul\":1115:1179   */\n      tag_29\n        /* \"#utility.yul\":1171:1178   */\n      dup5\n        /* \"#utility.yul\":1162:1168   */\n      dup3\n        /* \"#utility.yul\":1151:1160   */\n      dup6\n        /* \"#utility.yul\":1147:1169   */\n      add\n        /* \"#utility.yul\":1115:1179   */\n      tag_13\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":1105:1179   */\n      swap2\n      pop\n        /* \"#utility.yul\":1061:1189   */\n      pop\n        /* \"#utility.yul\":845:1196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n    tag_6:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      0x00\n      codecopy\n      0x00\n      return\n    stop\n\n    sub_0: assembly {\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0xbdd3d825\n          eq\n          tag_3\n          jumpi\n          dup1\n          0xeb91d37e\n          eq\n          tag_4\n          jumpi\n        tag_2:\n          revert(0x00, 0x00)\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52299:52325  address public uniswapPool */\n        tag_3:\n          tag_5\n          tag_6\n          jump\t// in\n        tag_5:\n          mload(0x40)\n          tag_7\n          swap2\n          swap1\n          tag_8\n          jump\t// in\n        tag_7:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n        tag_4:\n          tag_9\n          tag_10\n          jump\t// in\n        tag_9:\n          mload(0x40)\n          tag_11\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_11:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52299:52325  address public uniswapPool */\n        tag_6:\n          0x00\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          jump\t// out\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n        tag_10:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52829:52836  uint256 */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52848:52867  IUniswapV3Pool pool */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52885:52896  uniswapPool */\n          0x00\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52848:52897  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n          swap1\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52908:52928  uint160 sqrtPriceX96 */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52948  pool */\n          dup2\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52954  pool.slot0 */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0x3850c7bd\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52956  pool.slot0() */\n          mload(0x40)\n          dup2\n          0xffffffff\n          and\n          0xe0\n          shl\n          dup2\n          mstore\n          0x04\n          add\n          0xe0\n          mload(0x40)\n          dup1\n          dup4\n          sub\n          dup2\n          dup7\n          gas\n          staticcall\n          iszero\n          dup1\n          iszero\n          tag_15\n          jumpi\n          returndatacopy(0x00, 0x00, returndatasize)\n          revert(0x00, returndatasize)\n        tag_15:\n          pop\n          pop\n          pop\n          pop\n          mload(0x40)\n          returndatasize\n          not(0x1f)\n          0x1f\n          dup3\n          add\n          and\n          dup3\n          add\n          dup1\n          0x40\n          mstore\n          pop\n          dup2\n          add\n          swap1\n          tag_16\n          swap2\n          swap1\n          tag_17\n          jump\t// in\n        tag_16:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52907:52956  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52966:52979  uint256 price */\n          0x00\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53012:53020  2 ** 192 */\n          0x01000000000000000000000000000000000000000000000000\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53007:53008  2 */\n          0x02\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52990:53002  sqrtPriceX96 */\n          dup4\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53003  uint256(sqrtPriceX96) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53008  uint256(sqrtPriceX96) ** 2 */\n          tag_18\n          swap2\n          swap1\n          tag_19\n          jump\t// in\n        tag_18:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53021  uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n          tag_20\n          swap2\n          swap1\n          tag_21\n          jump\t// in\n        tag_20:\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52966:53021  uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n          swap1\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53059:53064  price */\n          dup1\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53052:53064  return price */\n          swap4\n          pop\n          pop\n          pop\n          pop\n            /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"#utility.yul\":7:133   */\n        tag_22:\n            /* \"#utility.yul\":44:51   */\n          0x00\n            /* \"#utility.yul\":84:126   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":77:82   */\n          dup3\n            /* \"#utility.yul\":73:127   */\n          and\n            /* \"#utility.yul\":62:127   */\n          swap1\n          pop\n            /* \"#utility.yul\":7:133   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":139:235   */\n        tag_23:\n            /* \"#utility.yul\":176:183   */\n          0x00\n            /* \"#utility.yul\":205:229   */\n          tag_52\n            /* \"#utility.yul\":223:228   */\n          dup3\n            /* \"#utility.yul\":205:229   */\n          tag_22\n          jump\t// in\n        tag_52:\n            /* \"#utility.yul\":194:229   */\n          swap1\n          pop\n            /* \"#utility.yul\":139:235   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":241:359   */\n        tag_24:\n            /* \"#utility.yul\":328:352   */\n          tag_54\n            /* \"#utility.yul\":346:351   */\n          dup2\n            /* \"#utility.yul\":328:352   */\n          tag_23\n          jump\t// in\n        tag_54:\n            /* \"#utility.yul\":323:326   */\n          dup3\n            /* \"#utility.yul\":316:353   */\n          mstore\n            /* \"#utility.yul\":241:359   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":365:587   */\n        tag_8:\n            /* \"#utility.yul\":458:462   */\n          0x00\n            /* \"#utility.yul\":496:498   */\n          0x20\n            /* \"#utility.yul\":485:494   */\n          dup3\n            /* \"#utility.yul\":481:499   */\n          add\n            /* \"#utility.yul\":473:499   */\n          swap1\n          pop\n            /* \"#utility.yul\":509:580   */\n          tag_56\n            /* \"#utility.yul\":577:578   */\n          0x00\n            /* \"#utility.yul\":566:575   */\n          dup4\n            /* \"#utility.yul\":562:579   */\n          add\n            /* \"#utility.yul\":553:559   */\n          dup5\n            /* \"#utility.yul\":509:580   */\n          tag_24\n          jump\t// in\n        tag_56:\n            /* \"#utility.yul\":365:587   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":593:670   */\n        tag_25:\n            /* \"#utility.yul\":630:637   */\n          0x00\n            /* \"#utility.yul\":659:664   */\n          dup2\n            /* \"#utility.yul\":648:664   */\n          swap1\n          pop\n            /* \"#utility.yul\":593:670   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":676:794   */\n        tag_26:\n            /* \"#utility.yul\":763:787   */\n          tag_59\n            /* \"#utility.yul\":781:786   */\n          dup2\n            /* \"#utility.yul\":763:787   */\n          tag_25\n          jump\t// in\n        tag_59:\n            /* \"#utility.yul\":758:761   */\n          dup3\n            /* \"#utility.yul\":751:788   */\n          mstore\n            /* \"#utility.yul\":676:794   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":800:1022   */\n        tag_12:\n            /* \"#utility.yul\":893:897   */\n          0x00\n            /* \"#utility.yul\":931:933   */\n          0x20\n            /* \"#utility.yul\":920:929   */\n          dup3\n            /* \"#utility.yul\":916:934   */\n          add\n            /* \"#utility.yul\":908:934   */\n          swap1\n          pop\n            /* \"#utility.yul\":944:1015   */\n          tag_61\n            /* \"#utility.yul\":1012:1013   */\n          0x00\n            /* \"#utility.yul\":1001:1010   */\n          dup4\n            /* \"#utility.yul\":997:1014   */\n          add\n            /* \"#utility.yul\":988:994   */\n          dup5\n            /* \"#utility.yul\":944:1015   */\n          tag_26\n          jump\t// in\n        tag_61:\n            /* \"#utility.yul\":800:1022   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1109:1226   */\n        tag_28:\n            /* \"#utility.yul\":1218:1219   */\n          0x00\n            /* \"#utility.yul\":1215:1216   */\n          0x00\n            /* \"#utility.yul\":1208:1220   */\n          revert\n            /* \"#utility.yul\":1355:1477   */\n        tag_30:\n            /* \"#utility.yul\":1428:1452   */\n          tag_66\n            /* \"#utility.yul\":1446:1451   */\n          dup2\n            /* \"#utility.yul\":1428:1452   */\n          tag_22\n          jump\t// in\n        tag_66:\n            /* \"#utility.yul\":1421:1426   */\n          dup2\n            /* \"#utility.yul\":1418:1453   */\n          eq\n            /* \"#utility.yul\":1408:1471   */\n          tag_67\n          jumpi\n            /* \"#utility.yul\":1467:1468   */\n          0x00\n            /* \"#utility.yul\":1464:1465   */\n          0x00\n            /* \"#utility.yul\":1457:1469   */\n          revert\n            /* \"#utility.yul\":1408:1471   */\n        tag_67:\n            /* \"#utility.yul\":1355:1477   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1483:1626   */\n        tag_31:\n            /* \"#utility.yul\":1540:1545   */\n          0x00\n            /* \"#utility.yul\":1571:1577   */\n          dup2\n            /* \"#utility.yul\":1565:1578   */\n          mload\n            /* \"#utility.yul\":1556:1578   */\n          swap1\n          pop\n            /* \"#utility.yul\":1587:1620   */\n          tag_69\n            /* \"#utility.yul\":1614:1619   */\n          dup2\n            /* \"#utility.yul\":1587:1620   */\n          tag_30\n          jump\t// in\n        tag_69:\n            /* \"#utility.yul\":1483:1626   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1632:1722   */\n        tag_32:\n            /* \"#utility.yul\":1667:1674   */\n          0x00\n            /* \"#utility.yul\":1710:1715   */\n          dup2\n            /* \"#utility.yul\":1707:1708   */\n          0x02\n            /* \"#utility.yul\":1696:1716   */\n          signextend\n            /* \"#utility.yul\":1685:1716   */\n          swap1\n          pop\n            /* \"#utility.yul\":1632:1722   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1728:1846   */\n        tag_33:\n            /* \"#utility.yul\":1799:1821   */\n          tag_72\n            /* \"#utility.yul\":1815:1820   */\n          dup2\n            /* \"#utility.yul\":1799:1821   */\n          tag_32\n          jump\t// in\n        tag_72:\n            /* \"#utility.yul\":1792:1797   */\n          dup2\n            /* \"#utility.yul\":1789:1822   */\n          eq\n            /* \"#utility.yul\":1779:1840   */\n          tag_73\n          jumpi\n            /* \"#utility.yul\":1836:1837   */\n          0x00\n            /* \"#utility.yul\":1833:1834   */\n          0x00\n            /* \"#utility.yul\":1826:1838   */\n          revert\n            /* \"#utility.yul\":1779:1840   */\n        tag_73:\n            /* \"#utility.yul\":1728:1846   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1852:1991   */\n        tag_34:\n            /* \"#utility.yul\":1907:1912   */\n          0x00\n            /* \"#utility.yul\":1938:1944   */\n          dup2\n            /* \"#utility.yul\":1932:1945   */\n          mload\n            /* \"#utility.yul\":1923:1945   */\n          swap1\n          pop\n            /* \"#utility.yul\":1954:1985   */\n          tag_75\n            /* \"#utility.yul\":1979:1984   */\n          dup2\n            /* \"#utility.yul\":1954:1985   */\n          tag_33\n          jump\t// in\n        tag_75:\n            /* \"#utility.yul\":1852:1991   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1997:2086   */\n        tag_35:\n            /* \"#utility.yul\":2033:2040   */\n          0x00\n            /* \"#utility.yul\":2073:2079   */\n          0xffff\n            /* \"#utility.yul\":2066:2071   */\n          dup3\n            /* \"#utility.yul\":2062:2080   */\n          and\n            /* \"#utility.yul\":2051:2080   */\n          swap1\n          pop\n            /* \"#utility.yul\":1997:2086   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2092:2212   */\n        tag_36:\n            /* \"#utility.yul\":2164:2187   */\n          tag_78\n            /* \"#utility.yul\":2181:2186   */\n          dup2\n            /* \"#utility.yul\":2164:2187   */\n          tag_35\n          jump\t// in\n        tag_78:\n            /* \"#utility.yul\":2157:2162   */\n          dup2\n            /* \"#utility.yul\":2154:2188   */\n          eq\n            /* \"#utility.yul\":2144:2206   */\n          tag_79\n          jumpi\n            /* \"#utility.yul\":2202:2203   */\n          0x00\n            /* \"#utility.yul\":2199:2200   */\n          0x00\n            /* \"#utility.yul\":2192:2204   */\n          revert\n            /* \"#utility.yul\":2144:2206   */\n        tag_79:\n            /* \"#utility.yul\":2092:2212   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2218:2359   */\n        tag_37:\n            /* \"#utility.yul\":2274:2279   */\n          0x00\n            /* \"#utility.yul\":2305:2311   */\n          dup2\n            /* \"#utility.yul\":2299:2312   */\n          mload\n            /* \"#utility.yul\":2290:2312   */\n          swap1\n          pop\n            /* \"#utility.yul\":2321:2353   */\n          tag_81\n            /* \"#utility.yul\":2347:2352   */\n          dup2\n            /* \"#utility.yul\":2321:2353   */\n          tag_36\n          jump\t// in\n        tag_81:\n            /* \"#utility.yul\":2218:2359   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2365:2451   */\n        tag_38:\n            /* \"#utility.yul\":2400:2407   */\n          0x00\n            /* \"#utility.yul\":2440:2444   */\n          0xff\n            /* \"#utility.yul\":2433:2438   */\n          dup3\n            /* \"#utility.yul\":2429:2445   */\n          and\n            /* \"#utility.yul\":2418:2445   */\n          swap1\n          pop\n            /* \"#utility.yul\":2365:2451   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2457:2575   */\n        tag_39:\n            /* \"#utility.yul\":2528:2550   */\n          tag_84\n            /* \"#utility.yul\":2544:2549   */\n          dup2\n            /* \"#utility.yul\":2528:2550   */\n          tag_38\n          jump\t// in\n        tag_84:\n            /* \"#utility.yul\":2521:2526   */\n          dup2\n            /* \"#utility.yul\":2518:2551   */\n          eq\n            /* \"#utility.yul\":2508:2569   */\n          tag_85\n          jumpi\n            /* \"#utility.yul\":2565:2566   */\n          0x00\n            /* \"#utility.yul\":2562:2563   */\n          0x00\n            /* \"#utility.yul\":2555:2567   */\n          revert\n            /* \"#utility.yul\":2508:2569   */\n        tag_85:\n            /* \"#utility.yul\":2457:2575   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2581:2720   */\n        tag_40:\n            /* \"#utility.yul\":2636:2641   */\n          0x00\n            /* \"#utility.yul\":2667:2673   */\n          dup2\n            /* \"#utility.yul\":2661:2674   */\n          mload\n            /* \"#utility.yul\":2652:2674   */\n          swap1\n          pop\n            /* \"#utility.yul\":2683:2714   */\n          tag_87\n            /* \"#utility.yul\":2708:2713   */\n          dup2\n            /* \"#utility.yul\":2683:2714   */\n          tag_39\n          jump\t// in\n        tag_87:\n            /* \"#utility.yul\":2581:2720   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2726:2816   */\n        tag_41:\n            /* \"#utility.yul\":2760:2767   */\n          0x00\n            /* \"#utility.yul\":2803:2808   */\n          dup2\n            /* \"#utility.yul\":2796:2809   */\n          iszero\n            /* \"#utility.yul\":2789:2810   */\n          iszero\n            /* \"#utility.yul\":2778:2810   */\n          swap1\n          pop\n            /* \"#utility.yul\":2726:2816   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2822:2938   */\n        tag_42:\n            /* \"#utility.yul\":2892:2913   */\n          tag_90\n            /* \"#utility.yul\":2907:2912   */\n          dup2\n            /* \"#utility.yul\":2892:2913   */\n          tag_41\n          jump\t// in\n        tag_90:\n            /* \"#utility.yul\":2885:2890   */\n          dup2\n            /* \"#utility.yul\":2882:2914   */\n          eq\n            /* \"#utility.yul\":2872:2932   */\n          tag_91\n          jumpi\n            /* \"#utility.yul\":2928:2929   */\n          0x00\n            /* \"#utility.yul\":2925:2926   */\n          0x00\n            /* \"#utility.yul\":2918:2930   */\n          revert\n            /* \"#utility.yul\":2872:2932   */\n        tag_91:\n            /* \"#utility.yul\":2822:2938   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2944:3081   */\n        tag_43:\n            /* \"#utility.yul\":2998:3003   */\n          0x00\n            /* \"#utility.yul\":3029:3035   */\n          dup2\n            /* \"#utility.yul\":3023:3036   */\n          mload\n            /* \"#utility.yul\":3014:3036   */\n          swap1\n          pop\n            /* \"#utility.yul\":3045:3075   */\n          tag_93\n            /* \"#utility.yul\":3069:3074   */\n          dup2\n            /* \"#utility.yul\":3045:3075   */\n          tag_42\n          jump\t// in\n        tag_93:\n            /* \"#utility.yul\":2944:3081   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3087:4358   */\n        tag_17:\n            /* \"#utility.yul\":3201:3207   */\n          0x00\n            /* \"#utility.yul\":3209:3215   */\n          0x00\n            /* \"#utility.yul\":3217:3223   */\n          0x00\n            /* \"#utility.yul\":3225:3231   */\n          0x00\n            /* \"#utility.yul\":3233:3239   */\n          0x00\n            /* \"#utility.yul\":3241:3247   */\n          0x00\n            /* \"#utility.yul\":3249:3255   */\n          0x00\n            /* \"#utility.yul\":3298:3301   */\n          0xe0\n            /* \"#utility.yul\":3286:3295   */\n          dup9\n            /* \"#utility.yul\":3277:3284   */\n          dup11\n            /* \"#utility.yul\":3273:3296   */\n          sub\n            /* \"#utility.yul\":3269:3302   */\n          slt\n            /* \"#utility.yul\":3266:3386   */\n          iszero\n          tag_95\n          jumpi\n            /* \"#utility.yul\":3305:3384   */\n          tag_96\n          tag_28\n          jump\t// in\n        tag_96:\n            /* \"#utility.yul\":3266:3386   */\n        tag_95:\n            /* \"#utility.yul\":3425:3426   */\n          0x00\n            /* \"#utility.yul\":3450:3514   */\n          tag_97\n            /* \"#utility.yul\":3506:3513   */\n          dup11\n            /* \"#utility.yul\":3497:3503   */\n          dup3\n            /* \"#utility.yul\":3486:3495   */\n          dup12\n            /* \"#utility.yul\":3482:3504   */\n          add\n            /* \"#utility.yul\":3450:3514   */\n          tag_31\n          jump\t// in\n        tag_97:\n            /* \"#utility.yul\":3440:3514   */\n          swap8\n          pop\n            /* \"#utility.yul\":3396:3524   */\n          pop\n            /* \"#utility.yul\":3563:3565   */\n          0x20\n            /* \"#utility.yul\":3589:3651   */\n          tag_98\n            /* \"#utility.yul\":3643:3650   */\n          dup11\n            /* \"#utility.yul\":3634:3640   */\n          dup3\n            /* \"#utility.yul\":3623:3632   */\n          dup12\n            /* \"#utility.yul\":3619:3641   */\n          add\n            /* \"#utility.yul\":3589:3651   */\n          tag_34\n          jump\t// in\n        tag_98:\n            /* \"#utility.yul\":3579:3651   */\n          swap7\n          pop\n            /* \"#utility.yul\":3534:3661   */\n          pop\n            /* \"#utility.yul\":3700:3702   */\n          0x40\n            /* \"#utility.yul\":3726:3789   */\n          tag_99\n            /* \"#utility.yul\":3781:3788   */\n          dup11\n            /* \"#utility.yul\":3772:3778   */\n          dup3\n            /* \"#utility.yul\":3761:3770   */\n          dup12\n            /* \"#utility.yul\":3757:3779   */\n          add\n            /* \"#utility.yul\":3726:3789   */\n          tag_37\n          jump\t// in\n        tag_99:\n            /* \"#utility.yul\":3716:3789   */\n          swap6\n          pop\n            /* \"#utility.yul\":3671:3799   */\n          pop\n            /* \"#utility.yul\":3838:3840   */\n          0x60\n            /* \"#utility.yul\":3864:3927   */\n          tag_100\n            /* \"#utility.yul\":3919:3926   */\n          dup11\n            /* \"#utility.yul\":3910:3916   */\n          dup3\n            /* \"#utility.yul\":3899:3908   */\n          dup12\n            /* \"#utility.yul\":3895:3917   */\n          add\n            /* \"#utility.yul\":3864:3927   */\n          tag_37\n          jump\t// in\n        tag_100:\n            /* \"#utility.yul\":3854:3927   */\n          swap5\n          pop\n            /* \"#utility.yul\":3809:3937   */\n          pop\n            /* \"#utility.yul\":3976:3979   */\n          0x80\n            /* \"#utility.yul\":4003:4066   */\n          tag_101\n            /* \"#utility.yul\":4058:4065   */\n          dup11\n            /* \"#utility.yul\":4049:4055   */\n          dup3\n            /* \"#utility.yul\":4038:4047   */\n          dup12\n            /* \"#utility.yul\":4034:4056   */\n          add\n            /* \"#utility.yul\":4003:4066   */\n          tag_37\n          jump\t// in\n        tag_101:\n            /* \"#utility.yul\":3993:4066   */\n          swap4\n          pop\n            /* \"#utility.yul\":3947:4076   */\n          pop\n            /* \"#utility.yul\":4115:4118   */\n          0xa0\n            /* \"#utility.yul\":4142:4204   */\n          tag_102\n            /* \"#utility.yul\":4196:4203   */\n          dup11\n            /* \"#utility.yul\":4187:4193   */\n          dup3\n            /* \"#utility.yul\":4176:4185   */\n          dup12\n            /* \"#utility.yul\":4172:4194   */\n          add\n            /* \"#utility.yul\":4142:4204   */\n          tag_40\n          jump\t// in\n        tag_102:\n            /* \"#utility.yul\":4132:4204   */\n          swap3\n          pop\n            /* \"#utility.yul\":4086:4214   */\n          pop\n            /* \"#utility.yul\":4253:4256   */\n          0xc0\n            /* \"#utility.yul\":4280:4341   */\n          tag_103\n            /* \"#utility.yul\":4333:4340   */\n          dup11\n            /* \"#utility.yul\":4324:4330   */\n          dup3\n            /* \"#utility.yul\":4313:4322   */\n          dup12\n            /* \"#utility.yul\":4309:4331   */\n          add\n            /* \"#utility.yul\":4280:4341   */\n          tag_43\n          jump\t// in\n        tag_103:\n            /* \"#utility.yul\":4270:4341   */\n          swap2\n          pop\n            /* \"#utility.yul\":4224:4351   */\n          pop\n            /* \"#utility.yul\":3087:4358   */\n          swap3\n          swap6\n          swap9\n          swap2\n          swap5\n          swap8\n          pop\n          swap3\n          swap6\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4364:4544   */\n        tag_44:\n            /* \"#utility.yul\":4412:4489   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":4409:4410   */\n          0x00\n            /* \"#utility.yul\":4402:4490   */\n          mstore\n            /* \"#utility.yul\":4509:4513   */\n          0x11\n            /* \"#utility.yul\":4506:4507   */\n          0x04\n            /* \"#utility.yul\":4499:4514   */\n          mstore\n            /* \"#utility.yul\":4533:4537   */\n          0x24\n            /* \"#utility.yul\":4530:4531   */\n          0x00\n            /* \"#utility.yul\":4523:4538   */\n          revert\n            /* \"#utility.yul\":4550:4652   */\n        tag_45:\n            /* \"#utility.yul\":4592:4600   */\n          0x00\n            /* \"#utility.yul\":4639:4644   */\n          dup2\n            /* \"#utility.yul\":4636:4637   */\n          0x01\n            /* \"#utility.yul\":4632:4645   */\n          shr\n            /* \"#utility.yul\":4611:4645   */\n          swap1\n          pop\n            /* \"#utility.yul\":4550:4652   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4658:5506   */\n        tag_46:\n            /* \"#utility.yul\":4719:4724   */\n          0x00\n            /* \"#utility.yul\":4726:4730   */\n          0x00\n            /* \"#utility.yul\":4750:4756   */\n          dup3\n            /* \"#utility.yul\":4741:4756   */\n          swap2\n          pop\n            /* \"#utility.yul\":4774:4779   */\n          dup4\n            /* \"#utility.yul\":4765:4779   */\n          swap1\n          pop\n            /* \"#utility.yul\":4788:5500   */\n        tag_107:\n            /* \"#utility.yul\":4809:4810   */\n          0x01\n            /* \"#utility.yul\":4799:4807   */\n          dup6\n            /* \"#utility.yul\":4796:4811   */\n          gt\n            /* \"#utility.yul\":4788:5500   */\n          iszero\n          tag_109\n          jumpi\n            /* \"#utility.yul\":4904:4908   */\n          dup1\n            /* \"#utility.yul\":4899:4902   */\n          dup7\n            /* \"#utility.yul\":4895:4909   */\n          div\n            /* \"#utility.yul\":4889:4893   */\n          dup2\n            /* \"#utility.yul\":4886:4910   */\n          gt\n            /* \"#utility.yul\":4883:4933   */\n          iszero\n          tag_110\n          jumpi\n            /* \"#utility.yul\":4913:4931   */\n          tag_111\n          tag_44\n          jump\t// in\n        tag_111:\n            /* \"#utility.yul\":4883:4933   */\n        tag_110:\n            /* \"#utility.yul\":4963:4964   */\n          0x01\n            /* \"#utility.yul\":4953:4961   */\n          dup6\n            /* \"#utility.yul\":4949:4965   */\n          and\n            /* \"#utility.yul\":4946:5397   */\n          iszero\n          tag_112\n          jumpi\n            /* \"#utility.yul\":5378:5382   */\n          dup1\n            /* \"#utility.yul\":5371:5376   */\n          dup3\n            /* \"#utility.yul\":5367:5383   */\n          mul\n            /* \"#utility.yul\":5358:5383   */\n          swap2\n          pop\n            /* \"#utility.yul\":4946:5397   */\n        tag_112:\n            /* \"#utility.yul\":5428:5432   */\n          dup1\n            /* \"#utility.yul\":5422:5426   */\n          dup2\n            /* \"#utility.yul\":5418:5433   */\n          mul\n            /* \"#utility.yul\":5410:5433   */\n          swap1\n          pop\n            /* \"#utility.yul\":5458:5490   */\n          tag_113\n            /* \"#utility.yul\":5481:5489   */\n          dup6\n            /* \"#utility.yul\":5458:5490   */\n          tag_45\n          jump\t// in\n        tag_113:\n            /* \"#utility.yul\":5446:5490   */\n          swap5\n          pop\n            /* \"#utility.yul\":4788:5500   */\n          jump(tag_107)\n        tag_109:\n            /* \"#utility.yul\":4658:5506   */\n          swap5\n          pop\n          swap5\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5512:6585   */\n        tag_47:\n            /* \"#utility.yul\":5566:5571   */\n          0x00\n            /* \"#utility.yul\":5757:5765   */\n          dup3\n            /* \"#utility.yul\":5747:5787   */\n          tag_115\n          jumpi\n            /* \"#utility.yul\":5778:5779   */\n          0x01\n            /* \"#utility.yul\":5769:5779   */\n          swap1\n          pop\n            /* \"#utility.yul\":5780:5785   */\n          jump(tag_114)\n            /* \"#utility.yul\":5747:5787   */\n        tag_115:\n            /* \"#utility.yul\":5806:5810   */\n          dup2\n            /* \"#utility.yul\":5796:5832   */\n          tag_116\n          jumpi\n            /* \"#utility.yul\":5823:5824   */\n          0x00\n            /* \"#utility.yul\":5814:5824   */\n          swap1\n          pop\n            /* \"#utility.yul\":5825:5830   */\n          jump(tag_114)\n            /* \"#utility.yul\":5796:5832   */\n        tag_116:\n            /* \"#utility.yul\":5892:5896   */\n          dup2\n            /* \"#utility.yul\":5940:5941   */\n          0x01\n            /* \"#utility.yul\":5935:5962   */\n          dup2\n          eq\n          tag_118\n          jumpi\n            /* \"#utility.yul\":5976:5977   */\n          0x02\n            /* \"#utility.yul\":5971:6162   */\n          dup2\n          eq\n          tag_119\n          jumpi\n            /* \"#utility.yul\":5885:6162   */\n          jump(tag_117)\n            /* \"#utility.yul\":5935:5962   */\n        tag_118:\n            /* \"#utility.yul\":5953:5954   */\n          0x01\n            /* \"#utility.yul\":5944:5954   */\n          swap2\n          pop\n            /* \"#utility.yul\":5955:5960   */\n          pop\n          jump(tag_114)\n            /* \"#utility.yul\":5971:6162   */\n        tag_119:\n            /* \"#utility.yul\":6016:6019   */\n          0xff\n            /* \"#utility.yul\":6006:6014   */\n          dup5\n            /* \"#utility.yul\":6003:6020   */\n          gt\n            /* \"#utility.yul\":6000:6043   */\n          iszero\n          tag_120\n          jumpi\n            /* \"#utility.yul\":6023:6041   */\n          tag_121\n          tag_44\n          jump\t// in\n        tag_121:\n            /* \"#utility.yul\":6000:6043   */\n        tag_120:\n            /* \"#utility.yul\":6072:6080   */\n          dup4\n            /* \"#utility.yul\":6069:6070   */\n          0x02\n            /* \"#utility.yul\":6065:6081   */\n          exp\n            /* \"#utility.yul\":6056:6081   */\n          swap2\n          pop\n            /* \"#utility.yul\":6107:6110   */\n          dup5\n            /* \"#utility.yul\":6100:6105   */\n          dup3\n            /* \"#utility.yul\":6097:6111   */\n          gt\n            /* \"#utility.yul\":6094:6134   */\n          iszero\n          tag_122\n          jumpi\n            /* \"#utility.yul\":6114:6132   */\n          tag_123\n          tag_44\n          jump\t// in\n        tag_123:\n            /* \"#utility.yul\":6094:6134   */\n        tag_122:\n            /* \"#utility.yul\":6147:6152   */\n          pop\n          jump(tag_114)\n            /* \"#utility.yul\":5885:6162   */\n        tag_117:\n          pop\n            /* \"#utility.yul\":6271:6273   */\n          0x20\n            /* \"#utility.yul\":6261:6269   */\n          dup4\n            /* \"#utility.yul\":6258:6274   */\n          lt\n            /* \"#utility.yul\":6252:6255   */\n          0x0133\n            /* \"#utility.yul\":6246:6250   */\n          dup4\n            /* \"#utility.yul\":6243:6256   */\n          lt\n            /* \"#utility.yul\":6239:6275   */\n          and\n            /* \"#utility.yul\":6221:6223   */\n          0x4e\n            /* \"#utility.yul\":6211:6219   */\n          dup5\n            /* \"#utility.yul\":6208:6224   */\n          lt\n            /* \"#utility.yul\":6203:6205   */\n          0x0b\n            /* \"#utility.yul\":6197:6201   */\n          dup5\n            /* \"#utility.yul\":6194:6206   */\n          lt\n            /* \"#utility.yul\":6190:6225   */\n          and\n            /* \"#utility.yul\":6174:6285   */\n          or\n            /* \"#utility.yul\":6171:6417   */\n          iszero\n          tag_124\n          jumpi\n            /* \"#utility.yul\":6327:6335   */\n          dup3\n            /* \"#utility.yul\":6321:6325   */\n          dup3\n            /* \"#utility.yul\":6317:6336   */\n          exp\n            /* \"#utility.yul\":6308:6336   */\n          swap1\n          pop\n            /* \"#utility.yul\":6362:6365   */\n          dup4\n            /* \"#utility.yul\":6355:6360   */\n          dup2\n            /* \"#utility.yul\":6352:6366   */\n          gt\n            /* \"#utility.yul\":6349:6389   */\n          iszero\n          tag_125\n          jumpi\n            /* \"#utility.yul\":6369:6387   */\n          tag_126\n          tag_44\n          jump\t// in\n        tag_126:\n            /* \"#utility.yul\":6349:6389   */\n        tag_125:\n            /* \"#utility.yul\":6402:6407   */\n          jump(tag_114)\n            /* \"#utility.yul\":6171:6417   */\n        tag_124:\n            /* \"#utility.yul\":6442:6484   */\n          tag_127\n            /* \"#utility.yul\":6480:6483   */\n          dup5\n            /* \"#utility.yul\":6470:6478   */\n          dup5\n            /* \"#utility.yul\":6464:6468   */\n          dup5\n            /* \"#utility.yul\":6461:6462   */\n          0x01\n            /* \"#utility.yul\":6442:6484   */\n          tag_46\n          jump\t// in\n        tag_127:\n            /* \"#utility.yul\":6427:6484   */\n          swap3\n          pop\n          swap1\n          pop\n            /* \"#utility.yul\":6516:6520   */\n          dup2\n            /* \"#utility.yul\":6511:6514   */\n          dup5\n            /* \"#utility.yul\":6507:6521   */\n          div\n            /* \"#utility.yul\":6500:6505   */\n          dup2\n            /* \"#utility.yul\":6497:6522   */\n          gt\n            /* \"#utility.yul\":6494:6545   */\n          iszero\n          tag_128\n          jumpi\n            /* \"#utility.yul\":6525:6543   */\n          tag_129\n          tag_44\n          jump\t// in\n        tag_129:\n            /* \"#utility.yul\":6494:6545   */\n        tag_128:\n            /* \"#utility.yul\":6574:6578   */\n          dup2\n            /* \"#utility.yul\":6567:6572   */\n          dup2\n            /* \"#utility.yul\":6563:6579   */\n          mul\n            /* \"#utility.yul\":6554:6579   */\n          swap1\n          pop\n            /* \"#utility.yul\":5512:6585   */\n        tag_114:\n          swap4\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6591:6872   */\n        tag_19:\n            /* \"#utility.yul\":6649:6654   */\n          0x00\n            /* \"#utility.yul\":6673:6696   */\n          tag_131\n            /* \"#utility.yul\":6691:6695   */\n          dup3\n            /* \"#utility.yul\":6673:6696   */\n          tag_25\n          jump\t// in\n        tag_131:\n            /* \"#utility.yul\":6665:6696   */\n          swap2\n          pop\n            /* \"#utility.yul\":6717:6742   */\n          tag_132\n            /* \"#utility.yul\":6733:6741   */\n          dup4\n            /* \"#utility.yul\":6717:6742   */\n          tag_38\n          jump\t// in\n        tag_132:\n            /* \"#utility.yul\":6705:6742   */\n          swap3\n          pop\n            /* \"#utility.yul\":6761:6865   */\n          tag_133\n            /* \"#utility.yul\":6798:6864   */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":6788:6796   */\n          dup5\n            /* \"#utility.yul\":6782:6786   */\n          dup5\n            /* \"#utility.yul\":6761:6865   */\n          tag_47\n          jump\t// in\n        tag_133:\n            /* \"#utility.yul\":6752:6865   */\n          swap1\n          pop\n            /* \"#utility.yul\":6591:6872   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6878:7058   */\n        tag_48:\n            /* \"#utility.yul\":6926:7003   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":6923:6924   */\n          0x00\n            /* \"#utility.yul\":6916:7004   */\n          mstore\n            /* \"#utility.yul\":7023:7027   */\n          0x12\n            /* \"#utility.yul\":7020:7021   */\n          0x04\n            /* \"#utility.yul\":7013:7028   */\n          mstore\n            /* \"#utility.yul\":7047:7051   */\n          0x24\n            /* \"#utility.yul\":7044:7045   */\n          0x00\n            /* \"#utility.yul\":7037:7052   */\n          revert\n            /* \"#utility.yul\":7064:7249   */\n        tag_21:\n            /* \"#utility.yul\":7104:7105   */\n          0x00\n            /* \"#utility.yul\":7121:7141   */\n          tag_136\n            /* \"#utility.yul\":7139:7140   */\n          dup3\n            /* \"#utility.yul\":7121:7141   */\n          tag_25\n          jump\t// in\n        tag_136:\n            /* \"#utility.yul\":7116:7141   */\n          swap2\n          pop\n            /* \"#utility.yul\":7155:7175   */\n          tag_137\n            /* \"#utility.yul\":7173:7174   */\n          dup4\n            /* \"#utility.yul\":7155:7175   */\n          tag_25\n          jump\t// in\n        tag_137:\n            /* \"#utility.yul\":7150:7175   */\n          swap3\n          pop\n            /* \"#utility.yul\":7194:7195   */\n          dup3\n            /* \"#utility.yul\":7184:7219   */\n          tag_138\n          jumpi\n            /* \"#utility.yul\":7199:7217   */\n          tag_139\n          tag_48\n          jump\t// in\n        tag_139:\n            /* \"#utility.yul\":7184:7219   */\n        tag_138:\n            /* \"#utility.yul\":7241:7242   */\n          dup3\n            /* \"#utility.yul\":7238:7239   */\n          dup3\n            /* \"#utility.yul\":7234:7243   */\n          div\n            /* \"#utility.yul\":7229:7243   */\n          swap1\n          pop\n            /* \"#utility.yul\":7064:7249   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1639": {
									"entryPoint": null,
									"id": 1639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 1118,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 923,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1251,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11968:1",
										"nodeType": "YulBlock",
										"src": "0:11968:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "505:54:1",
													"nodeType": "YulBlock",
													"src": "505:54:1",
													"statements": [
														{
															"nativeSrc": "515:38:1",
															"nodeType": "YulAssignment",
															"src": "515:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "540:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:1"
																		},
																		"nativeSrc": "529:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:1",
																				"nodeType": "YulLiteral",
																				"src": "549:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:1"
																		},
																		"nativeSrc": "545:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																},
																"nativeSrc": "525:28:1",
																"nodeType": "YulFunctionCall",
																"src": "525:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:1",
														"nodeType": "YulTypedName",
														"src": "488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:1",
														"nodeType": "YulTypedName",
														"src": "498:6:1",
														"type": ""
													}
												],
												"src": "457:102:1"
											},
											{
												"body": {
													"nativeSrc": "593:152:1",
													"nodeType": "YulBlock",
													"src": "593:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:1",
																		"nodeType": "YulLiteral",
																		"src": "610:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:1",
																		"nodeType": "YulLiteral",
																		"src": "613:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:1"
																},
																"nativeSrc": "603:88:1",
																"nodeType": "YulFunctionCall",
																"src": "603:88:1"
															},
															"nativeSrc": "603:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:1",
																		"nodeType": "YulLiteral",
																		"src": "707:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:1",
																		"nodeType": "YulLiteral",
																		"src": "710:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:1"
																},
																"nativeSrc": "700:15:1",
																"nodeType": "YulFunctionCall",
																"src": "700:15:1"
															},
															"nativeSrc": "700:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:1",
																		"nodeType": "YulLiteral",
																		"src": "731:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:1",
																		"nodeType": "YulLiteral",
																		"src": "734:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:1"
																},
																"nativeSrc": "724:15:1",
																"nodeType": "YulFunctionCall",
																"src": "724:15:1"
															},
															"nativeSrc": "724:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:1"
											},
											{
												"body": {
													"nativeSrc": "794:238:1",
													"nodeType": "YulBlock",
													"src": "794:238:1",
													"statements": [
														{
															"nativeSrc": "804:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:1"
																		},
																		"nativeSrc": "834:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:1"
																},
																"nativeSrc": "822:40:1",
																"nodeType": "YulFunctionCall",
																"src": "822:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:1",
																	"nodeType": "YulTypedName",
																	"src": "808:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:1",
																"nodeType": "YulBlock",
																"src": "973:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:1"
																			},
																			"nativeSrc": "975:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:1"
																		},
																		"nativeSrc": "975:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:1",
																				"nodeType": "YulLiteral",
																				"src": "928:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:1"
																		},
																		"nativeSrc": "913:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:1"
																		},
																		"nativeSrc": "949:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:1"
																},
																"nativeSrc": "910:62:1",
																"nodeType": "YulFunctionCall",
																"src": "910:62:1"
															},
															"nativeSrc": "907:88:1",
															"nodeType": "YulIf",
															"src": "907:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:1"
																},
																"nativeSrc": "1004:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:1"
															},
															"nativeSrc": "1004:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:1",
														"nodeType": "YulTypedName",
														"src": "780:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:1",
														"nodeType": "YulTypedName",
														"src": "788:4:1",
														"type": ""
													}
												],
												"src": "751:281:1"
											},
											{
												"body": {
													"nativeSrc": "1079:88:1",
													"nodeType": "YulBlock",
													"src": "1079:88:1",
													"statements": [
														{
															"nativeSrc": "1089:30:1",
															"nodeType": "YulAssignment",
															"src": "1089:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:1"
																},
																"nativeSrc": "1099:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:1"
																},
																"nativeSrc": "1128:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:1"
															},
															"nativeSrc": "1128:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:1",
														"nodeType": "YulTypedName",
														"src": "1063:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:1",
														"nodeType": "YulTypedName",
														"src": "1072:6:1",
														"type": ""
													}
												],
												"src": "1038:129:1"
											},
											{
												"body": {
													"nativeSrc": "1255:229:1",
													"nodeType": "YulBlock",
													"src": "1255:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:1",
																"nodeType": "YulBlock",
																"src": "1360:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:1"
																			},
																			"nativeSrc": "1362:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:1"
																		},
																		"nativeSrc": "1362:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:1"
																},
																"nativeSrc": "1329:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:1"
															},
															"nativeSrc": "1326:56:1",
															"nodeType": "YulIf",
															"src": "1326:56:1"
														},
														{
															"nativeSrc": "1392:25:1",
															"nodeType": "YulAssignment",
															"src": "1392:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:1"
																},
																"nativeSrc": "1400:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:1"
																}
															]
														},
														{
															"nativeSrc": "1454:23:1",
															"nodeType": "YulAssignment",
															"src": "1454:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:1"
																},
																"nativeSrc": "1462:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:1",
														"nodeType": "YulTypedName",
														"src": "1239:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:1",
														"nodeType": "YulTypedName",
														"src": "1250:4:1",
														"type": ""
													}
												],
												"src": "1173:311:1"
											},
											{
												"body": {
													"nativeSrc": "1579:28:1",
													"nodeType": "YulBlock",
													"src": "1579:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nativeSrc": "1589:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:1"
															},
															"nativeSrc": "1589:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:1"
											},
											{
												"body": {
													"nativeSrc": "1658:81:1",
													"nodeType": "YulBlock",
													"src": "1658:81:1",
													"statements": [
														{
															"nativeSrc": "1668:65:1",
															"nodeType": "YulAssignment",
															"src": "1668:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:1"
																},
																"nativeSrc": "1679:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:1",
														"nodeType": "YulTypedName",
														"src": "1640:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:1",
														"nodeType": "YulTypedName",
														"src": "1650:7:1",
														"type": ""
													}
												],
												"src": "1613:126:1"
											},
											{
												"body": {
													"nativeSrc": "1790:51:1",
													"nodeType": "YulBlock",
													"src": "1790:51:1",
													"statements": [
														{
															"nativeSrc": "1800:35:1",
															"nodeType": "YulAssignment",
															"src": "1800:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:1"
																},
																"nativeSrc": "1811:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:1",
														"nodeType": "YulTypedName",
														"src": "1772:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:1",
														"nodeType": "YulTypedName",
														"src": "1782:7:1",
														"type": ""
													}
												],
												"src": "1745:96:1"
											},
											{
												"body": {
													"nativeSrc": "1890:79:1",
													"nodeType": "YulBlock",
													"src": "1890:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:1",
																"nodeType": "YulBlock",
																"src": "1947:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:1"
																			},
																			"nativeSrc": "1949:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:1"
																		},
																		"nativeSrc": "1949:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:1"
																				},
																				"nativeSrc": "1920:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:1"
																		},
																		"nativeSrc": "1910:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:1"
																},
																"nativeSrc": "1903:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:1"
															},
															"nativeSrc": "1900:63:1",
															"nodeType": "YulIf",
															"src": "1900:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:1",
														"nodeType": "YulTypedName",
														"src": "1883:5:1",
														"type": ""
													}
												],
												"src": "1847:122:1"
											},
											{
												"body": {
													"nativeSrc": "2038:80:1",
													"nodeType": "YulBlock",
													"src": "2038:80:1",
													"statements": [
														{
															"nativeSrc": "2048:22:1",
															"nodeType": "YulAssignment",
															"src": "2048:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:1"
																},
																"nativeSrc": "2057:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:1"
																},
																"nativeSrc": "2079:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:1"
															},
															"nativeSrc": "2079:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:1",
														"nodeType": "YulTypedName",
														"src": "2016:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:1",
														"nodeType": "YulTypedName",
														"src": "2024:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:1",
														"nodeType": "YulTypedName",
														"src": "2032:5:1",
														"type": ""
													}
												],
												"src": "1975:143:1"
											},
											{
												"body": {
													"nativeSrc": "2254:619:1",
													"nodeType": "YulBlock",
													"src": "2254:619:1",
													"statements": [
														{
															"nativeSrc": "2264:90:1",
															"nodeType": "YulAssignment",
															"src": "2264:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:1"
																		},
																		"nativeSrc": "2289:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:1"
																},
																"nativeSrc": "2273:81:1",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:1"
																}
															]
														},
														{
															"nativeSrc": "2363:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:1",
																"nodeType": "YulIdentifier",
																"src": "2374:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:1"
																},
																"nativeSrc": "2389:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:1"
															},
															"nativeSrc": "2389:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:1"
														},
														{
															"nativeSrc": "2419:23:1",
															"nodeType": "YulAssignment",
															"src": "2419:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:1"
																},
																"nativeSrc": "2426:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:1"
																}
															]
														},
														{
															"nativeSrc": "2452:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:1"
																		},
																		"nativeSrc": "2478:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:1"
																},
																"nativeSrc": "2466:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:1",
																"nodeType": "YulBlock",
																"src": "2524:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:1"
																			},
																			"nativeSrc": "2538:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:1"
																		},
																		"nativeSrc": "2538:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:1"
																},
																"nativeSrc": "2508:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:1"
															},
															"nativeSrc": "2505:122:1",
															"nodeType": "YulIf",
															"src": "2505:122:1"
														},
														{
															"body": {
																"nativeSrc": "2712:155:1",
																"nodeType": "YulBlock",
																"src": "2712:155:1",
																"statements": [
																	{
																		"nativeSrc": "2727:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:1",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:1"
																					},
																					"nativeSrc": "2774:48:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:1"
																			},
																			"nativeSrc": "2762:61:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:1"
																		},
																		"nativeSrc": "2762:61:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:1"
																	},
																	{
																		"nativeSrc": "2836:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:1"
																			},
																			"nativeSrc": "2843:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:1"
																},
																"nativeSrc": "2662:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:1"
															},
															"nativeSrc": "2636:231:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:1",
																"nodeType": "YulBlock",
																"src": "2678:25:1",
																"statements": [
																	{
																		"nativeSrc": "2680:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:1"
																			},
																			"nativeSrc": "2687:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:1",
																"nodeType": "YulBlock",
																"src": "2640:21:1",
																"statements": [
																	{
																		"nativeSrc": "2642:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:1",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:1",
														"nodeType": "YulTypedName",
														"src": "2224:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:1",
														"nodeType": "YulTypedName",
														"src": "2232:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:1",
														"nodeType": "YulTypedName",
														"src": "2240:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:1",
														"nodeType": "YulTypedName",
														"src": "2248:5:1",
														"type": ""
													}
												],
												"src": "2141:732:1"
											},
											{
												"body": {
													"nativeSrc": "2984:297:1",
													"nodeType": "YulBlock",
													"src": "2984:297:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:1",
																"nodeType": "YulBlock",
																"src": "3033:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:1"
																			},
																			"nativeSrc": "3035:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:1"
																		},
																		"nativeSrc": "3035:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:1"
																				},
																				"nativeSrc": "3008:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:1"
																		},
																		"nativeSrc": "3004:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:1"
																},
																"nativeSrc": "2997:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:1"
															},
															"nativeSrc": "2994:122:1",
															"nodeType": "YulIf",
															"src": "2994:122:1"
														},
														{
															"nativeSrc": "3125:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:1"
																},
																"nativeSrc": "3139:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:1",
															"nodeType": "YulAssignment",
															"src": "3161:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:1"
																		},
																		"nativeSrc": "3244:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:1"
																},
																"nativeSrc": "3170:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:1",
														"nodeType": "YulTypedName",
														"src": "2962:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:1",
														"nodeType": "YulTypedName",
														"src": "2970:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:1",
														"nodeType": "YulTypedName",
														"src": "2978:5:1",
														"type": ""
													}
												],
												"src": "2896:385:1"
											},
											{
												"body": {
													"nativeSrc": "3406:591:1",
													"nodeType": "YulBlock",
													"src": "3406:591:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3452:83:1",
																"nodeType": "YulBlock",
																"src": "3452:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3454:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3454:77:1"
																			},
																			"nativeSrc": "3454:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3454:79:1"
																		},
																		"nativeSrc": "3454:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3454:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3427:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3427:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3436:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3436:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3423:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:1"
																		},
																		"nativeSrc": "3423:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3423:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3448:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3448:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3419:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3419:3:1"
																},
																"nativeSrc": "3419:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3419:32:1"
															},
															"nativeSrc": "3416:119:1",
															"nodeType": "YulIf",
															"src": "3416:119:1"
														},
														{
															"nativeSrc": "3545:306:1",
															"nodeType": "YulBlock",
															"src": "3545:306:1",
															"statements": [
																{
																	"nativeSrc": "3560:38:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3560:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3584:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3584:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3595:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3595:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3580:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3580:3:1"
																				},
																				"nativeSrc": "3580:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3580:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3574:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3574:5:1"
																		},
																		"nativeSrc": "3574:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3574:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3564:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3564:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3645:83:1",
																		"nodeType": "YulBlock",
																		"src": "3645:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3647:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "3647:77:1"
																					},
																					"nativeSrc": "3647:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3647:79:1"
																				},
																				"nativeSrc": "3647:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3647:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3617:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3617:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3625:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3614:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3614:2:1"
																		},
																		"nativeSrc": "3614:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:30:1"
																	},
																	"nativeSrc": "3611:117:1",
																	"nodeType": "YulIf",
																	"src": "3611:117:1"
																},
																{
																	"nativeSrc": "3742:99:1",
																	"nodeType": "YulAssignment",
																	"src": "3742:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3813:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3813:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3824:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3824:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3809:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3809:3:1"
																				},
																				"nativeSrc": "3809:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3809:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3833:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3833:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3752:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "3752:56:1"
																		},
																		"nativeSrc": "3752:89:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3742:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3742:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3861:129:1",
															"nodeType": "YulBlock",
															"src": "3861:129:1",
															"statements": [
																{
																	"nativeSrc": "3876:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3876:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3890:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3890:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3880:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3880:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3906:74:1",
																	"nodeType": "YulAssignment",
																	"src": "3906:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3952:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3952:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3963:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3948:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3948:3:1"
																				},
																				"nativeSrc": "3948:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3916:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "3916:31:1"
																		},
																		"nativeSrc": "3916:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3916:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3906:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3906:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory",
												"nativeSrc": "3287:710:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3368:9:1",
														"nodeType": "YulTypedName",
														"src": "3368:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3379:7:1",
														"nodeType": "YulTypedName",
														"src": "3379:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3391:6:1",
														"nodeType": "YulTypedName",
														"src": "3391:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3399:6:1",
														"nodeType": "YulTypedName",
														"src": "3399:6:1",
														"type": ""
													}
												],
												"src": "3287:710:1"
											},
											{
												"body": {
													"nativeSrc": "4062:40:1",
													"nodeType": "YulBlock",
													"src": "4062:40:1",
													"statements": [
														{
															"nativeSrc": "4073:22:1",
															"nodeType": "YulAssignment",
															"src": "4073:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4089:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4089:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4083:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4083:5:1"
																},
																"nativeSrc": "4083:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4083:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4073:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4003:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4045:5:1",
														"nodeType": "YulTypedName",
														"src": "4045:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4055:6:1",
														"nodeType": "YulTypedName",
														"src": "4055:6:1",
														"type": ""
													}
												],
												"src": "4003:99:1"
											},
											{
												"body": {
													"nativeSrc": "4136:152:1",
													"nodeType": "YulBlock",
													"src": "4136:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4153:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4153:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4156:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4156:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4146:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4146:6:1"
																},
																"nativeSrc": "4146:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4146:88:1"
															},
															"nativeSrc": "4146:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4146:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4250:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4250:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4253:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4253:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4243:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:1"
																},
																"nativeSrc": "4243:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4243:15:1"
															},
															"nativeSrc": "4243:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4243:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4274:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4274:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4277:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:1"
																},
																"nativeSrc": "4267:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4267:15:1"
															},
															"nativeSrc": "4267:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4267:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4108:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4108:180:1"
											},
											{
												"body": {
													"nativeSrc": "4345:269:1",
													"nodeType": "YulBlock",
													"src": "4345:269:1",
													"statements": [
														{
															"nativeSrc": "4355:22:1",
															"nodeType": "YulAssignment",
															"src": "4355:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4369:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4369:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4375:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4375:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4365:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4365:3:1"
																},
																"nativeSrc": "4365:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4365:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4355:6:1"
																}
															]
														},
														{
															"nativeSrc": "4386:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4386:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4416:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4416:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4422:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:1"
																},
																"nativeSrc": "4412:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4412:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4390:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4390:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4463:51:1",
																"nodeType": "YulBlock",
																"src": "4463:51:1",
																"statements": [
																	{
																		"nativeSrc": "4477:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4477:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4491:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4491:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4499:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4499:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4487:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4487:3:1"
																			},
																			"nativeSrc": "4487:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4487:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4477:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4477:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4443:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4443:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4436:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:1"
																},
																"nativeSrc": "4436:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4436:26:1"
															},
															"nativeSrc": "4433:81:1",
															"nodeType": "YulIf",
															"src": "4433:81:1"
														},
														{
															"body": {
																"nativeSrc": "4566:42:1",
																"nodeType": "YulBlock",
																"src": "4566:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4580:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4580:16:1"
																			},
																			"nativeSrc": "4580:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:18:1"
																		},
																		"nativeSrc": "4580:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4530:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4530:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4553:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4553:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4550:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4550:2:1"
																		},
																		"nativeSrc": "4550:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4550:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4527:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4527:2:1"
																},
																"nativeSrc": "4527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4527:38:1"
															},
															"nativeSrc": "4524:84:1",
															"nodeType": "YulIf",
															"src": "4524:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4294:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4329:4:1",
														"nodeType": "YulTypedName",
														"src": "4329:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4338:6:1",
														"nodeType": "YulTypedName",
														"src": "4338:6:1",
														"type": ""
													}
												],
												"src": "4294:320:1"
											},
											{
												"body": {
													"nativeSrc": "4674:87:1",
													"nodeType": "YulBlock",
													"src": "4674:87:1",
													"statements": [
														{
															"nativeSrc": "4684:11:1",
															"nodeType": "YulAssignment",
															"src": "4684:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "4692:3:1",
																"nodeType": "YulIdentifier",
																"src": "4692:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4684:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4684:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4712:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4712:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4715:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4715:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4705:6:1"
																},
																"nativeSrc": "4705:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4705:14:1"
															},
															"nativeSrc": "4705:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "4705:14:1"
														},
														{
															"nativeSrc": "4728:26:1",
															"nodeType": "YulAssignment",
															"src": "4728:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4746:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4746:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4749:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4749:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4736:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4736:9:1"
																},
																"nativeSrc": "4736:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4736:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4728:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4728:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4620:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4661:3:1",
														"nodeType": "YulTypedName",
														"src": "4661:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4669:4:1",
														"nodeType": "YulTypedName",
														"src": "4669:4:1",
														"type": ""
													}
												],
												"src": "4620:141:1"
											},
											{
												"body": {
													"nativeSrc": "4811:49:1",
													"nodeType": "YulBlock",
													"src": "4811:49:1",
													"statements": [
														{
															"nativeSrc": "4821:33:1",
															"nodeType": "YulAssignment",
															"src": "4821:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4839:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4839:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4846:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4846:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4835:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4835:3:1"
																		},
																		"nativeSrc": "4835:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4851:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4851:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4831:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:1"
																},
																"nativeSrc": "4831:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4831:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4767:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4794:5:1",
														"nodeType": "YulTypedName",
														"src": "4794:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4804:6:1",
														"nodeType": "YulTypedName",
														"src": "4804:6:1",
														"type": ""
													}
												],
												"src": "4767:93:1"
											},
											{
												"body": {
													"nativeSrc": "4919:54:1",
													"nodeType": "YulBlock",
													"src": "4919:54:1",
													"statements": [
														{
															"nativeSrc": "4929:37:1",
															"nodeType": "YulAssignment",
															"src": "4929:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4954:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4954:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4960:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4960:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4950:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:1"
																},
																"nativeSrc": "4950:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4929:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4929:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4866:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4894:4:1",
														"nodeType": "YulTypedName",
														"src": "4894:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4900:5:1",
														"nodeType": "YulTypedName",
														"src": "4900:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4910:8:1",
														"nodeType": "YulTypedName",
														"src": "4910:8:1",
														"type": ""
													}
												],
												"src": "4866:107:1"
											},
											{
												"body": {
													"nativeSrc": "5055:317:1",
													"nodeType": "YulBlock",
													"src": "5055:317:1",
													"statements": [
														{
															"nativeSrc": "5065:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5086:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "5086:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5098:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5098:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5082:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5082:3:1"
																},
																"nativeSrc": "5082:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5082:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5069:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5069:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5109:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5109:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5140:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5140:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5151:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5151:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5121:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5121:18:1"
																},
																"nativeSrc": "5121:97:1",
																"nodeType": "YulFunctionCall",
																"src": "5121:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5113:4:1",
																	"nodeType": "YulTypedName",
																	"src": "5113:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5227:51:1",
															"nodeType": "YulAssignment",
															"src": "5227:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5258:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5258:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5269:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5269:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5239:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5239:18:1"
																},
																"nativeSrc": "5239:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5239:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5227:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "5227:8:1"
																}
															]
														},
														{
															"nativeSrc": "5287:30:1",
															"nodeType": "YulAssignment",
															"src": "5287:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5300:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5300:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5311:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5311:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5307:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:1"
																		},
																		"nativeSrc": "5307:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5296:3:1"
																},
																"nativeSrc": "5296:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5296:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5287:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5287:5:1"
																}
															]
														},
														{
															"nativeSrc": "5326:40:1",
															"nodeType": "YulAssignment",
															"src": "5326:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5339:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5339:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5350:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5350:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5360:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:1"
																		},
																		"nativeSrc": "5346:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5346:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5336:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5336:2:1"
																},
																"nativeSrc": "5336:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5336:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4979:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5016:5:1",
														"nodeType": "YulTypedName",
														"src": "5016:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5023:10:1",
														"nodeType": "YulTypedName",
														"src": "5023:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5035:8:1",
														"nodeType": "YulTypedName",
														"src": "5035:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5048:6:1",
														"nodeType": "YulTypedName",
														"src": "5048:6:1",
														"type": ""
													}
												],
												"src": "4979:393:1"
											},
											{
												"body": {
													"nativeSrc": "5423:32:1",
													"nodeType": "YulBlock",
													"src": "5423:32:1",
													"statements": [
														{
															"nativeSrc": "5433:16:1",
															"nodeType": "YulAssignment",
															"src": "5433:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5444:5:1",
																"nodeType": "YulIdentifier",
																"src": "5444:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5433:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5433:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5378:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5405:5:1",
														"nodeType": "YulTypedName",
														"src": "5405:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5415:7:1",
														"nodeType": "YulTypedName",
														"src": "5415:7:1",
														"type": ""
													}
												],
												"src": "5378:77:1"
											},
											{
												"body": {
													"nativeSrc": "5493:28:1",
													"nodeType": "YulBlock",
													"src": "5493:28:1",
													"statements": [
														{
															"nativeSrc": "5503:12:1",
															"nodeType": "YulAssignment",
															"src": "5503:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5510:5:1",
																"nodeType": "YulIdentifier",
																"src": "5510:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5503:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5461:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5479:5:1",
														"nodeType": "YulTypedName",
														"src": "5479:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5489:3:1",
														"nodeType": "YulTypedName",
														"src": "5489:3:1",
														"type": ""
													}
												],
												"src": "5461:60:1"
											},
											{
												"body": {
													"nativeSrc": "5587:82:1",
													"nodeType": "YulBlock",
													"src": "5587:82:1",
													"statements": [
														{
															"nativeSrc": "5597:66:1",
															"nodeType": "YulAssignment",
															"src": "5597:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5655:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5655:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5637:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5637:17:1"
																				},
																				"nativeSrc": "5637:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5637:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5628:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5628:8:1"
																		},
																		"nativeSrc": "5628:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5628:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5610:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5610:17:1"
																},
																"nativeSrc": "5610:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5610:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5597:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5597:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5527:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:1",
														"nodeType": "YulTypedName",
														"src": "5567:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5577:9:1",
														"nodeType": "YulTypedName",
														"src": "5577:9:1",
														"type": ""
													}
												],
												"src": "5527:142:1"
											},
											{
												"body": {
													"nativeSrc": "5722:28:1",
													"nodeType": "YulBlock",
													"src": "5722:28:1",
													"statements": [
														{
															"nativeSrc": "5732:12:1",
															"nodeType": "YulAssignment",
															"src": "5732:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5739:5:1",
																"nodeType": "YulIdentifier",
																"src": "5739:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5732:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5732:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5675:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5708:5:1",
														"nodeType": "YulTypedName",
														"src": "5708:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5718:3:1",
														"nodeType": "YulTypedName",
														"src": "5718:3:1",
														"type": ""
													}
												],
												"src": "5675:75:1"
											},
											{
												"body": {
													"nativeSrc": "5832:193:1",
													"nodeType": "YulBlock",
													"src": "5832:193:1",
													"statements": [
														{
															"nativeSrc": "5842:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5842:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5897:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5897:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5866:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5866:30:1"
																},
																"nativeSrc": "5866:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5866:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5846:16:1",
																	"nodeType": "YulTypedName",
																	"src": "5846:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5921:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5921:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5961:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5961:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5955:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5955:5:1"
																				},
																				"nativeSrc": "5955:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5955:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5968:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5968:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6000:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "6000:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5976:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "5976:23:1"
																				},
																				"nativeSrc": "5976:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5976:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5927:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "5927:27:1"
																		},
																		"nativeSrc": "5927:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5927:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5914:6:1"
																},
																"nativeSrc": "5914:105:1",
																"nodeType": "YulFunctionCall",
																"src": "5914:105:1"
															},
															"nativeSrc": "5914:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "5914:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5756:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5809:4:1",
														"nodeType": "YulTypedName",
														"src": "5809:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5815:6:1",
														"nodeType": "YulTypedName",
														"src": "5815:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5823:7:1",
														"nodeType": "YulTypedName",
														"src": "5823:7:1",
														"type": ""
													}
												],
												"src": "5756:269:1"
											},
											{
												"body": {
													"nativeSrc": "6080:24:1",
													"nodeType": "YulBlock",
													"src": "6080:24:1",
													"statements": [
														{
															"nativeSrc": "6090:8:1",
															"nodeType": "YulAssignment",
															"src": "6090:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6097:1:1",
																"nodeType": "YulLiteral",
																"src": "6097:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6090:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6031:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6076:3:1",
														"nodeType": "YulTypedName",
														"src": "6076:3:1",
														"type": ""
													}
												],
												"src": "6031:73:1"
											},
											{
												"body": {
													"nativeSrc": "6163:136:1",
													"nodeType": "YulBlock",
													"src": "6163:136:1",
													"statements": [
														{
															"nativeSrc": "6173:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6173:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6187:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6187:30:1"
																},
																"nativeSrc": "6187:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6187:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6177:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6177:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6272:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6278:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6286:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6228:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6228:43:1"
																},
																"nativeSrc": "6228:65:1",
																"nodeType": "YulFunctionCall",
																"src": "6228:65:1"
															},
															"nativeSrc": "6228:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "6228:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6110:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6149:4:1",
														"nodeType": "YulTypedName",
														"src": "6149:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6155:6:1",
														"nodeType": "YulTypedName",
														"src": "6155:6:1",
														"type": ""
													}
												],
												"src": "6110:189:1"
											},
											{
												"body": {
													"nativeSrc": "6355:136:1",
													"nodeType": "YulBlock",
													"src": "6355:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6422:63:1",
																"nodeType": "YulBlock",
																"src": "6422:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6466:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6466:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6473:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6473:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6436:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "6436:29:1"
																			},
																			"nativeSrc": "6436:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:39:1"
																		},
																		"nativeSrc": "6436:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6375:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6375:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6382:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6382:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6372:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6372:2:1"
																},
																"nativeSrc": "6372:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6372:14:1"
															},
															"nativeSrc": "6365:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6387:26:1",
																"nodeType": "YulBlock",
																"src": "6387:26:1",
																"statements": [
																	{
																		"nativeSrc": "6389:22:1",
																		"nodeType": "YulAssignment",
																		"src": "6389:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6402:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6402:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6409:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6409:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6398:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6398:3:1"
																			},
																			"nativeSrc": "6398:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6398:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6389:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6389:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6369:2:1",
																"nodeType": "YulBlock",
																"src": "6369:2:1",
																"statements": []
															},
															"src": "6365:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6305:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6343:5:1",
														"nodeType": "YulTypedName",
														"src": "6343:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6350:3:1",
														"nodeType": "YulTypedName",
														"src": "6350:3:1",
														"type": ""
													}
												],
												"src": "6305:186:1"
											},
											{
												"body": {
													"nativeSrc": "6576:464:1",
													"nodeType": "YulBlock",
													"src": "6576:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6602:431:1",
																"nodeType": "YulBlock",
																"src": "6602:431:1",
																"statements": [
																	{
																		"nativeSrc": "6616:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6664:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6664:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6632:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "6632:31:1"
																			},
																			"nativeSrc": "6632:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6632:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6620:8:1",
																				"nodeType": "YulTypedName",
																				"src": "6620:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6683:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6683:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6706:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6706:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6734:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6734:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6716:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "6716:17:1"
																					},
																					"nativeSrc": "6716:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6716:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6702:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6702:3:1"
																			},
																			"nativeSrc": "6702:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6702:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6687:11:1",
																				"nodeType": "YulTypedName",
																				"src": "6687:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6903:27:1",
																			"nodeType": "YulBlock",
																			"src": "6903:27:1",
																			"statements": [
																				{
																					"nativeSrc": "6905:23:1",
																					"nodeType": "YulAssignment",
																					"src": "6905:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6920:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6920:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6905:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "6905:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6887:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "6887:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6899:2:1",
																					"nodeType": "YulLiteral",
																					"src": "6899:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6884:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6884:2:1"
																			},
																			"nativeSrc": "6884:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6884:18:1"
																		},
																		"nativeSrc": "6881:49:1",
																		"nodeType": "YulIf",
																		"src": "6881:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6972:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "6972:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6989:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6989:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7017:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "7017:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6999:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "6999:17:1"
																							},
																							"nativeSrc": "6999:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6999:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6985:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6985:3:1"
																					},
																					"nativeSrc": "6985:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6985:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6943:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "6943:28:1"
																			},
																			"nativeSrc": "6943:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6943:80:1"
																		},
																		"nativeSrc": "6943:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6943:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6593:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6598:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6590:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6590:2:1"
																},
																"nativeSrc": "6590:11:1",
																"nodeType": "YulFunctionCall",
																"src": "6590:11:1"
															},
															"nativeSrc": "6587:446:1",
															"nodeType": "YulIf",
															"src": "6587:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6497:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6552:5:1",
														"nodeType": "YulTypedName",
														"src": "6552:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6559:3:1",
														"nodeType": "YulTypedName",
														"src": "6559:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6564:10:1",
														"nodeType": "YulTypedName",
														"src": "6564:10:1",
														"type": ""
													}
												],
												"src": "6497:543:1"
											},
											{
												"body": {
													"nativeSrc": "7109:54:1",
													"nodeType": "YulBlock",
													"src": "7109:54:1",
													"statements": [
														{
															"nativeSrc": "7119:37:1",
															"nodeType": "YulAssignment",
															"src": "7119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7150:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:1"
																},
																"nativeSrc": "7140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7046:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7084:4:1",
														"nodeType": "YulTypedName",
														"src": "7084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7090:5:1",
														"nodeType": "YulTypedName",
														"src": "7090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7100:8:1",
														"nodeType": "YulTypedName",
														"src": "7100:8:1",
														"type": ""
													}
												],
												"src": "7046:117:1"
											},
											{
												"body": {
													"nativeSrc": "7220:118:1",
													"nodeType": "YulBlock",
													"src": "7220:118:1",
													"statements": [
														{
															"nativeSrc": "7230:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7230:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7279:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7279:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7282:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7282:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7275:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7275:3:1"
																				},
																				"nativeSrc": "7275:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7275:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7294:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7294:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7290:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7290:3:1"
																				},
																				"nativeSrc": "7290:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7290:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7246:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "7246:28:1"
																		},
																		"nativeSrc": "7246:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7246:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7242:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7242:3:1"
																},
																"nativeSrc": "7242:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7242:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7234:4:1",
																	"nodeType": "YulTypedName",
																	"src": "7234:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7307:25:1",
															"nodeType": "YulAssignment",
															"src": "7307:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7321:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7321:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7327:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7327:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7317:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7317:3:1"
																},
																"nativeSrc": "7317:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7317:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7307:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7169:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7197:4:1",
														"nodeType": "YulTypedName",
														"src": "7197:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7203:5:1",
														"nodeType": "YulTypedName",
														"src": "7203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7213:6:1",
														"nodeType": "YulTypedName",
														"src": "7213:6:1",
														"type": ""
													}
												],
												"src": "7169:169:1"
											},
											{
												"body": {
													"nativeSrc": "7424:214:1",
													"nodeType": "YulBlock",
													"src": "7424:214:1",
													"statements": [
														{
															"nativeSrc": "7557:37:1",
															"nodeType": "YulAssignment",
															"src": "7557:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7584:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7584:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7590:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7565:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7565:18:1"
																},
																"nativeSrc": "7565:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7565:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7557:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7557:4:1"
																}
															]
														},
														{
															"nativeSrc": "7603:29:1",
															"nodeType": "YulAssignment",
															"src": "7603:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7614:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7624:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7624:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7627:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7627:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7620:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:1"
																		},
																		"nativeSrc": "7620:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7611:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7611:2:1"
																},
																"nativeSrc": "7611:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7611:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7603:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7603:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7343:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7405:4:1",
														"nodeType": "YulTypedName",
														"src": "7405:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7411:3:1",
														"nodeType": "YulTypedName",
														"src": "7411:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7419:4:1",
														"nodeType": "YulTypedName",
														"src": "7419:4:1",
														"type": ""
													}
												],
												"src": "7343:295:1"
											},
											{
												"body": {
													"nativeSrc": "7735:1303:1",
													"nodeType": "YulBlock",
													"src": "7735:1303:1",
													"statements": [
														{
															"nativeSrc": "7746:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7746:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7793:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7793:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7760:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "7760:32:1"
																},
																"nativeSrc": "7760:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7760:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7750:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7750:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7882:22:1",
																"nodeType": "YulBlock",
																"src": "7882:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7884:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7884:16:1"
																			},
																			"nativeSrc": "7884:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7884:18:1"
																		},
																		"nativeSrc": "7884:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7884:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7854:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7854:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7862:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7862:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7851:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7851:2:1"
																},
																"nativeSrc": "7851:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7851:30:1"
															},
															"nativeSrc": "7848:56:1",
															"nodeType": "YulIf",
															"src": "7848:56:1"
														},
														{
															"nativeSrc": "7914:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7960:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7960:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7954:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "7954:5:1"
																		},
																		"nativeSrc": "7954:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7954:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7928:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7928:25:1"
																},
																"nativeSrc": "7928:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7928:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7918:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7918:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8059:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8059:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8065:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8065:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8073:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8073:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8013:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "8013:45:1"
																},
																"nativeSrc": "8013:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8013:67:1"
															},
															"nativeSrc": "8013:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "8013:67:1"
														},
														{
															"nativeSrc": "8090:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8090:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8107:1:1",
																"nodeType": "YulLiteral",
																"src": "8107:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8094:9:1",
																	"nodeType": "YulTypedName",
																	"src": "8094:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8118:17:1",
															"nodeType": "YulAssignment",
															"src": "8118:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8131:4:1",
																"nodeType": "YulLiteral",
																"src": "8131:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8118:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "8118:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8182:611:1",
																		"nodeType": "YulBlock",
																		"src": "8182:611:1",
																		"statements": [
																			{
																				"nativeSrc": "8196:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8196:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8215:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8215:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8227:4:1",
																									"nodeType": "YulLiteral",
																									"src": "8227:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8223:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8223:3:1"
																							},
																							"nativeSrc": "8223:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8223:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8211:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8211:3:1"
																					},
																					"nativeSrc": "8211:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8211:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8200:7:1",
																						"nodeType": "YulTypedName",
																						"src": "8200:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8247:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8247:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8293:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8293:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8261:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "8261:31:1"
																					},
																					"nativeSrc": "8261:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8261:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8251:6:1",
																						"nodeType": "YulTypedName",
																						"src": "8251:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8311:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8311:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8320:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8320:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8315:1:1",
																						"nodeType": "YulTypedName",
																						"src": "8315:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8379:163:1",
																					"nodeType": "YulBlock",
																					"src": "8379:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8404:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8404:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8422:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "8422:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8427:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "8427:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8418:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8418:3:1"
																												},
																												"nativeSrc": "8418:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8418:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8412:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "8412:5:1"
																										},
																										"nativeSrc": "8412:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8412:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8397:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8397:6:1"
																								},
																								"nativeSrc": "8397:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8397:42:1"
																							},
																							"nativeSrc": "8397:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8397:42:1"
																						},
																						{
																							"nativeSrc": "8456:24:1",
																							"nodeType": "YulAssignment",
																							"src": "8456:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8470:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8470:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8478:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8478:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8466:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8466:3:1"
																								},
																								"nativeSrc": "8466:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8466:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8456:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8456:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8497:31:1",
																							"nodeType": "YulAssignment",
																							"src": "8497:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8514:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "8514:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8525:2:1",
																										"nodeType": "YulLiteral",
																										"src": "8525:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8510:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8510:3:1"
																								},
																								"nativeSrc": "8510:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8510:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8497:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "8497:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8345:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "8345:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8348:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8348:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8342:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8342:2:1"
																					},
																					"nativeSrc": "8342:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8342:14:1"
																				},
																				"nativeSrc": "8334:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8357:21:1",
																					"nodeType": "YulBlock",
																					"src": "8357:21:1",
																					"statements": [
																						{
																							"nativeSrc": "8359:17:1",
																							"nodeType": "YulAssignment",
																							"src": "8359:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8368:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "8368:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8371:4:1",
																										"nodeType": "YulLiteral",
																										"src": "8371:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8364:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8364:3:1"
																								},
																								"nativeSrc": "8364:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8364:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8359:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "8359:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8338:3:1",
																					"nodeType": "YulBlock",
																					"src": "8338:3:1",
																					"statements": []
																				},
																				"src": "8334:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "8578:156:1",
																					"nodeType": "YulBlock",
																					"src": "8578:156:1",
																					"statements": [
																						{
																							"nativeSrc": "8596:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8596:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8623:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8623:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8628:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8628:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8619:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8619:3:1"
																										},
																										"nativeSrc": "8619:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8619:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8613:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8613:5:1"
																								},
																								"nativeSrc": "8613:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8613:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8600:9:1",
																									"nodeType": "YulTypedName",
																									"src": "8600:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8663:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8663:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8690:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8690:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8705:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "8705:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8713:4:1",
																														"nodeType": "YulLiteral",
																														"src": "8713:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8701:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8701:3:1"
																												},
																												"nativeSrc": "8701:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8701:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8671:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "8671:18:1"
																										},
																										"nativeSrc": "8671:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8671:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8656:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8656:6:1"
																								},
																								"nativeSrc": "8656:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8656:64:1"
																							},
																							"nativeSrc": "8656:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8656:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8561:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8561:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8570:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8570:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8558:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8558:2:1"
																					},
																					"nativeSrc": "8558:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8558:19:1"
																				},
																				"nativeSrc": "8555:179:1",
																				"nodeType": "YulIf",
																				"src": "8555:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8754:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8754:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8768:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "8768:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8776:1:1",
																											"nodeType": "YulLiteral",
																											"src": "8776:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8764:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "8764:3:1"
																									},
																									"nativeSrc": "8764:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "8764:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8780:1:1",
																									"nodeType": "YulLiteral",
																									"src": "8780:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8760:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8760:3:1"
																							},
																							"nativeSrc": "8760:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8760:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8747:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8747:6:1"
																					},
																					"nativeSrc": "8747:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8747:36:1"
																				},
																				"nativeSrc": "8747:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8747:36:1"
																			}
																		]
																	},
																	"nativeSrc": "8175:618:1",
																	"nodeType": "YulCase",
																	"src": "8175:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8180:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8180:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8810:222:1",
																		"nodeType": "YulBlock",
																		"src": "8810:222:1",
																		"statements": [
																			{
																				"nativeSrc": "8824:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8824:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8837:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8837:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8828:5:1",
																						"nodeType": "YulTypedName",
																						"src": "8828:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8861:67:1",
																					"nodeType": "YulBlock",
																					"src": "8861:67:1",
																					"statements": [
																						{
																							"nativeSrc": "8879:35:1",
																							"nodeType": "YulAssignment",
																							"src": "8879:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8898:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8898:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8903:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8903:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8894:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8894:3:1"
																										},
																										"nativeSrc": "8894:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8894:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8888:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8888:5:1"
																								},
																								"nativeSrc": "8888:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8888:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8879:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8879:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8854:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8854:6:1"
																				},
																				"nativeSrc": "8851:77:1",
																				"nodeType": "YulIf",
																				"src": "8851:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8948:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8948:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9007:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "9007:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9014:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "9014:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8954:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "8954:52:1"
																							},
																							"nativeSrc": "8954:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8954:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8941:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8941:6:1"
																					},
																					"nativeSrc": "8941:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8941:81:1"
																				},
																				"nativeSrc": "8941:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8941:81:1"
																			}
																		]
																	},
																	"nativeSrc": "8802:230:1",
																	"nodeType": "YulCase",
																	"src": "8802:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8155:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8155:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8152:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8152:2:1"
																},
																"nativeSrc": "8152:14:1",
																"nodeType": "YulFunctionCall",
																"src": "8152:14:1"
															},
															"nativeSrc": "8145:887:1",
															"nodeType": "YulSwitch",
															"src": "8145:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7643:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7724:4:1",
														"nodeType": "YulTypedName",
														"src": "7724:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7730:3:1",
														"nodeType": "YulTypedName",
														"src": "7730:3:1",
														"type": ""
													}
												],
												"src": "7643:1395:1"
											},
											{
												"body": {
													"nativeSrc": "9109:53:1",
													"nodeType": "YulBlock",
													"src": "9109:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9126:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9126:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9149:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9149:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9131:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9131:17:1"
																		},
																		"nativeSrc": "9131:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9131:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9119:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:1"
																},
																"nativeSrc": "9119:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9119:37:1"
															},
															"nativeSrc": "9119:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9119:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9044:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9097:5:1",
														"nodeType": "YulTypedName",
														"src": "9097:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9104:3:1",
														"nodeType": "YulTypedName",
														"src": "9104:3:1",
														"type": ""
													}
												],
												"src": "9044:118:1"
											},
											{
												"body": {
													"nativeSrc": "9266:124:1",
													"nodeType": "YulBlock",
													"src": "9266:124:1",
													"statements": [
														{
															"nativeSrc": "9276:26:1",
															"nodeType": "YulAssignment",
															"src": "9276:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9288:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9288:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9299:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9284:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:1"
																},
																"nativeSrc": "9284:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9284:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9276:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9276:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9356:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9356:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9369:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9369:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9380:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9380:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9365:3:1"
																		},
																		"nativeSrc": "9365:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9365:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9312:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9312:43:1"
																},
																"nativeSrc": "9312:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9312:71:1"
															},
															"nativeSrc": "9312:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9312:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9168:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9238:9:1",
														"nodeType": "YulTypedName",
														"src": "9238:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9250:6:1",
														"nodeType": "YulTypedName",
														"src": "9250:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9261:4:1",
														"nodeType": "YulTypedName",
														"src": "9261:4:1",
														"type": ""
													}
												],
												"src": "9168:222:1"
											},
											{
												"body": {
													"nativeSrc": "9492:73:1",
													"nodeType": "YulBlock",
													"src": "9492:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9509:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9509:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9514:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9514:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:1"
																},
																"nativeSrc": "9502:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9502:19:1"
															},
															"nativeSrc": "9502:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "9502:19:1"
														},
														{
															"nativeSrc": "9530:29:1",
															"nodeType": "YulAssignment",
															"src": "9530:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9549:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9549:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9554:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9554:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9545:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:1"
																},
																"nativeSrc": "9545:14:1",
																"nodeType": "YulFunctionCall",
																"src": "9545:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9530:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "9530:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9396:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9464:3:1",
														"nodeType": "YulTypedName",
														"src": "9464:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9469:6:1",
														"nodeType": "YulTypedName",
														"src": "9469:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9480:11:1",
														"nodeType": "YulTypedName",
														"src": "9480:11:1",
														"type": ""
													}
												],
												"src": "9396:169:1"
											},
											{
												"body": {
													"nativeSrc": "9677:122:1",
													"nodeType": "YulBlock",
													"src": "9677:122:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9699:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9699:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9707:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9707:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9695:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:1"
																		},
																		"nativeSrc": "9695:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9695:14:1"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9711:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9711:34:1",
																		"type": "",
																		"value": "At least one whitelisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9688:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:1"
																},
																"nativeSrc": "9688:58:1",
																"nodeType": "YulFunctionCall",
																"src": "9688:58:1"
															},
															"nativeSrc": "9688:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "9688:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9767:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9767:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9775:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9763:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:1"
																		},
																		"nativeSrc": "9763:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9763:15:1"
																	},
																	{
																		"hexValue": "207265717569726564",
																		"kind": "string",
																		"nativeSrc": "9780:11:1",
																		"nodeType": "YulLiteral",
																		"src": "9780:11:1",
																		"type": "",
																		"value": " required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9756:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:1"
																},
																"nativeSrc": "9756:36:1",
																"nodeType": "YulFunctionCall",
																"src": "9756:36:1"
															},
															"nativeSrc": "9756:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "9756:36:1"
														}
													]
												},
												"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
												"nativeSrc": "9571:228:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9669:6:1",
														"nodeType": "YulTypedName",
														"src": "9669:6:1",
														"type": ""
													}
												],
												"src": "9571:228:1"
											},
											{
												"body": {
													"nativeSrc": "9951:220:1",
													"nodeType": "YulBlock",
													"src": "9951:220:1",
													"statements": [
														{
															"nativeSrc": "9961:74:1",
															"nodeType": "YulAssignment",
															"src": "9961:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10027:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10027:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10032:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9968:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9968:58:1"
																},
																"nativeSrc": "9968:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9968:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9961:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10133:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10133:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																	"nativeSrc": "10044:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10044:88:1"
																},
																"nativeSrc": "10044:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10044:93:1"
															},
															"nativeSrc": "10044:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10044:93:1"
														},
														{
															"nativeSrc": "10146:19:1",
															"nodeType": "YulAssignment",
															"src": "10146:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10157:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10157:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10162:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10153:3:1"
																},
																"nativeSrc": "10153:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10153:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10146:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9805:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9939:3:1",
														"nodeType": "YulTypedName",
														"src": "9939:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9947:3:1",
														"nodeType": "YulTypedName",
														"src": "9947:3:1",
														"type": ""
													}
												],
												"src": "9805:366:1"
											},
											{
												"body": {
													"nativeSrc": "10348:248:1",
													"nodeType": "YulBlock",
													"src": "10348:248:1",
													"statements": [
														{
															"nativeSrc": "10358:26:1",
															"nodeType": "YulAssignment",
															"src": "10358:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10370:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10370:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10381:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10366:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:1"
																},
																"nativeSrc": "10366:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10366:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10358:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10358:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10405:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10416:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10416:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10401:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:1"
																		},
																		"nativeSrc": "10401:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10401:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10424:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10424:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10430:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:1"
																		},
																		"nativeSrc": "10420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10420:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10394:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:1"
																},
																"nativeSrc": "10394:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10394:47:1"
															},
															"nativeSrc": "10394:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10394:47:1"
														},
														{
															"nativeSrc": "10450:139:1",
															"nodeType": "YulAssignment",
															"src": "10450:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10584:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10584:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10458:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10458:124:1"
																},
																"nativeSrc": "10458:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10458:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10450:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10450:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10177:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10328:9:1",
														"nodeType": "YulTypedName",
														"src": "10328:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10343:4:1",
														"nodeType": "YulTypedName",
														"src": "10343:4:1",
														"type": ""
													}
												],
												"src": "10177:419:1"
											},
											{
												"body": {
													"nativeSrc": "10630:152:1",
													"nodeType": "YulBlock",
													"src": "10630:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10647:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10647:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10650:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10650:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10640:6:1"
																},
																"nativeSrc": "10640:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10640:88:1"
															},
															"nativeSrc": "10640:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10640:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10744:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10744:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10747:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10747:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10737:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:1"
																},
																"nativeSrc": "10737:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10737:15:1"
															},
															"nativeSrc": "10737:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10737:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10768:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10768:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10771:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10761:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:1"
																},
																"nativeSrc": "10761:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10761:15:1"
															},
															"nativeSrc": "10761:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10761:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10602:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10602:180:1"
											},
											{
												"body": {
													"nativeSrc": "10816:152:1",
													"nodeType": "YulBlock",
													"src": "10816:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10833:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10833:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10836:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10836:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10826:6:1"
																},
																"nativeSrc": "10826:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10826:88:1"
															},
															"nativeSrc": "10826:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10826:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10930:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10930:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10933:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10933:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10923:6:1"
																},
																"nativeSrc": "10923:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10923:15:1"
															},
															"nativeSrc": "10923:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10923:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10954:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10954:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10957:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10957:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10947:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10947:6:1"
																},
																"nativeSrc": "10947:15:1",
																"nodeType": "YulFunctionCall",
																"src": "10947:15:1"
															},
															"nativeSrc": "10947:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "10947:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10788:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10788:180:1"
											},
											{
												"body": {
													"nativeSrc": "11018:147:1",
													"nodeType": "YulBlock",
													"src": "11018:147:1",
													"statements": [
														{
															"nativeSrc": "11028:25:1",
															"nodeType": "YulAssignment",
															"src": "11028:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11051:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11051:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11033:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11033:17:1"
																},
																"nativeSrc": "11033:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11033:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11028:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11028:1:1"
																}
															]
														},
														{
															"nativeSrc": "11062:25:1",
															"nodeType": "YulAssignment",
															"src": "11062:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11085:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11085:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11067:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11067:17:1"
																},
																"nativeSrc": "11067:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11067:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11062:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11062:1:1"
																}
															]
														},
														{
															"nativeSrc": "11096:16:1",
															"nodeType": "YulAssignment",
															"src": "11096:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11107:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11110:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11110:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11103:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:1"
																},
																"nativeSrc": "11103:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11103:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11096:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11096:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11136:22:1",
																"nodeType": "YulBlock",
																"src": "11136:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11138:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11138:16:1"
																			},
																			"nativeSrc": "11138:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11138:18:1"
																		},
																		"nativeSrc": "11138:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11138:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11128:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11128:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11131:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11131:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11125:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11125:2:1"
																},
																"nativeSrc": "11125:10:1",
																"nodeType": "YulFunctionCall",
																"src": "11125:10:1"
															},
															"nativeSrc": "11122:36:1",
															"nodeType": "YulIf",
															"src": "11122:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10974:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11005:1:1",
														"nodeType": "YulTypedName",
														"src": "11005:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11008:1:1",
														"nodeType": "YulTypedName",
														"src": "11008:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11014:3:1",
														"nodeType": "YulTypedName",
														"src": "11014:3:1",
														"type": ""
													}
												],
												"src": "10974:191:1"
											},
											{
												"body": {
													"nativeSrc": "11236:53:1",
													"nodeType": "YulBlock",
													"src": "11236:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11253:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11276:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11276:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11258:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "11258:17:1"
																		},
																		"nativeSrc": "11258:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11258:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:1"
																},
																"nativeSrc": "11246:37:1",
																"nodeType": "YulFunctionCall",
																"src": "11246:37:1"
															},
															"nativeSrc": "11246:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "11246:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11171:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11224:5:1",
														"nodeType": "YulTypedName",
														"src": "11224:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11231:3:1",
														"nodeType": "YulTypedName",
														"src": "11231:3:1",
														"type": ""
													}
												],
												"src": "11171:118:1"
											},
											{
												"body": {
													"nativeSrc": "11449:288:1",
													"nodeType": "YulBlock",
													"src": "11449:288:1",
													"statements": [
														{
															"nativeSrc": "11459:26:1",
															"nodeType": "YulAssignment",
															"src": "11459:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11471:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11471:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11482:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11482:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:1"
																},
																"nativeSrc": "11467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11467:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11459:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11459:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11539:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11539:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11552:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11552:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11563:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11563:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11548:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11548:3:1"
																		},
																		"nativeSrc": "11548:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11548:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11495:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11495:43:1"
																},
																"nativeSrc": "11495:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11495:71:1"
															},
															"nativeSrc": "11495:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11495:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11620:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11620:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11633:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11633:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11644:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11644:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11629:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11629:3:1"
																		},
																		"nativeSrc": "11629:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11629:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11576:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11576:43:1"
																},
																"nativeSrc": "11576:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11576:72:1"
															},
															"nativeSrc": "11576:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11576:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11702:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11702:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11715:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11715:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11726:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11726:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11711:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:1"
																		},
																		"nativeSrc": "11711:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11658:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11658:43:1"
																},
																"nativeSrc": "11658:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11658:72:1"
															},
															"nativeSrc": "11658:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11658:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11295:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11405:9:1",
														"nodeType": "YulTypedName",
														"src": "11405:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11417:6:1",
														"nodeType": "YulTypedName",
														"src": "11417:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11425:6:1",
														"nodeType": "YulTypedName",
														"src": "11425:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11433:6:1",
														"nodeType": "YulTypedName",
														"src": "11433:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11444:4:1",
														"nodeType": "YulTypedName",
														"src": "11444:4:1",
														"type": ""
													}
												],
												"src": "11295:442:1"
											},
											{
												"body": {
													"nativeSrc": "11841:124:1",
													"nodeType": "YulBlock",
													"src": "11841:124:1",
													"statements": [
														{
															"nativeSrc": "11851:26:1",
															"nodeType": "YulAssignment",
															"src": "11851:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11863:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11863:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11859:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11859:3:1"
																},
																"nativeSrc": "11859:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11859:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11851:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11851:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11931:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11931:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11944:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11944:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11955:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11955:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11940:3:1"
																		},
																		"nativeSrc": "11940:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11940:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11887:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11887:43:1"
																},
																"nativeSrc": "11887:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11887:71:1"
															},
															"nativeSrc": "11887:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11887:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11743:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11813:9:1",
														"nodeType": "YulTypedName",
														"src": "11813:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11825:6:1",
														"nodeType": "YulTypedName",
														"src": "11825:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11836:4:1",
														"nodeType": "YulTypedName",
														"src": "11836:4:1",
														"type": ""
													}
												],
												"src": "11743:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one whitelisted address\")\n\n        mstore(add(memPtr, 32), \" required\")\n\n    }\n\n    function abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516137c73803806137c7833981810160405281019061003191906108de565b336040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43434b000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610b48565b5080600490816100bd9190610b48565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610c26565b60405180910390fd5b61013f8161039b60201b60201c565b5060405161014c906106fc565b604051809103905ff080158015610165573d5f5f3e3d5ffd5b5060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040516101b190610709565b604051809103905ff0801580156101ca573d5f5f3e3d5ffd5b5060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060405161021790610716565b6102219190610c26565b604051809103905ff08015801561023a573d5f5f3e3d5ffd5b5060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8251116102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610cbf565b60405180910390fd5b5f5f90505b82518110156103795760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e43252d784838151811061031b5761031a610cdd565b5b60200260200101516040518263ffffffff1660e01b815260040161033f9190610c26565b5f604051808303815f87803b158015610356575f5ffd5b505af1158015610368573d5f5f3e3d5ffd5b5050505080806001019150506102c2565b50610394336969e10de76676d080000061045e60201b60201c565b5050610dc7565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104ce575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104c59190610c26565b60405180910390fd5b6104df5f83836104e360201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610533578060025f8282546105279190610d37565b92505081905550610601565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156105bc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016105b393929190610d79565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610648578060025f8282540392505081905550610692565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106ef9190610dae565b60405180910390a3505050565b61030e80612ab483390190565b61030e80612dc283390190565b6106f7806130d083390190565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61077e82610738565b810181811067ffffffffffffffff8211171561079d5761079c610748565b5b80604052505050565b5f6107af610723565b90506107bb8282610775565b919050565b5f67ffffffffffffffff8211156107da576107d9610748565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610818826107ef565b9050919050565b6108288161080e565b8114610832575f5ffd5b50565b5f815190506108438161081f565b92915050565b5f61085b610856846107c0565b6107a6565b9050808382526020820190506020840283018581111561087e5761087d6107eb565b5b835b818110156108a757806108938882610835565b845260208401935050602081019050610880565b5050509392505050565b5f82601f8301126108c5576108c4610734565b5b81516108d5848260208601610849565b91505092915050565b5f5f604083850312156108f4576108f361072c565b5b5f83015167ffffffffffffffff81111561091157610910610730565b5b61091d858286016108b1565b925050602061092e85828601610835565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061098657607f821691505b60208210810361099957610998610942565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026109fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109c0565b610a0586836109c0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610a49610a44610a3f84610a1d565b610a26565b610a1d565b9050919050565b5f819050919050565b610a6283610a2f565b610a76610a6e82610a50565b8484546109cc565b825550505050565b5f5f905090565b610a8d610a7e565b610a98818484610a59565b505050565b5b81811015610abb57610ab05f82610a85565b600181019050610a9e565b5050565b601f821115610b0057610ad18161099f565b610ada846109b1565b81016020851015610ae9578190505b610afd610af5856109b1565b830182610a9d565b50505b505050565b5f82821c905092915050565b5f610b205f1984600802610b05565b1980831691505092915050565b5f610b388383610b11565b9150826002028217905092915050565b610b5182610938565b67ffffffffffffffff811115610b6a57610b69610748565b5b610b74825461096f565b610b7f828285610abf565b5f60209050601f831160018114610bb0575f8415610b9e578287015190505b610ba88582610b2d565b865550610c0f565b601f198416610bbe8661099f565b5f5b82811015610be557848901518255600182019150602085019450602081019050610bc0565b86831015610c025784890151610bfe601f891682610b11565b8355505b6001600288020188555050505b505050505050565b610c208161080e565b82525050565b5f602082019050610c395f830184610c17565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e652077686974656c697374656420616464726573735f8201527f2072657175697265640000000000000000000000000000000000000000000000602082015250565b5f610ca9602983610c3f565b9150610cb482610c4f565b604082019050919050565b5f6020820190508181035f830152610cd681610c9d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d4182610a1d565b9150610d4c83610a1d565b9250828201905080821115610d6457610d63610d0a565b5b92915050565b610d7381610a1d565b82525050565b5f606082019050610d8c5f830186610c17565b610d996020830185610d6a565b610da66040830184610d6a565b949350505050565b5f602082019050610dc15f830184610d6a565b92915050565b611ce080610dd45f395ff3fe608060405234801561000f575f5ffd5b50600436106101a7575f3560e01c80635c975abb116100f757806395d89b4111610095578063dd62ed3e1161006f578063dd62ed3e146104b3578063e5839836146104e3578063eb91d37e14610513578063f2fde38b14610531576101a7565b806395d89b4114610447578063a9059cbb14610465578063aba6370514610495576101a7565b8063715018a6116100d1578063715018a6146103e357806384900b04146103ed5780638da5cb5b1461040b578063902d55a514610429576101a7565b80635c975abb146103775780636290865d1461039557806370a08231146103b3576101a7565b806323b872dd11610164578063313ce5671161013e578063313ce5671461030157806340c10f191461031f57806354fd4d501461033b57806356dd475a14610359576101a7565b806323b872dd146102955780632630c12f146102c55780632d380242146102e3576101a7565b806306fdde03146101ab578063095ea7b3146101c957806312cae7af146101f9578063134e18f414610229578063158b1a571461024757806318160ddd14610277575b5f5ffd5b6101b361054d565b6040516101c0919061163f565b60405180910390f35b6101e360048036038101906101de91906116f0565b6105dd565b6040516101f09190611748565b60405180910390f35b610213600480360381019061020e9190611761565b6105ff565b604051610220919061179b565b60405180910390f35b610231610610565b60405161023e91906117c3565b60405180910390f35b610261600480360381019061025c9190611761565b610617565b60405161026e919061179b565b60405180910390f35b61027f610620565b60405161028c919061179b565b60405180910390f35b6102af60048036038101906102aa91906117dc565b610629565b6040516102bc9190611748565b60405180910390f35b6102cd61076b565b6040516102da9190611887565b60405180910390f35b6102eb610790565b6040516102f8919061179b565b60405180910390f35b610309610796565b60405161031691906118bb565b60405180910390f35b610339600480360381019061033491906116f0565b61079d565b005b6103436108fd565b604051610350919061163f565b60405180910390f35b61036161093a565b60405161036e91906118f4565b60405180910390f35b61037f61095f565b60405161038c9190611748565b60405180910390f35b61039d610966565b6040516103aa91906117c3565b60405180910390f35b6103cd60048036038101906103c89190611761565b61096d565b6040516103da919061179b565b60405180910390f35b6103eb6109b2565b005b6103f56109c5565b604051610402919061192d565b60405180910390f35b6104136109ea565b60405161042091906117c3565b60405180910390f35b610431610a12565b60405161043e919061179b565b60405180910390f35b61044f610a20565b60405161045c919061163f565b60405180910390f35b61047f600480360381019061047a91906116f0565b610ab0565b60405161048c9190611748565b60405180910390f35b61049d610bf0565b6040516104aa91906117c3565b60405180910390f35b6104cd60048036038101906104c89190611946565b610bf7565b6040516104da919061179b565b60405180910390f35b6104fd60048036038101906104f89190611761565b610c79565b60405161050a9190611748565b60405180910390f35b61051b610d1a565b604051610528919061179b565b60405180910390f35b61054b60048036038101906105469190611761565b610dae565b005b60606003805461055c906119b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610588906119b1565b80156105d35780601f106105aa576101008083540402835291602001916105d3565b820191905f5260205f20905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b5f5f6105e7610e32565b90506105f4818585610e39565b600191505092915050565b5f6106098261096d565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836856040518263ffffffff1660e01b815260040161068491906117c3565b602060405180830381865afa15801561069f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c39190611a0b565b15610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611a80565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611ae8565b60405180910390fd5b610762848484610e4b565b90509392505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f5f905090565b6107a5610e79565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b81526004016107ff91906117c3565b602060405180830381865afa15801561081a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083e9190611a0b565b61087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490611b50565b60405180910390fd5b6969e10de76676d0800000816006546108969190611b9b565b11156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611c18565b60405180910390fd5b6108e18282610f00565b8060065f8282546108f29190611b9b565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109ba610e79565b6109c35f610f7f565b565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a2f906119b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906119b1565b8015610aa65780601f10610a7d57610100808354040283529160200191610aa6565b820191905f5260205f20905b815481529060010190602001808311610a8957829003601f168201915b5050505050905090565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836336040518263ffffffff1660e01b8152600401610b0b91906117c3565b602060405180830381865afa158015610b26573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611a0b565b15610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190611a80565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd590611ae8565b60405180910390fd5b610be88383611042565b905092915050565b5f30905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836836040518263ffffffff1660e01b8152600401610cd491906117c3565b602060405180830381865afa158015610cef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d139190611a0b565b9050919050565b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb91d37e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d85573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da99190611c4a565b905090565b610db6610e79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e26575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e1d91906117c3565b60405180910390fd5b610e2f81610f7f565b50565b5f33905090565b610e468383836001611064565b505050565b5f5f610e55610e32565b9050610e62858285611233565b610e6d8585856112c6565b60019150509392505050565b610e81610e32565b73ffffffffffffffffffffffffffffffffffffffff16610e9f6109ea565b73ffffffffffffffffffffffffffffffffffffffff1614610efe57610ec2610e32565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef591906117c3565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f70575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6791906117c3565b60405180910390fd5b610f7b5f83836113b6565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f61104c610e32565b90506110598185856112c6565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110d4575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110cb91906117c3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161113b91906117c3565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561122d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611224919061179b565b60405180910390a35b50505050565b5f61123e8484610bf7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112c057818110156112b1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112a893929190611c75565b60405180910390fd5b6112bf84848484035f611064565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611336575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161132d91906117c3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161139d91906117c3565b60405180910390fd5b6113b18383836113b6565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611406578060025f8282546113fa9190611b9b565b925050819055506114d4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561148f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148693929190611c75565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361151b578060025f8282540392505081905550611565565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115c2919061179b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611611826115cf565b61161b81856115d9565b935061162b8185602086016115e9565b611634816115f7565b840191505092915050565b5f6020820190508181035f8301526116578184611607565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61168c82611663565b9050919050565b61169c81611682565b81146116a6575f5ffd5b50565b5f813590506116b781611693565b92915050565b5f819050919050565b6116cf816116bd565b81146116d9575f5ffd5b50565b5f813590506116ea816116c6565b92915050565b5f5f604083850312156117065761170561165f565b5b5f611713858286016116a9565b9250506020611724858286016116dc565b9150509250929050565b5f8115159050919050565b6117428161172e565b82525050565b5f60208201905061175b5f830184611739565b92915050565b5f602082840312156117765761177561165f565b5b5f611783848285016116a9565b91505092915050565b611795816116bd565b82525050565b5f6020820190506117ae5f83018461178c565b92915050565b6117bd81611682565b82525050565b5f6020820190506117d65f8301846117b4565b92915050565b5f5f5f606084860312156117f3576117f261165f565b5b5f611800868287016116a9565b9350506020611811868287016116a9565b9250506040611822868287016116dc565b9150509250925092565b5f819050919050565b5f61184f61184a61184584611663565b61182c565b611663565b9050919050565b5f61186082611835565b9050919050565b5f61187182611856565b9050919050565b61188181611867565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f60ff82169050919050565b6118b5816118a0565b82525050565b5f6020820190506118ce5f8301846118ac565b92915050565b5f6118de82611856565b9050919050565b6118ee816118d4565b82525050565b5f6020820190506119075f8301846118e5565b92915050565b5f61191782611856565b9050919050565b6119278161190d565b82525050565b5f6020820190506119405f83018461191e565b92915050565b5f5f6040838503121561195c5761195b61165f565b5b5f611969858286016116a9565b925050602061197a858286016116a9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119c857607f821691505b6020821081036119db576119da611984565b5b50919050565b6119ea8161172e565b81146119f4575f5ffd5b50565b5f81519050611a05816119e1565b92915050565b5f60208284031215611a2057611a1f61165f565b5b5f611a2d848285016119f7565b91505092915050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611a6a6010836115d9565b9150611a7582611a36565b602082019050919050565b5f6020820190508181035f830152611a9781611a5e565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611ad26019836115d9565b9150611add82611a9e565b602082019050919050565b5f6020820190508181035f830152611aff81611ac6565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611b3a600f836115d9565b9150611b4582611b06565b602082019050919050565b5f6020820190508181035f830152611b6781611b2e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ba5826116bd565b9150611bb0836116bd565b9250828201905080821115611bc857611bc7611b6e565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c026015836115d9565b9150611c0d82611bce565b602082019050919050565b5f6020820190508181035f830152611c2f81611bf6565b9050919050565b5f81519050611c44816116c6565b92915050565b5f60208284031215611c5f57611c5e61165f565b5b5f611c6c84828501611c36565b91505092915050565b5f606082019050611c885f8301866117b4565b611c95602083018561178c565b611ca2604083018461178c565b94935050505056fea264697066735822122071f06dd889a253c53401ead606c64d3bcefb97a1fcab2428ba5cb243c29c98a664736f6c634300081e00336080604052348015600e575f5ffd5b506102f28061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80633af32abf1461004e5780638ab1d6811461007e5780639b19251a1461009a578063e43252d7146100ca575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b60405161007591906102a3565b60405180910390f35b6100986004803603810190610093919061025e565b610137565b005b6100b460048036038101906100af919061025e565b61018d565b6040516100c191906102a3565b60405180910390f35b6100e460048036038101906100df919061025e565b6101a9565b005b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e00336080604052348015600e575f5ffd5b506102f28061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063cb4b73ab1461004e578063d05166501461006a578063e08ba51a1461009a578063e5839836146100b6575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b005b610084600480360381019061007f919061025e565b61013c565b60405161009191906102a3565b60405180910390f35b6100b460048036038101906100af919061025e565b610158565b005b6100d060048036038101906100cb919061025e565b6101af565b6040516100dd91906102a3565b60405180910390f35b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033608060405234801561000f575f5ffd5b506040516106f73803806106f7833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6105eb8061010c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063bdd3d82514610038578063eb91d37e14610056575b5f5ffd5b610040610074565b60405161004d91906101c5565b60405180910390f35b61005e610098565b60405161006b91906101f6565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610107573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012b9190610315565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610171919061050e565b61017b9190610585565b905080935050505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101af82610186565b9050919050565b6101bf816101a5565b82525050565b5f6020820190506101d85f8301846101b6565b92915050565b5f819050919050565b6101f0816101de565b82525050565b5f6020820190506102095f8301846101e7565b92915050565b5f5ffd5b61021c81610186565b8114610226575f5ffd5b50565b5f8151905061023781610213565b92915050565b5f8160020b9050919050565b6102528161023d565b811461025c575f5ffd5b50565b5f8151905061026d81610249565b92915050565b5f61ffff82169050919050565b61028981610273565b8114610293575f5ffd5b50565b5f815190506102a481610280565b92915050565b5f60ff82169050919050565b6102bf816102aa565b81146102c9575f5ffd5b50565b5f815190506102da816102b6565b92915050565b5f8115159050919050565b6102f4816102e0565b81146102fe575f5ffd5b50565b5f8151905061030f816102eb565b92915050565b5f5f5f5f5f5f5f60e0888a0312156103305761032f61020f565b5b5f61033d8a828b01610229565b975050602061034e8a828b0161025f565b965050604061035f8a828b01610296565b95505060606103708a828b01610296565b94505060806103818a828b01610296565b93505060a06103928a828b016102cc565b92505060c06103a38a828b01610301565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610434578086048111156104105761040f6103b2565b5b600185161561041f5780820291505b808102905061042d856103df565b94506103f4565b94509492505050565b5f8261044c5760019050610507565b81610459575f9050610507565b816001811461046f5760028114610479576104a8565b6001915050610507565b60ff84111561048b5761048a6103b2565b5b8360020a9150848211156104a2576104a16103b2565b5b50610507565b5060208310610133831016604e8410600b84101617156104dd5782820a9050838111156104d8576104d76103b2565b5b610507565b6104ea84848460016103eb565b92509050818404811115610501576105006103b2565b5b81810290505b9392505050565b5f610518826101de565b9150610523836102aa565b92506105507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461043d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61058f826101de565b915061059a836101de565b9250826105aa576105a9610558565b5b82820490509291505056fea26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x37C7 CODESIZE SUB DUP1 PUSH2 0x37C7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xB48 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x39B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x14C SWAP1 PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x165 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP1 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1CA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x217 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 MLOAD GT PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE43252D7 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x31B JUMPI PUSH2 0x31A PUSH2 0xCDD JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x368 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2C2 JUMP JUMPDEST POP PUSH2 0x394 CALLER PUSH10 0x69E10DE76676D0800000 PUSH2 0x45E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xDC7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DF PUSH0 DUP4 DUP4 PUSH2 0x4E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x533 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xD37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x601 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x5BC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x692 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x30E DUP1 PUSH2 0x2AB4 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x30E DUP1 PUSH2 0x2DC2 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x6F7 DUP1 PUSH2 0x30D0 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x77E DUP3 PUSH2 0x738 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AF PUSH2 0x723 JUMP JUMPDEST SWAP1 POP PUSH2 0x7BB DUP3 DUP3 PUSH2 0x775 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x818 DUP3 PUSH2 0x7EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x828 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP2 EQ PUSH2 0x832 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x843 DUP2 PUSH2 0x81F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x85B PUSH2 0x856 DUP5 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x87E JUMPI PUSH2 0x87D PUSH2 0x7EB JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A7 JUMPI DUP1 PUSH2 0x893 DUP9 DUP3 PUSH2 0x835 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x880 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8C5 JUMPI PUSH2 0x8C4 PUSH2 0x734 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x8D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F4 JUMPI PUSH2 0x8F3 PUSH2 0x72C JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0x730 JUMP JUMPDEST JUMPDEST PUSH2 0x91D DUP6 DUP3 DUP7 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x92E DUP6 DUP3 DUP7 ADD PUSH2 0x835 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x986 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x999 JUMPI PUSH2 0x998 PUSH2 0x942 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x9FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0xA05 DUP7 DUP4 PUSH2 0x9C0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA49 PUSH2 0xA44 PUSH2 0xA3F DUP5 PUSH2 0xA1D JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA62 DUP4 PUSH2 0xA2F JUMP JUMPDEST PUSH2 0xA76 PUSH2 0xA6E DUP3 PUSH2 0xA50 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x9CC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA8D PUSH2 0xA7E JUMP JUMPDEST PUSH2 0xA98 DUP2 DUP5 DUP5 PUSH2 0xA59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABB JUMPI PUSH2 0xAB0 PUSH0 DUP3 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xA9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB00 JUMPI PUSH2 0xAD1 DUP2 PUSH2 0x99F JUMP JUMPDEST PUSH2 0xADA DUP5 PUSH2 0x9B1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xAE9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xAFD PUSH2 0xAF5 DUP6 PUSH2 0x9B1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xA9D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB20 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB05 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB38 DUP4 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB51 DUP3 PUSH2 0x938 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0x748 JUMP JUMPDEST JUMPDEST PUSH2 0xB74 DUP3 SLOAD PUSH2 0x96F JUMP JUMPDEST PUSH2 0xB7F DUP3 DUP3 DUP6 PUSH2 0xABF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBB0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xB9E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBA8 DUP6 DUP3 PUSH2 0xB2D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xBBE DUP7 PUSH2 0x99F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBE5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBC0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC02 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xBFE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB11 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC20 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC39 PUSH0 DUP4 ADD DUP5 PUSH2 0xC17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652077686974656C69737465642061646472657373 PUSH0 DUP3 ADD MSTORE PUSH32 0x2072657175697265640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCA9 PUSH1 0x29 DUP4 PUSH2 0xC3F JUMP JUMPDEST SWAP2 POP PUSH2 0xCB4 DUP3 PUSH2 0xC4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCD6 DUP2 PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD41 DUP3 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xD4C DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD64 JUMPI PUSH2 0xD63 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD73 DUP2 PUSH2 0xA1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD8C PUSH0 DUP4 ADD DUP7 PUSH2 0xC17 JUMP JUMPDEST PUSH2 0xD99 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0xDA6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD6A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDC1 PUSH0 DUP4 ADD DUP5 PUSH2 0xD6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CE0 DUP1 PUSH2 0xDD4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x531 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x495 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x84900B04 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x429 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x56DD475A EQ PUSH2 0x359 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x277 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55C SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5E7 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F4 DUP2 DUP6 DUP6 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x609 DUP3 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x762 DUP5 DUP5 DUP5 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3AF32ABF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x874 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x6 SLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E1 DUP3 DUP3 PUSH2 0xF00 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x9C3 PUSH0 PUSH2 0xF7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST ISZERO PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD5 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE8 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEB91D37E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB6 PUSH2 0xE79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xF7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE46 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1064 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE55 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0xE62 DUP6 DUP3 DUP6 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0xE6D DUP6 DUP6 DUP6 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0xE32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9F PUSH2 0x9EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF70 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF67 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7B PUSH0 DUP4 DUP4 PUSH2 0x13B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x104C PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0x1059 DUP2 DUP6 DUP6 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x122D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x123E DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12C0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12B1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12BF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1064 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1336 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B1 DUP4 DUP4 DUP4 PUSH2 0x13B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13FA SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14D4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x148F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1565 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x161B DUP2 DUP6 PUSH2 0x15D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x162B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1657 DUP2 DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x168C DUP3 PUSH2 0x1663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169C DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B7 DUP2 PUSH2 0x1693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP2 EQ PUSH2 0x16D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EA DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1713 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1724 DUP6 DUP3 DUP7 ADD PUSH2 0x16DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x172E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175B PUSH0 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1783 DUP5 DUP3 DUP6 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1795 DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17AE PUSH0 DUP4 ADD DUP5 PUSH2 0x178C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1800 DUP7 DUP3 DUP8 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1811 DUP7 DUP3 DUP8 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1822 DUP7 DUP3 DUP8 ADD PUSH2 0x16DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184F PUSH2 0x184A PUSH2 0x1845 DUP5 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x182C JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1860 DUP3 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B5 DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CE PUSH0 DUP4 ADD DUP5 PUSH2 0x18AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18DE DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1917 DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1927 DUP2 PUSH2 0x190D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1940 PUSH0 DUP4 ADD DUP5 PUSH2 0x191E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1969 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19DB JUMPI PUSH2 0x19DA PUSH2 0x1984 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x172E JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A05 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2D DUP5 DUP3 DUP6 ADD PUSH2 0x19F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6A PUSH1 0x10 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A97 DUP2 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 PUSH1 0x19 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3A PUSH1 0xF DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BA5 DUP3 PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP4 PUSH2 0x16BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C02 PUSH1 0x15 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C2F DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C44 DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5F JUMPI PUSH2 0x1C5E PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C6C DUP5 DUP3 DUP6 ADD PUSH2 0x1C36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP7 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x178C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xF06DD889A253C53401EAD606C64D3BCEFB97 LOG1 0xFC 0xAB 0x24 0x28 0xBA TLOAD 0xB2 NUMBER 0xC2 SWAP13 SWAP9 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH29 0xA57A84CC7C4601190DC4C1F111229EFAFB7710B6B5C7FD335271704493 CALL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xB3 RETURNDATACOPY 0x2F CALLER LOG3 PUSH16 0xFF689B7507A3E99CB9AC8D696BCC5899 0x1F SWAPN 0xC2 CODESIZE 0xDE PUSH6 0x6A0B7A64736F PUSH13 0x634300081E0033608060405234 DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F7 CODESIZE SUB DUP1 PUSH2 0x6F7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5EB DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF DUP3 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x21C DUP2 PUSH2 0x186 JUMP JUMPDEST DUP2 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x237 DUP2 PUSH2 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x23D JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26D DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x289 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP2 EQ PUSH2 0x293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A4 DUP2 PUSH2 0x280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x2AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DA DUP2 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0x20F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x33D DUP11 DUP3 DUP12 ADD PUSH2 0x229 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34E DUP11 DUP3 DUP12 ADD PUSH2 0x25F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x35F DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x370 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x381 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x392 DUP11 DUP3 DUP12 ADD PUSH2 0x2CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3A3 DUP11 DUP3 DUP12 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x434 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x41F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x42D DUP6 PUSH2 0x3DF JUMP JUMPDEST SWAP5 POP PUSH2 0x3F4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x44C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH2 0x459 JUMPI PUSH0 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x46F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x479 JUMPI PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x507 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A1 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x507 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4DD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4EA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3EB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x518 DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x523 DUP4 PUSH2 0x2AA JUMP JUMPDEST SWAP3 POP PUSH2 0x550 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x58F DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x59A DUP4 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x558 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D EXTCODEHASH 0xE8 SWAP3 EXTCODECOPY 0xC7 CALLDATALOAD 0xCA 0x2A 0xC3 0xBB RETURNDATASIZE 0x2F 0xEB 0xFC CALLER PUSH21 0x7247ED18E8B191A596DBD301F92E164736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "54898:5532:0:-:0;;;55589:579;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55698:10;12451:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:5;12517;:13;;;;;;:::i;:::-;;12550:7;12540;:17;;;;;;:::i;:::-;;12451:113;;23018:1;22994:26;;:12;:26;;;22990:95;;23071:1;23043:31;;;;;;;;;;;:::i;:::-;;;;;;;;22990:95;23094:32;23113:12;23094:18;;;:32;;:::i;:::-;22946:187;55745:15:::2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;55725:17;;:35;;;;;;;;;;;;;;;;;;55790:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;55770:17;;:35;;;;;;;;;;;;;;;;;;55845:12;55829:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;55815:11;;:43;;;;;;;;;;;;;;;;;;55897:1;55877:10;:17;:21;55869:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;55959:9;55971:1;55959:13;;55954:120;55978:10;:17;55974:1;:21;55954:120;;;56016:17;;;;;;;;;;;:32;;;56049:10;56060:1;56049:13;;;;;;;;:::i;:::-;;;;;;;;56016:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55997:3;;;;;;;55954:120;;;;56084:31;56090:10;54989:16;56084:5;;;:31;;:::i;:::-;55589:579:::0;;54898:5532;;24633:187;24706:16;24725:6;;;;;;;;;;;24706:25;;24750:8;24741:6;;:17;;;;;;;;;;;;;;;;;;24804:8;24773:40;;24794:8;24773:40;;;;;;;;;;;;24696:124;24633:187;:::o;18308:208::-;18397:1;18378:21;;:7;:21;;;18374:91;;18451:1;18422:32;;;;;;;;;;;:::i;:::-;;;;;;;;18374:91;18474:35;18490:1;18494:7;18503:5;18474:7;;;:35;;:::i;:::-;18308:208;;:::o;16858:1107::-;16963:1;16947:18;;:4;:18;;;16943:540;;17099:5;17083:12;;:21;;;;;;;:::i;:::-;;;;;;;;16943:540;;;17135:19;17157:9;:15;17167:4;17157:15;;;;;;;;;;;;;;;;17135:37;;17204:5;17190:11;:19;17186:115;;;17261:4;17267:11;17280:5;17236:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17186:115;17453:5;17439:11;:19;17421:9;:15;17431:4;17421:15;;;;;;;;;;;;;;;:37;;;;17121:362;16943:540;17511:1;17497:16;;:2;:16;;;17493:425;;17676:5;17660:12;;:21;;;;;;;;;;;17493:425;;;17888:5;17871:9;:13;17881:2;17871:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17493:425;17948:2;17933:25;;17942:4;17933:25;;;17952:5;17933:25;;;;;;:::i;:::-;;;;;;;;16858:1107;;;:::o;54898:5532::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:710::-;3391:6;3399;3448:2;3436:9;3427:7;3423:23;3419:32;3416:119;;;3454:79;;:::i;:::-;3416:119;3595:1;3584:9;3580:17;3574:24;3625:18;3617:6;3614:30;3611:117;;;3647:79;;:::i;:::-;3611:117;3752:89;3833:7;3824:6;3813:9;3809:22;3752:89;:::i;:::-;3742:99;;3545:306;3890:2;3916:64;3972:7;3963:6;3952:9;3948:22;3916:64;:::i;:::-;3906:74;;3861:129;3287:710;;;;;:::o;4003:99::-;4055:6;4089:5;4083:12;4073:22;;4003:99;;;:::o;4108:180::-;4156:77;4153:1;4146:88;4253:4;4250:1;4243:15;4277:4;4274:1;4267:15;4294:320;4338:6;4375:1;4369:4;4365:12;4355:22;;4422:1;4416:4;4412:12;4443:18;4433:81;;4499:4;4491:6;4487:17;4477:27;;4433:81;4561:2;4553:6;4550:14;4530:18;4527:38;4524:84;;4580:18;;:::i;:::-;4524:84;4345:269;4294:320;;;:::o;4620:141::-;4669:4;4692:3;4684:11;;4715:3;4712:1;4705:14;4749:4;4746:1;4736:18;4728:26;;4620:141;;;:::o;4767:93::-;4804:6;4851:2;4846;4839:5;4835:14;4831:23;4821:33;;4767:93;;;:::o;4866:107::-;4910:8;4960:5;4954:4;4950:16;4929:37;;4866:107;;;;:::o;4979:393::-;5048:6;5098:1;5086:10;5082:18;5121:97;5151:66;5140:9;5121:97;:::i;:::-;5239:39;5269:8;5258:9;5239:39;:::i;:::-;5227:51;;5311:4;5307:9;5300:5;5296:21;5287:30;;5360:4;5350:8;5346:19;5339:5;5336:30;5326:40;;5055:317;;4979:393;;;;;:::o;5378:77::-;5415:7;5444:5;5433:16;;5378:77;;;:::o;5461:60::-;5489:3;5510:5;5503:12;;5461:60;;;:::o;5527:142::-;5577:9;5610:53;5628:34;5637:24;5655:5;5637:24;:::i;:::-;5628:34;:::i;:::-;5610:53;:::i;:::-;5597:66;;5527:142;;;:::o;5675:75::-;5718:3;5739:5;5732:12;;5675:75;;;:::o;5756:269::-;5866:39;5897:7;5866:39;:::i;:::-;5927:91;5976:41;6000:16;5976:41;:::i;:::-;5968:6;5961:4;5955:11;5927:91;:::i;:::-;5921:4;5914:105;5832:193;5756:269;;;:::o;6031:73::-;6076:3;6097:1;6090:8;;6031:73;:::o;6110:189::-;6187:32;;:::i;:::-;6228:65;6286:6;6278;6272:4;6228:65;:::i;:::-;6163:136;6110:189;;:::o;6305:186::-;6365:120;6382:3;6375:5;6372:14;6365:120;;;6436:39;6473:1;6466:5;6436:39;:::i;:::-;6409:1;6402:5;6398:13;6389:22;;6365:120;;;6305:186;;:::o;6497:543::-;6598:2;6593:3;6590:11;6587:446;;;6632:38;6664:5;6632:38;:::i;:::-;6716:29;6734:10;6716:29;:::i;:::-;6706:8;6702:44;6899:2;6887:10;6884:18;6881:49;;;6920:8;6905:23;;6881:49;6943:80;6999:22;7017:3;6999:22;:::i;:::-;6989:8;6985:37;6972:11;6943:80;:::i;:::-;6602:431;;6587:446;6497:543;;;:::o;7046:117::-;7100:8;7150:5;7144:4;7140:16;7119:37;;7046:117;;;;:::o;7169:169::-;7213:6;7246:51;7294:1;7290:6;7282:5;7279:1;7275:13;7246:51;:::i;:::-;7242:56;7327:4;7321;7317:15;7307:25;;7220:118;7169:169;;;;:::o;7343:295::-;7419:4;7565:29;7590:3;7584:4;7565:29;:::i;:::-;7557:37;;7627:3;7624:1;7620:11;7614:4;7611:21;7603:29;;7343:295;;;;:::o;7643:1395::-;7760:37;7793:3;7760:37;:::i;:::-;7862:18;7854:6;7851:30;7848:56;;;7884:18;;:::i;:::-;7848:56;7928:38;7960:4;7954:11;7928:38;:::i;:::-;8013:67;8073:6;8065;8059:4;8013:67;:::i;:::-;8107:1;8131:4;8118:17;;8163:2;8155:6;8152:14;8180:1;8175:618;;;;8837:1;8854:6;8851:77;;;8903:9;8898:3;8894:19;8888:26;8879:35;;8851:77;8954:67;9014:6;9007:5;8954:67;:::i;:::-;8948:4;8941:81;8810:222;8145:887;;8175:618;8227:4;8223:9;8215:6;8211:22;8261:37;8293:4;8261:37;:::i;:::-;8320:1;8334:208;8348:7;8345:1;8342:14;8334:208;;;8427:9;8422:3;8418:19;8412:26;8404:6;8397:42;8478:1;8470:6;8466:14;8456:24;;8525:2;8514:9;8510:18;8497:31;;8371:4;8368:1;8364:12;8359:17;;8334:208;;;8570:6;8561:7;8558:19;8555:179;;;8628:9;8623:3;8619:19;8613:26;8671:48;8713:4;8705:6;8701:17;8690:9;8671:48;:::i;:::-;8663:6;8656:64;8578:156;8555:179;8780:1;8776;8768:6;8764:14;8760:22;8754:4;8747:36;8182:611;;;8145:887;;7735:1303;;;7643:1395;;:::o;9044:118::-;9131:24;9149:5;9131:24;:::i;:::-;9126:3;9119:37;9044:118;;:::o;9168:222::-;9261:4;9299:2;9288:9;9284:18;9276:26;;9312:71;9380:1;9369:9;9365:17;9356:6;9312:71;:::i;:::-;9168:222;;;;:::o;9396:169::-;9480:11;9514:6;9509:3;9502:19;9554:4;9549:3;9545:14;9530:29;;9396:169;;;;:::o;9571:228::-;9711:34;9707:1;9699:6;9695:14;9688:58;9780:11;9775:2;9767:6;9763:15;9756:36;9571:228;:::o;9805:366::-;9947:3;9968:67;10032:2;10027:3;9968:67;:::i;:::-;9961:74;;10044:93;10133:3;10044:93;:::i;:::-;10162:2;10157:3;10153:12;10146:19;;9805:366;;;:::o;10177:419::-;10343:4;10381:2;10370:9;10366:18;10358:26;;10430:9;10424:4;10420:20;10416:1;10405:9;10401:17;10394:47;10458:131;10584:4;10458:131;:::i;:::-;10450:139;;10177:419;;;:::o;10602:180::-;10650:77;10647:1;10640:88;10747:4;10744:1;10737:15;10771:4;10768:1;10761:15;10788:180;10836:77;10833:1;10826:88;10933:4;10930:1;10923:15;10957:4;10954:1;10947:15;10974:191;11014:3;11033:20;11051:1;11033:20;:::i;:::-;11028:25;;11067:20;11085:1;11067:20;:::i;:::-;11062:25;;11110:1;11107;11103:9;11096:16;;11131:3;11128:1;11125:10;11122:36;;;11138:18;;:::i;:::-;11122:36;10974:191;;;;:::o;11171:118::-;11258:24;11276:5;11258:24;:::i;:::-;11253:3;11246:37;11171:118;;:::o;11295:442::-;11444:4;11482:2;11471:9;11467:18;11459:26;;11495:71;11563:1;11552:9;11548:17;11539:6;11495:71;:::i;:::-;11576:72;11644:2;11633:9;11629:18;11620:6;11576:72;:::i;:::-;11658;11726:2;11715:9;11711:18;11702:6;11658:72;:::i;:::-;11295:442;;;;;;:::o;11743:222::-;11836:4;11874:2;11863:9;11859:18;11851:26;;11887:71;11955:1;11944:9;11940:17;11931:6;11887:71;:::i;:::-;11743:222;;;;:::o;54898:5532:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1553": {
									"entryPoint": 2578,
									"id": 1553,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_662": {
									"entryPoint": 3641,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 4196,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 3705,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 3840,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 3634,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 4659,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 3967,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 4806,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 5046,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 3063,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1501,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUser_1773": {
									"entryPoint": 1535,
									"id": 1773,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 2413,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@compliance_1822": {
									"entryPoint": 2406,
									"id": 1822,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1880": {
									"entryPoint": 1942,
									"id": 1880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezableContract_1561": {
									"entryPoint": 2362,
									"id": 1561,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentPrice_1870": {
									"entryPoint": 3354,
									"id": 1870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFrozenTokens_1859": {
									"entryPoint": 1559,
									"id": 1859,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@identityRegistry_1809": {
									"entryPoint": 1552,
									"id": 1809,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFrozen_1847": {
									"entryPoint": 3193,
									"id": 1847,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1676": {
									"entryPoint": 1949,
									"id": 1676,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedAmount_1555": {
									"entryPoint": 1936,
									"id": 1555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1357,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onchainID_1786": {
									"entryPoint": 3056,
									"id": 1786,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 2538,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1832": {
									"entryPoint": 2399,
									"id": 1832,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceOracle_1564": {
									"entryPoint": 1899,
									"id": 1564,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_867": {
									"entryPoint": 2482,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 2592,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1568,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1760": {
									"entryPoint": 1577,
									"id": 1760,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 3659,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 3502,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1717": {
									"entryPoint": 2736,
									"id": 1717,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_381": {
									"entryPoint": 4162,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@version_1796": {
									"entryPoint": 2301,
									"id": 1796,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whitelistContract_1558": {
									"entryPoint": 2501,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Freezable_$1008_to_t_address_fromStack": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_PriceOracle_$1489_to_t_address_fromStack": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Whitelist_$962_to_t_address_fromStack": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Freezable_$1008__to_t_address__fromStack_reversed": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_PriceOracle_$1489__to_t_address__fromStack_reversed": {
									"entryPoint": 6279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Whitelist_$962__to_t_address__fromStack_reversed": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Freezable_$1008_to_t_address": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_PriceOracle_$1489_to_t_address": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Whitelist_$962_to_t_address": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14": {
									"entryPoint": 6710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14376:1",
										"nodeType": "YulBlock",
										"src": "0:14376:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:77:1",
													"nodeType": "YulBlock",
													"src": "349:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:1"
																},
																"nativeSrc": "360:23:1",
																"nodeType": "YulFunctionCall",
																"src": "360:23:1"
															},
															"nativeSrc": "360:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:1"
																		},
																		"nativeSrc": "399:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:1",
																		"nodeType": "YulLiteral",
																		"src": "417:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:1"
																},
																"nativeSrc": "392:27:1",
																"nodeType": "YulFunctionCall",
																"src": "392:27:1"
															},
															"nativeSrc": "392:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:139:1"
											},
											{
												"body": {
													"nativeSrc": "480:54:1",
													"nodeType": "YulBlock",
													"src": "480:54:1",
													"statements": [
														{
															"nativeSrc": "490:38:1",
															"nodeType": "YulAssignment",
															"src": "490:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:1",
																				"nodeType": "YulLiteral",
																				"src": "515:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:1"
																		},
																		"nativeSrc": "504:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:1",
																				"nodeType": "YulLiteral",
																				"src": "524:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:1"
																		},
																		"nativeSrc": "520:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nativeSrc": "500:28:1",
																"nodeType": "YulFunctionCall",
																"src": "500:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:1",
														"nodeType": "YulTypedName",
														"src": "463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:1",
														"nodeType": "YulTypedName",
														"src": "473:6:1",
														"type": ""
													}
												],
												"src": "432:102:1"
											},
											{
												"body": {
													"nativeSrc": "632:285:1",
													"nodeType": "YulBlock",
													"src": "632:285:1",
													"statements": [
														{
															"nativeSrc": "642:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:1"
																},
																"nativeSrc": "656:39:1",
																"nodeType": "YulFunctionCall",
																"src": "656:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:1",
															"nodeType": "YulAssignment",
															"src": "704:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:1"
																},
																"nativeSrc": "711:71:1",
																"nodeType": "YulFunctionCall",
																"src": "711:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:1",
																				"nodeType": "YulLiteral",
																				"src": "837:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:1"
																		},
																		"nativeSrc": "826:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:1"
																},
																"nativeSrc": "791:65:1",
																"nodeType": "YulFunctionCall",
																"src": "791:65:1"
															},
															"nativeSrc": "791:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:1"
														},
														{
															"nativeSrc": "865:46:1",
															"nodeType": "YulAssignment",
															"src": "865:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:1"
																		},
																		"nativeSrc": "881:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nativeSrc": "872:39:1",
																"nodeType": "YulFunctionCall",
																"src": "872:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:1",
														"nodeType": "YulTypedName",
														"src": "613:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:1",
														"nodeType": "YulTypedName",
														"src": "620:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:1",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"src": "540:377:1"
											},
											{
												"body": {
													"nativeSrc": "1041:195:1",
													"nodeType": "YulBlock",
													"src": "1041:195:1",
													"statements": [
														{
															"nativeSrc": "1051:26:1",
															"nodeType": "YulAssignment",
															"src": "1051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:1"
																},
																"nativeSrc": "1059:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:1"
																		},
																		"nativeSrc": "1094:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:1"
																		},
																		"nativeSrc": "1113:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:1"
																},
																"nativeSrc": "1087:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:1"
															},
															"nativeSrc": "1087:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:1"
														},
														{
															"nativeSrc": "1143:86:1",
															"nodeType": "YulAssignment",
															"src": "1143:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:1"
																},
																"nativeSrc": "1151:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:1",
														"nodeType": "YulTypedName",
														"src": "1013:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:1",
														"nodeType": "YulTypedName",
														"src": "1025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:1",
														"nodeType": "YulTypedName",
														"src": "1036:4:1",
														"type": ""
													}
												],
												"src": "923:313:1"
											},
											{
												"body": {
													"nativeSrc": "1282:35:1",
													"nodeType": "YulBlock",
													"src": "1282:35:1",
													"statements": [
														{
															"nativeSrc": "1292:19:1",
															"nodeType": "YulAssignment",
															"src": "1292:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:1"
																},
																"nativeSrc": "1302:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:1",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													}
												],
												"src": "1242:75:1"
											},
											{
												"body": {
													"nativeSrc": "1412:28:1",
													"nodeType": "YulBlock",
													"src": "1412:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:1"
																},
																"nativeSrc": "1422:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:1"
															},
															"nativeSrc": "1422:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:1"
											},
											{
												"body": {
													"nativeSrc": "1535:28:1",
													"nodeType": "YulBlock",
													"src": "1535:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:1"
																},
																"nativeSrc": "1545:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:1"
															},
															"nativeSrc": "1545:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:1"
											},
											{
												"body": {
													"nativeSrc": "1614:81:1",
													"nodeType": "YulBlock",
													"src": "1614:81:1",
													"statements": [
														{
															"nativeSrc": "1624:65:1",
															"nodeType": "YulAssignment",
															"src": "1624:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nativeSrc": "1635:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:1",
														"nodeType": "YulTypedName",
														"src": "1596:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:1",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"src": "1569:126:1"
											},
											{
												"body": {
													"nativeSrc": "1746:51:1",
													"nodeType": "YulBlock",
													"src": "1746:51:1",
													"statements": [
														{
															"nativeSrc": "1756:35:1",
															"nodeType": "YulAssignment",
															"src": "1756:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:1"
																},
																"nativeSrc": "1767:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:1",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:1",
														"nodeType": "YulTypedName",
														"src": "1738:7:1",
														"type": ""
													}
												],
												"src": "1701:96:1"
											},
											{
												"body": {
													"nativeSrc": "1846:79:1",
													"nodeType": "YulBlock",
													"src": "1846:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:1",
																"nodeType": "YulBlock",
																"src": "1903:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:1"
																			},
																			"nativeSrc": "1905:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:1"
																		},
																		"nativeSrc": "1905:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:1"
																				},
																				"nativeSrc": "1876:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:1"
																		},
																		"nativeSrc": "1866:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																},
																"nativeSrc": "1859:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:1"
															},
															"nativeSrc": "1856:63:1",
															"nodeType": "YulIf",
															"src": "1856:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:1",
														"nodeType": "YulTypedName",
														"src": "1839:5:1",
														"type": ""
													}
												],
												"src": "1803:122:1"
											},
											{
												"body": {
													"nativeSrc": "1983:87:1",
													"nodeType": "YulBlock",
													"src": "1983:87:1",
													"statements": [
														{
															"nativeSrc": "1993:29:1",
															"nodeType": "YulAssignment",
															"src": "1993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:1"
																},
																"nativeSrc": "2002:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:1"
																},
																"nativeSrc": "2031:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:1"
															},
															"nativeSrc": "2031:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:1",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:1",
														"nodeType": "YulTypedName",
														"src": "1969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:1",
														"nodeType": "YulTypedName",
														"src": "1977:5:1",
														"type": ""
													}
												],
												"src": "1931:139:1"
											},
											{
												"body": {
													"nativeSrc": "2121:32:1",
													"nodeType": "YulBlock",
													"src": "2121:32:1",
													"statements": [
														{
															"nativeSrc": "2131:16:1",
															"nodeType": "YulAssignment",
															"src": "2131:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:1",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:1",
														"nodeType": "YulTypedName",
														"src": "2103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:1",
														"nodeType": "YulTypedName",
														"src": "2113:7:1",
														"type": ""
													}
												],
												"src": "2076:77:1"
											},
											{
												"body": {
													"nativeSrc": "2202:79:1",
													"nodeType": "YulBlock",
													"src": "2202:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:1",
																"nodeType": "YulBlock",
																"src": "2259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:1"
																			},
																			"nativeSrc": "2261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:1"
																		},
																		"nativeSrc": "2261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:1"
																				},
																				"nativeSrc": "2232:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:1"
																		},
																		"nativeSrc": "2222:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:1"
																},
																"nativeSrc": "2215:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:1"
															},
															"nativeSrc": "2212:63:1",
															"nodeType": "YulIf",
															"src": "2212:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:1",
														"nodeType": "YulTypedName",
														"src": "2195:5:1",
														"type": ""
													}
												],
												"src": "2159:122:1"
											},
											{
												"body": {
													"nativeSrc": "2339:87:1",
													"nodeType": "YulBlock",
													"src": "2339:87:1",
													"statements": [
														{
															"nativeSrc": "2349:29:1",
															"nodeType": "YulAssignment",
															"src": "2349:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:1"
																},
																"nativeSrc": "2358:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:1"
																},
																"nativeSrc": "2387:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:1"
															},
															"nativeSrc": "2387:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:1",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:1",
														"nodeType": "YulTypedName",
														"src": "2325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:1",
														"nodeType": "YulTypedName",
														"src": "2333:5:1",
														"type": ""
													}
												],
												"src": "2287:139:1"
											},
											{
												"body": {
													"nativeSrc": "2515:391:1",
													"nodeType": "YulBlock",
													"src": "2515:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:1",
																"nodeType": "YulBlock",
																"src": "2561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:1"
																			},
																			"nativeSrc": "2563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:1"
																		},
																		"nativeSrc": "2563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nativeSrc": "2532:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:1"
																},
																"nativeSrc": "2528:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:1"
															},
															"nativeSrc": "2525:119:1",
															"nodeType": "YulIf",
															"src": "2525:119:1"
														},
														{
															"nativeSrc": "2654:117:1",
															"nodeType": "YulBlock",
															"src": "2654:117:1",
															"statements": [
																{
																	"nativeSrc": "2669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:1"
																				},
																				"nativeSrc": "2729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:1"
																		},
																		"nativeSrc": "2708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:1",
															"nodeType": "YulBlock",
															"src": "2781:118:1",
															"statements": [
																{
																	"nativeSrc": "2796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nativeSrc": "2857:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:1"
																		},
																		"nativeSrc": "2836:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:1",
														"nodeType": "YulTypedName",
														"src": "2477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:1",
														"nodeType": "YulTypedName",
														"src": "2488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:1",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:1",
														"nodeType": "YulTypedName",
														"src": "2508:6:1",
														"type": ""
													}
												],
												"src": "2432:474:1"
											},
											{
												"body": {
													"nativeSrc": "2954:48:1",
													"nodeType": "YulBlock",
													"src": "2954:48:1",
													"statements": [
														{
															"nativeSrc": "2964:32:1",
															"nodeType": "YulAssignment",
															"src": "2964:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:1"
																		},
																		"nativeSrc": "2982:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:1"
																},
																"nativeSrc": "2975:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:1",
														"nodeType": "YulTypedName",
														"src": "2936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:1",
														"nodeType": "YulTypedName",
														"src": "2946:7:1",
														"type": ""
													}
												],
												"src": "2912:90:1"
											},
											{
												"body": {
													"nativeSrc": "3067:50:1",
													"nodeType": "YulBlock",
													"src": "3067:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:1"
																		},
																		"nativeSrc": "3089:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:1"
																},
																"nativeSrc": "3077:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:1"
															},
															"nativeSrc": "3077:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:1",
														"nodeType": "YulTypedName",
														"src": "3055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:1",
														"nodeType": "YulTypedName",
														"src": "3062:3:1",
														"type": ""
													}
												],
												"src": "3008:109:1"
											},
											{
												"body": {
													"nativeSrc": "3215:118:1",
													"nodeType": "YulBlock",
													"src": "3215:118:1",
													"statements": [
														{
															"nativeSrc": "3225:26:1",
															"nodeType": "YulAssignment",
															"src": "3225:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nativeSrc": "3233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:1"
																		},
																		"nativeSrc": "3308:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:1"
																},
																"nativeSrc": "3261:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:1"
															},
															"nativeSrc": "3261:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:1",
														"nodeType": "YulTypedName",
														"src": "3187:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:1",
														"nodeType": "YulTypedName",
														"src": "3199:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:1",
														"nodeType": "YulTypedName",
														"src": "3210:4:1",
														"type": ""
													}
												],
												"src": "3123:210:1"
											},
											{
												"body": {
													"nativeSrc": "3405:263:1",
													"nodeType": "YulBlock",
													"src": "3405:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:1",
																"nodeType": "YulBlock",
																"src": "3451:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:1"
																			},
																			"nativeSrc": "3453:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:1"
																		},
																		"nativeSrc": "3453:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:1"
																		},
																		"nativeSrc": "3422:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:1"
																},
																"nativeSrc": "3418:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:1"
															},
															"nativeSrc": "3415:119:1",
															"nodeType": "YulIf",
															"src": "3415:119:1"
														},
														{
															"nativeSrc": "3544:117:1",
															"nodeType": "YulBlock",
															"src": "3544:117:1",
															"statements": [
																{
																	"nativeSrc": "3559:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:1"
																				},
																				"nativeSrc": "3619:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:1"
																		},
																		"nativeSrc": "3598:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:1",
														"nodeType": "YulTypedName",
														"src": "3375:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:1",
														"nodeType": "YulTypedName",
														"src": "3386:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:1",
														"nodeType": "YulTypedName",
														"src": "3398:6:1",
														"type": ""
													}
												],
												"src": "3339:329:1"
											},
											{
												"body": {
													"nativeSrc": "3739:53:1",
													"nodeType": "YulBlock",
													"src": "3739:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:1"
																		},
																		"nativeSrc": "3761:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:1"
																},
																"nativeSrc": "3749:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:1"
															},
															"nativeSrc": "3749:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:1",
														"nodeType": "YulTypedName",
														"src": "3727:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:1",
														"nodeType": "YulTypedName",
														"src": "3734:3:1",
														"type": ""
													}
												],
												"src": "3674:118:1"
											},
											{
												"body": {
													"nativeSrc": "3896:124:1",
													"nodeType": "YulBlock",
													"src": "3896:124:1",
													"statements": [
														{
															"nativeSrc": "3906:26:1",
															"nodeType": "YulAssignment",
															"src": "3906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:1"
																},
																"nativeSrc": "3914:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:1"
																		},
																		"nativeSrc": "3995:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:1"
																},
																"nativeSrc": "3942:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:1"
															},
															"nativeSrc": "3942:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:1",
														"nodeType": "YulTypedName",
														"src": "3868:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:1",
														"nodeType": "YulTypedName",
														"src": "3880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:1",
														"nodeType": "YulTypedName",
														"src": "3891:4:1",
														"type": ""
													}
												],
												"src": "3798:222:1"
											},
											{
												"body": {
													"nativeSrc": "4091:53:1",
													"nodeType": "YulBlock",
													"src": "4091:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4108:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4113:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4113:17:1"
																		},
																		"nativeSrc": "4113:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:1"
																},
																"nativeSrc": "4101:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4101:37:1"
															},
															"nativeSrc": "4101:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4101:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4026:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4079:5:1",
														"nodeType": "YulTypedName",
														"src": "4079:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4086:3:1",
														"nodeType": "YulTypedName",
														"src": "4086:3:1",
														"type": ""
													}
												],
												"src": "4026:118:1"
											},
											{
												"body": {
													"nativeSrc": "4248:124:1",
													"nodeType": "YulBlock",
													"src": "4248:124:1",
													"statements": [
														{
															"nativeSrc": "4258:26:1",
															"nodeType": "YulAssignment",
															"src": "4258:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:1"
																},
																"nativeSrc": "4266:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4351:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4362:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4347:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:1"
																		},
																		"nativeSrc": "4347:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4294:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:1"
																},
																"nativeSrc": "4294:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4294:71:1"
															},
															"nativeSrc": "4294:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4294:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4150:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:1",
														"nodeType": "YulTypedName",
														"src": "4220:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4232:6:1",
														"nodeType": "YulTypedName",
														"src": "4232:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4243:4:1",
														"nodeType": "YulTypedName",
														"src": "4243:4:1",
														"type": ""
													}
												],
												"src": "4150:222:1"
											},
											{
												"body": {
													"nativeSrc": "4478:519:1",
													"nodeType": "YulBlock",
													"src": "4478:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4524:83:1",
																"nodeType": "YulBlock",
																"src": "4524:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4526:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4526:77:1"
																			},
																			"nativeSrc": "4526:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:79:1"
																		},
																		"nativeSrc": "4526:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4499:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4499:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:1"
																		},
																		"nativeSrc": "4495:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:1"
																},
																"nativeSrc": "4491:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4491:32:1"
															},
															"nativeSrc": "4488:119:1",
															"nodeType": "YulIf",
															"src": "4488:119:1"
														},
														{
															"nativeSrc": "4617:117:1",
															"nodeType": "YulBlock",
															"src": "4617:117:1",
															"statements": [
																{
																	"nativeSrc": "4632:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4632:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4646:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4646:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4636:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4636:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4661:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4661:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4707:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:1"
																				},
																				"nativeSrc": "4692:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4671:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4671:20:1"
																		},
																		"nativeSrc": "4671:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4661:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4661:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4744:118:1",
															"nodeType": "YulBlock",
															"src": "4744:118:1",
															"statements": [
																{
																	"nativeSrc": "4759:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4759:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4773:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4773:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4763:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4763:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4789:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4789:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:1"
																				},
																				"nativeSrc": "4820:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4799:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4799:20:1"
																		},
																		"nativeSrc": "4799:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4789:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4789:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4872:118:1",
															"nodeType": "YulBlock",
															"src": "4872:118:1",
															"statements": [
																{
																	"nativeSrc": "4887:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4887:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4901:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4891:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4891:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:1"
																				},
																				"nativeSrc": "4948:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:1"
																		},
																		"nativeSrc": "4927:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4917:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4378:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4432:9:1",
														"nodeType": "YulTypedName",
														"src": "4432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4443:7:1",
														"nodeType": "YulTypedName",
														"src": "4443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4455:6:1",
														"nodeType": "YulTypedName",
														"src": "4455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4463:6:1",
														"nodeType": "YulTypedName",
														"src": "4463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4471:6:1",
														"nodeType": "YulTypedName",
														"src": "4471:6:1",
														"type": ""
													}
												],
												"src": "4378:619:1"
											},
											{
												"body": {
													"nativeSrc": "5035:28:1",
													"nodeType": "YulBlock",
													"src": "5035:28:1",
													"statements": [
														{
															"nativeSrc": "5045:12:1",
															"nodeType": "YulAssignment",
															"src": "5045:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5052:5:1",
																"nodeType": "YulIdentifier",
																"src": "5052:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5045:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5045:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5003:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5021:5:1",
														"nodeType": "YulTypedName",
														"src": "5021:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5031:3:1",
														"nodeType": "YulTypedName",
														"src": "5031:3:1",
														"type": ""
													}
												],
												"src": "5003:60:1"
											},
											{
												"body": {
													"nativeSrc": "5129:82:1",
													"nodeType": "YulBlock",
													"src": "5129:82:1",
													"statements": [
														{
															"nativeSrc": "5139:66:1",
															"nodeType": "YulAssignment",
															"src": "5139:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5197:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5197:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5179:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5179:17:1"
																				},
																				"nativeSrc": "5179:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5179:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5170:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5170:8:1"
																		},
																		"nativeSrc": "5170:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5152:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5152:17:1"
																},
																"nativeSrc": "5152:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5152:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5139:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5139:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5069:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:1",
														"nodeType": "YulTypedName",
														"src": "5109:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5119:9:1",
														"nodeType": "YulTypedName",
														"src": "5119:9:1",
														"type": ""
													}
												],
												"src": "5069:142:1"
											},
											{
												"body": {
													"nativeSrc": "5277:66:1",
													"nodeType": "YulBlock",
													"src": "5277:66:1",
													"statements": [
														{
															"nativeSrc": "5287:50:1",
															"nodeType": "YulAssignment",
															"src": "5287:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5331:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5331:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5300:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:30:1"
																},
																"nativeSrc": "5300:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5287:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5287:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5217:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5257:5:1",
														"nodeType": "YulTypedName",
														"src": "5257:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5267:9:1",
														"nodeType": "YulTypedName",
														"src": "5267:9:1",
														"type": ""
													}
												],
												"src": "5217:126:1"
											},
											{
												"body": {
													"nativeSrc": "5429:66:1",
													"nodeType": "YulBlock",
													"src": "5429:66:1",
													"statements": [
														{
															"nativeSrc": "5439:50:1",
															"nodeType": "YulAssignment",
															"src": "5439:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5483:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5483:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5452:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5452:30:1"
																},
																"nativeSrc": "5452:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5452:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5439:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5439:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_PriceOracle_$1489_to_t_address",
												"nativeSrc": "5349:146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5409:5:1",
														"nodeType": "YulTypedName",
														"src": "5409:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5419:9:1",
														"nodeType": "YulTypedName",
														"src": "5419:9:1",
														"type": ""
													}
												],
												"src": "5349:146:1"
											},
											{
												"body": {
													"nativeSrc": "5586:86:1",
													"nodeType": "YulBlock",
													"src": "5586:86:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5603:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5603:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5659:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5659:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_PriceOracle_$1489_to_t_address",
																			"nativeSrc": "5608:50:1",
																			"nodeType": "YulIdentifier",
																			"src": "5608:50:1"
																		},
																		"nativeSrc": "5608:57:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:57:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5596:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5596:6:1"
																},
																"nativeSrc": "5596:70:1",
																"nodeType": "YulFunctionCall",
																"src": "5596:70:1"
															},
															"nativeSrc": "5596:70:1",
															"nodeType": "YulExpressionStatement",
															"src": "5596:70:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_PriceOracle_$1489_to_t_address_fromStack",
												"nativeSrc": "5501:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5574:5:1",
														"nodeType": "YulTypedName",
														"src": "5574:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5581:3:1",
														"nodeType": "YulTypedName",
														"src": "5581:3:1",
														"type": ""
													}
												],
												"src": "5501:171:1"
											},
											{
												"body": {
													"nativeSrc": "5796:144:1",
													"nodeType": "YulBlock",
													"src": "5796:144:1",
													"statements": [
														{
															"nativeSrc": "5806:26:1",
															"nodeType": "YulAssignment",
															"src": "5806:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5818:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5818:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5829:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5829:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5814:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:1"
																},
																"nativeSrc": "5814:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5814:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5806:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5806:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5906:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5906:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5919:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5930:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5930:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5915:3:1"
																		},
																		"nativeSrc": "5915:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5915:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_PriceOracle_$1489_to_t_address_fromStack",
																	"nativeSrc": "5842:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "5842:63:1"
																},
																"nativeSrc": "5842:91:1",
																"nodeType": "YulFunctionCall",
																"src": "5842:91:1"
															},
															"nativeSrc": "5842:91:1",
															"nodeType": "YulExpressionStatement",
															"src": "5842:91:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_PriceOracle_$1489__to_t_address__fromStack_reversed",
												"nativeSrc": "5678:262:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5768:9:1",
														"nodeType": "YulTypedName",
														"src": "5768:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5780:6:1",
														"nodeType": "YulTypedName",
														"src": "5780:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5791:4:1",
														"nodeType": "YulTypedName",
														"src": "5791:4:1",
														"type": ""
													}
												],
												"src": "5678:262:1"
											},
											{
												"body": {
													"nativeSrc": "5989:43:1",
													"nodeType": "YulBlock",
													"src": "5989:43:1",
													"statements": [
														{
															"nativeSrc": "5999:27:1",
															"nodeType": "YulAssignment",
															"src": "5999:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6014:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6014:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6021:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6021:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6010:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6010:3:1"
																},
																"nativeSrc": "6010:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6010:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5999:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5999:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5946:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5971:5:1",
														"nodeType": "YulTypedName",
														"src": "5971:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5981:7:1",
														"nodeType": "YulTypedName",
														"src": "5981:7:1",
														"type": ""
													}
												],
												"src": "5946:86:1"
											},
											{
												"body": {
													"nativeSrc": "6099:51:1",
													"nodeType": "YulBlock",
													"src": "6099:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6116:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6116:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6137:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6137:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6121:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "6121:15:1"
																		},
																		"nativeSrc": "6121:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6121:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6109:6:1"
																},
																"nativeSrc": "6109:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6109:35:1"
															},
															"nativeSrc": "6109:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6109:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6038:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6087:5:1",
														"nodeType": "YulTypedName",
														"src": "6087:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6094:3:1",
														"nodeType": "YulTypedName",
														"src": "6094:3:1",
														"type": ""
													}
												],
												"src": "6038:112:1"
											},
											{
												"body": {
													"nativeSrc": "6250:120:1",
													"nodeType": "YulBlock",
													"src": "6250:120:1",
													"statements": [
														{
															"nativeSrc": "6260:26:1",
															"nodeType": "YulAssignment",
															"src": "6260:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6272:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6272:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6283:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:1"
																},
																"nativeSrc": "6268:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6268:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6260:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6260:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6336:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6336:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6349:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6349:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6360:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6360:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6345:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:1"
																		},
																		"nativeSrc": "6345:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6296:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "6296:39:1"
																},
																"nativeSrc": "6296:67:1",
																"nodeType": "YulFunctionCall",
																"src": "6296:67:1"
															},
															"nativeSrc": "6296:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "6296:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6156:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6222:9:1",
														"nodeType": "YulTypedName",
														"src": "6222:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6234:6:1",
														"nodeType": "YulTypedName",
														"src": "6234:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6245:4:1",
														"nodeType": "YulTypedName",
														"src": "6245:4:1",
														"type": ""
													}
												],
												"src": "6156:214:1"
											},
											{
												"body": {
													"nativeSrc": "6454:66:1",
													"nodeType": "YulBlock",
													"src": "6454:66:1",
													"statements": [
														{
															"nativeSrc": "6464:50:1",
															"nodeType": "YulAssignment",
															"src": "6464:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6508:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6508:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6477:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6477:30:1"
																},
																"nativeSrc": "6477:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6477:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6464:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6464:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Freezable_$1008_to_t_address",
												"nativeSrc": "6376:144:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6434:5:1",
														"nodeType": "YulTypedName",
														"src": "6434:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6444:9:1",
														"nodeType": "YulTypedName",
														"src": "6444:9:1",
														"type": ""
													}
												],
												"src": "6376:144:1"
											},
											{
												"body": {
													"nativeSrc": "6609:84:1",
													"nodeType": "YulBlock",
													"src": "6609:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6626:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6626:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6680:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6680:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Freezable_$1008_to_t_address",
																			"nativeSrc": "6631:48:1",
																			"nodeType": "YulIdentifier",
																			"src": "6631:48:1"
																		},
																		"nativeSrc": "6631:55:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6631:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6619:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:1"
																},
																"nativeSrc": "6619:68:1",
																"nodeType": "YulFunctionCall",
																"src": "6619:68:1"
															},
															"nativeSrc": "6619:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "6619:68:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_Freezable_$1008_to_t_address_fromStack",
												"nativeSrc": "6526:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6597:5:1",
														"nodeType": "YulTypedName",
														"src": "6597:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6604:3:1",
														"nodeType": "YulTypedName",
														"src": "6604:3:1",
														"type": ""
													}
												],
												"src": "6526:167:1"
											},
											{
												"body": {
													"nativeSrc": "6815:142:1",
													"nodeType": "YulBlock",
													"src": "6815:142:1",
													"statements": [
														{
															"nativeSrc": "6825:26:1",
															"nodeType": "YulAssignment",
															"src": "6825:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6837:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6837:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6833:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6833:3:1"
																},
																"nativeSrc": "6833:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6833:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6825:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6825:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6923:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6923:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6936:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6936:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6947:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6947:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6932:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:1"
																		},
																		"nativeSrc": "6932:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6932:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Freezable_$1008_to_t_address_fromStack",
																	"nativeSrc": "6861:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "6861:61:1"
																},
																"nativeSrc": "6861:89:1",
																"nodeType": "YulFunctionCall",
																"src": "6861:89:1"
															},
															"nativeSrc": "6861:89:1",
															"nodeType": "YulExpressionStatement",
															"src": "6861:89:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Freezable_$1008__to_t_address__fromStack_reversed",
												"nativeSrc": "6699:258:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6787:9:1",
														"nodeType": "YulTypedName",
														"src": "6787:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6799:6:1",
														"nodeType": "YulTypedName",
														"src": "6799:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6810:4:1",
														"nodeType": "YulTypedName",
														"src": "6810:4:1",
														"type": ""
													}
												],
												"src": "6699:258:1"
											},
											{
												"body": {
													"nativeSrc": "7040:66:1",
													"nodeType": "YulBlock",
													"src": "7040:66:1",
													"statements": [
														{
															"nativeSrc": "7050:50:1",
															"nodeType": "YulAssignment",
															"src": "7050:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7094:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7094:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7063:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "7063:30:1"
																},
																"nativeSrc": "7063:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7063:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7050:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7050:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Whitelist_$962_to_t_address",
												"nativeSrc": "6963:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7020:5:1",
														"nodeType": "YulTypedName",
														"src": "7020:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7030:9:1",
														"nodeType": "YulTypedName",
														"src": "7030:9:1",
														"type": ""
													}
												],
												"src": "6963:143:1"
											},
											{
												"body": {
													"nativeSrc": "7194:83:1",
													"nodeType": "YulBlock",
													"src": "7194:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7264:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7264:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Whitelist_$962_to_t_address",
																			"nativeSrc": "7216:47:1",
																			"nodeType": "YulIdentifier",
																			"src": "7216:47:1"
																		},
																		"nativeSrc": "7216:54:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:54:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7204:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:1"
																},
																"nativeSrc": "7204:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7204:67:1"
															},
															"nativeSrc": "7204:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "7204:67:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_Whitelist_$962_to_t_address_fromStack",
												"nativeSrc": "7112:165:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7182:5:1",
														"nodeType": "YulTypedName",
														"src": "7182:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7189:3:1",
														"nodeType": "YulTypedName",
														"src": "7189:3:1",
														"type": ""
													}
												],
												"src": "7112:165:1"
											},
											{
												"body": {
													"nativeSrc": "7398:141:1",
													"nodeType": "YulBlock",
													"src": "7398:141:1",
													"statements": [
														{
															"nativeSrc": "7408:26:1",
															"nodeType": "YulAssignment",
															"src": "7408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7420:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7420:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7431:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7416:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7416:3:1"
																},
																"nativeSrc": "7416:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7408:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7505:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7505:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7518:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7518:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7529:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7529:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7514:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7514:3:1"
																		},
																		"nativeSrc": "7514:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7514:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Whitelist_$962_to_t_address_fromStack",
																	"nativeSrc": "7444:60:1",
																	"nodeType": "YulIdentifier",
																	"src": "7444:60:1"
																},
																"nativeSrc": "7444:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7444:88:1"
															},
															"nativeSrc": "7444:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7444:88:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Whitelist_$962__to_t_address__fromStack_reversed",
												"nativeSrc": "7283:256:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7370:9:1",
														"nodeType": "YulTypedName",
														"src": "7370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7382:6:1",
														"nodeType": "YulTypedName",
														"src": "7382:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7393:4:1",
														"nodeType": "YulTypedName",
														"src": "7393:4:1",
														"type": ""
													}
												],
												"src": "7283:256:1"
											},
											{
												"body": {
													"nativeSrc": "7628:391:1",
													"nodeType": "YulBlock",
													"src": "7628:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7674:83:1",
																"nodeType": "YulBlock",
																"src": "7674:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7676:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7676:77:1"
																			},
																			"nativeSrc": "7676:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7676:79:1"
																		},
																		"nativeSrc": "7676:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7676:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7649:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7649:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7658:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7658:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7645:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7645:3:1"
																		},
																		"nativeSrc": "7645:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7645:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7670:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7670:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7641:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:1"
																},
																"nativeSrc": "7641:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7641:32:1"
															},
															"nativeSrc": "7638:119:1",
															"nodeType": "YulIf",
															"src": "7638:119:1"
														},
														{
															"nativeSrc": "7767:117:1",
															"nodeType": "YulBlock",
															"src": "7767:117:1",
															"statements": [
																{
																	"nativeSrc": "7782:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7782:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7796:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7796:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7786:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7786:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7811:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7811:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7846:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7846:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7857:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7857:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7842:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7842:3:1"
																				},
																				"nativeSrc": "7842:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7842:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7866:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7866:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7821:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7821:20:1"
																		},
																		"nativeSrc": "7821:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7821:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7811:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7811:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7894:118:1",
															"nodeType": "YulBlock",
															"src": "7894:118:1",
															"statements": [
																{
																	"nativeSrc": "7909:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7909:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7923:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7923:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7913:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7913:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7970:3:1"
																				},
																				"nativeSrc": "7970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7949:20:1"
																		},
																		"nativeSrc": "7949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7545:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7590:9:1",
														"nodeType": "YulTypedName",
														"src": "7590:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7601:7:1",
														"nodeType": "YulTypedName",
														"src": "7601:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7613:6:1",
														"nodeType": "YulTypedName",
														"src": "7613:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7621:6:1",
														"nodeType": "YulTypedName",
														"src": "7621:6:1",
														"type": ""
													}
												],
												"src": "7545:474:1"
											},
											{
												"body": {
													"nativeSrc": "8053:152:1",
													"nodeType": "YulBlock",
													"src": "8053:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8070:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8070:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8073:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8073:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:1"
																},
																"nativeSrc": "8063:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8063:88:1"
															},
															"nativeSrc": "8063:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8063:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8167:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8167:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8170:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8170:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8160:6:1"
																},
																"nativeSrc": "8160:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8160:15:1"
															},
															"nativeSrc": "8160:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8160:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8191:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8191:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8194:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8194:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:1"
																},
																"nativeSrc": "8184:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8184:15:1"
															},
															"nativeSrc": "8184:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8184:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8025:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8025:180:1"
											},
											{
												"body": {
													"nativeSrc": "8262:269:1",
													"nodeType": "YulBlock",
													"src": "8262:269:1",
													"statements": [
														{
															"nativeSrc": "8272:22:1",
															"nodeType": "YulAssignment",
															"src": "8272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8286:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8286:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8292:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8282:3:1"
																},
																"nativeSrc": "8282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:1"
																}
															]
														},
														{
															"nativeSrc": "8303:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8303:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8333:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8333:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8339:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8339:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8329:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8329:3:1"
																},
																"nativeSrc": "8329:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8329:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8307:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8307:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8380:51:1",
																"nodeType": "YulBlock",
																"src": "8380:51:1",
																"statements": [
																	{
																		"nativeSrc": "8394:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8394:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8408:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8408:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8416:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8416:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8404:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8404:3:1"
																			},
																			"nativeSrc": "8404:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8404:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8394:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8394:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8360:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8360:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8353:6:1"
																},
																"nativeSrc": "8353:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8353:26:1"
															},
															"nativeSrc": "8350:81:1",
															"nodeType": "YulIf",
															"src": "8350:81:1"
														},
														{
															"body": {
																"nativeSrc": "8483:42:1",
																"nodeType": "YulBlock",
																"src": "8483:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8497:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8497:16:1"
																			},
																			"nativeSrc": "8497:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8497:18:1"
																		},
																		"nativeSrc": "8497:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8497:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8447:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8447:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8470:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8470:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8467:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8467:2:1"
																		},
																		"nativeSrc": "8467:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8444:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8444:2:1"
																},
																"nativeSrc": "8444:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8444:38:1"
															},
															"nativeSrc": "8441:84:1",
															"nodeType": "YulIf",
															"src": "8441:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8211:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8246:4:1",
														"nodeType": "YulTypedName",
														"src": "8246:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8255:6:1",
														"nodeType": "YulTypedName",
														"src": "8255:6:1",
														"type": ""
													}
												],
												"src": "8211:320:1"
											},
											{
												"body": {
													"nativeSrc": "8577:76:1",
													"nodeType": "YulBlock",
													"src": "8577:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8631:16:1",
																"nodeType": "YulBlock",
																"src": "8631:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8643:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8643:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8633:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8633:6:1"
																			},
																			"nativeSrc": "8633:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8633:12:1"
																		},
																		"nativeSrc": "8633:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8633:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8600:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8600:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8622:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8622:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8607:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "8607:14:1"
																				},
																				"nativeSrc": "8607:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8607:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8597:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8597:2:1"
																		},
																		"nativeSrc": "8597:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8597:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:1"
																},
																"nativeSrc": "8590:40:1",
																"nodeType": "YulFunctionCall",
																"src": "8590:40:1"
															},
															"nativeSrc": "8587:60:1",
															"nodeType": "YulIf",
															"src": "8587:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8537:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8570:5:1",
														"nodeType": "YulTypedName",
														"src": "8570:5:1",
														"type": ""
													}
												],
												"src": "8537:116:1"
											},
											{
												"body": {
													"nativeSrc": "8719:77:1",
													"nodeType": "YulBlock",
													"src": "8719:77:1",
													"statements": [
														{
															"nativeSrc": "8729:22:1",
															"nodeType": "YulAssignment",
															"src": "8729:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8744:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8738:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8738:5:1"
																},
																"nativeSrc": "8738:13:1",
																"nodeType": "YulFunctionCall",
																"src": "8738:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8729:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8729:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8784:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8784:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8760:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "8760:23:1"
																},
																"nativeSrc": "8760:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8760:30:1"
															},
															"nativeSrc": "8760:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8760:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8659:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8697:6:1",
														"nodeType": "YulTypedName",
														"src": "8697:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8705:3:1",
														"nodeType": "YulTypedName",
														"src": "8705:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8713:5:1",
														"nodeType": "YulTypedName",
														"src": "8713:5:1",
														"type": ""
													}
												],
												"src": "8659:137:1"
											},
											{
												"body": {
													"nativeSrc": "8876:271:1",
													"nodeType": "YulBlock",
													"src": "8876:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8922:83:1",
																"nodeType": "YulBlock",
																"src": "8922:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8924:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8924:77:1"
																			},
																			"nativeSrc": "8924:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8924:79:1"
																		},
																		"nativeSrc": "8924:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8924:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8897:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8897:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8906:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8906:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:1"
																		},
																		"nativeSrc": "8893:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8918:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8918:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8889:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8889:3:1"
																},
																"nativeSrc": "8889:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8889:32:1"
															},
															"nativeSrc": "8886:119:1",
															"nodeType": "YulIf",
															"src": "8886:119:1"
														},
														{
															"nativeSrc": "9015:125:1",
															"nodeType": "YulBlock",
															"src": "9015:125:1",
															"statements": [
																{
																	"nativeSrc": "9030:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9030:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9044:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9034:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9034:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9059:71:1",
																	"nodeType": "YulAssignment",
																	"src": "9059:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9102:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9102:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9113:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9113:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9098:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9098:3:1"
																				},
																				"nativeSrc": "9098:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9098:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9122:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9122:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9069:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "9069:28:1"
																		},
																		"nativeSrc": "9069:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9069:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9059:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9059:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8802:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8846:9:1",
														"nodeType": "YulTypedName",
														"src": "8846:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8857:7:1",
														"nodeType": "YulTypedName",
														"src": "8857:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8869:6:1",
														"nodeType": "YulTypedName",
														"src": "8869:6:1",
														"type": ""
													}
												],
												"src": "8802:345:1"
											},
											{
												"body": {
													"nativeSrc": "9259:60:1",
													"nodeType": "YulBlock",
													"src": "9259:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9281:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9281:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9289:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9289:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9277:3:1"
																		},
																		"nativeSrc": "9277:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9277:14:1"
																	},
																	{
																		"hexValue": "53656e6465722069732066726f7a656e",
																		"kind": "string",
																		"nativeSrc": "9293:18:1",
																		"nodeType": "YulLiteral",
																		"src": "9293:18:1",
																		"type": "",
																		"value": "Sender is frozen"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9270:6:1"
																},
																"nativeSrc": "9270:42:1",
																"nodeType": "YulFunctionCall",
																"src": "9270:42:1"
															},
															"nativeSrc": "9270:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "9270:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
												"nativeSrc": "9153:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9251:6:1",
														"nodeType": "YulTypedName",
														"src": "9251:6:1",
														"type": ""
													}
												],
												"src": "9153:166:1"
											},
											{
												"body": {
													"nativeSrc": "9471:220:1",
													"nodeType": "YulBlock",
													"src": "9471:220:1",
													"statements": [
														{
															"nativeSrc": "9481:74:1",
															"nodeType": "YulAssignment",
															"src": "9481:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9547:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9547:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9552:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9552:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9488:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9488:58:1"
																},
																"nativeSrc": "9488:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9488:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9481:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9653:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9653:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																	"nativeSrc": "9564:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9564:88:1"
																},
																"nativeSrc": "9564:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9564:93:1"
															},
															"nativeSrc": "9564:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9564:93:1"
														},
														{
															"nativeSrc": "9666:19:1",
															"nodeType": "YulAssignment",
															"src": "9666:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9677:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9677:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9682:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9682:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9673:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9673:3:1"
																},
																"nativeSrc": "9673:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9673:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9666:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9666:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9325:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9459:3:1",
														"nodeType": "YulTypedName",
														"src": "9459:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9467:3:1",
														"nodeType": "YulTypedName",
														"src": "9467:3:1",
														"type": ""
													}
												],
												"src": "9325:366:1"
											},
											{
												"body": {
													"nativeSrc": "9868:248:1",
													"nodeType": "YulBlock",
													"src": "9868:248:1",
													"statements": [
														{
															"nativeSrc": "9878:26:1",
															"nodeType": "YulAssignment",
															"src": "9878:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9890:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9890:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9901:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9901:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9886:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:1"
																},
																"nativeSrc": "9886:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9886:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9878:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9878:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9925:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9925:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9936:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9936:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9921:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9921:3:1"
																		},
																		"nativeSrc": "9921:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9921:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9944:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9944:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9950:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9950:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9940:3:1"
																		},
																		"nativeSrc": "9940:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9940:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9914:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9914:6:1"
																},
																"nativeSrc": "9914:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9914:47:1"
															},
															"nativeSrc": "9914:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9914:47:1"
														},
														{
															"nativeSrc": "9970:139:1",
															"nodeType": "YulAssignment",
															"src": "9970:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10104:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10104:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9978:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9978:124:1"
																},
																"nativeSrc": "9978:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9978:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9970:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9970:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9697:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9848:9:1",
														"nodeType": "YulTypedName",
														"src": "9848:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9863:4:1",
														"nodeType": "YulTypedName",
														"src": "9863:4:1",
														"type": ""
													}
												],
												"src": "9697:419:1"
											},
											{
												"body": {
													"nativeSrc": "10228:69:1",
													"nodeType": "YulBlock",
													"src": "10228:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10250:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10250:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10258:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10258:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10246:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10246:3:1"
																		},
																		"nativeSrc": "10246:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10246:14:1"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
																		"kind": "string",
																		"nativeSrc": "10262:27:1",
																		"nodeType": "YulLiteral",
																		"src": "10262:27:1",
																		"type": "",
																		"value": "Amount must be an integer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10239:6:1"
																},
																"nativeSrc": "10239:51:1",
																"nodeType": "YulFunctionCall",
																"src": "10239:51:1"
															},
															"nativeSrc": "10239:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "10239:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
												"nativeSrc": "10122:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10220:6:1",
														"nodeType": "YulTypedName",
														"src": "10220:6:1",
														"type": ""
													}
												],
												"src": "10122:175:1"
											},
											{
												"body": {
													"nativeSrc": "10449:220:1",
													"nodeType": "YulBlock",
													"src": "10449:220:1",
													"statements": [
														{
															"nativeSrc": "10459:74:1",
															"nodeType": "YulAssignment",
															"src": "10459:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10525:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10525:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10530:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10530:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10466:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10466:58:1"
																},
																"nativeSrc": "10466:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10466:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10459:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10459:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10631:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10631:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																	"nativeSrc": "10542:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10542:88:1"
																},
																"nativeSrc": "10542:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10542:93:1"
															},
															"nativeSrc": "10542:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10542:93:1"
														},
														{
															"nativeSrc": "10644:19:1",
															"nodeType": "YulAssignment",
															"src": "10644:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10655:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10655:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10660:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10660:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10651:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10651:3:1"
																},
																"nativeSrc": "10651:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10651:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10644:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10644:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10303:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10437:3:1",
														"nodeType": "YulTypedName",
														"src": "10437:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10445:3:1",
														"nodeType": "YulTypedName",
														"src": "10445:3:1",
														"type": ""
													}
												],
												"src": "10303:366:1"
											},
											{
												"body": {
													"nativeSrc": "10846:248:1",
													"nodeType": "YulBlock",
													"src": "10846:248:1",
													"statements": [
														{
															"nativeSrc": "10856:26:1",
															"nodeType": "YulAssignment",
															"src": "10856:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10868:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10868:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10879:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10879:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10864:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:1"
																},
																"nativeSrc": "10864:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10864:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10856:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10903:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10903:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10914:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10914:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10899:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10899:3:1"
																		},
																		"nativeSrc": "10899:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10899:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10922:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10922:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10918:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:1"
																		},
																		"nativeSrc": "10918:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10892:6:1"
																},
																"nativeSrc": "10892:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10892:47:1"
															},
															"nativeSrc": "10892:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10892:47:1"
														},
														{
															"nativeSrc": "10948:139:1",
															"nodeType": "YulAssignment",
															"src": "10948:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11082:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11082:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10956:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10956:124:1"
																},
																"nativeSrc": "10956:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10956:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10948:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10675:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10826:9:1",
														"nodeType": "YulTypedName",
														"src": "10826:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10841:4:1",
														"nodeType": "YulTypedName",
														"src": "10841:4:1",
														"type": ""
													}
												],
												"src": "10675:419:1"
											},
											{
												"body": {
													"nativeSrc": "11206:59:1",
													"nodeType": "YulBlock",
													"src": "11206:59:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11228:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11228:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11236:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11236:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:1"
																		},
																		"nativeSrc": "11224:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:14:1"
																	},
																	{
																		"hexValue": "4e6f742077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "11240:17:1",
																		"nodeType": "YulLiteral",
																		"src": "11240:17:1",
																		"type": "",
																		"value": "Not whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11217:6:1"
																},
																"nativeSrc": "11217:41:1",
																"nodeType": "YulFunctionCall",
																"src": "11217:41:1"
															},
															"nativeSrc": "11217:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "11217:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
												"nativeSrc": "11100:165:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11198:6:1",
														"nodeType": "YulTypedName",
														"src": "11198:6:1",
														"type": ""
													}
												],
												"src": "11100:165:1"
											},
											{
												"body": {
													"nativeSrc": "11417:220:1",
													"nodeType": "YulBlock",
													"src": "11417:220:1",
													"statements": [
														{
															"nativeSrc": "11427:74:1",
															"nodeType": "YulAssignment",
															"src": "11427:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11493:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11493:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11498:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11434:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11434:58:1"
																},
																"nativeSrc": "11434:67:1",
																"nodeType": "YulFunctionCall",
																"src": "11434:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11427:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11427:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11599:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11599:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																	"nativeSrc": "11510:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "11510:88:1"
																},
																"nativeSrc": "11510:93:1",
																"nodeType": "YulFunctionCall",
																"src": "11510:93:1"
															},
															"nativeSrc": "11510:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "11510:93:1"
														},
														{
															"nativeSrc": "11612:19:1",
															"nodeType": "YulAssignment",
															"src": "11612:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11623:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11623:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:1"
																},
																"nativeSrc": "11619:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11619:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11612:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11271:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11405:3:1",
														"nodeType": "YulTypedName",
														"src": "11405:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11413:3:1",
														"nodeType": "YulTypedName",
														"src": "11413:3:1",
														"type": ""
													}
												],
												"src": "11271:366:1"
											},
											{
												"body": {
													"nativeSrc": "11814:248:1",
													"nodeType": "YulBlock",
													"src": "11814:248:1",
													"statements": [
														{
															"nativeSrc": "11824:26:1",
															"nodeType": "YulAssignment",
															"src": "11824:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11836:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11836:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11847:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11847:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11832:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11832:3:1"
																},
																"nativeSrc": "11832:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11832:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11824:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11824:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11871:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11871:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11882:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11882:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11867:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11867:3:1"
																		},
																		"nativeSrc": "11867:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11867:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11890:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11890:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11896:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11896:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11886:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11886:3:1"
																		},
																		"nativeSrc": "11886:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11886:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11860:6:1"
																},
																"nativeSrc": "11860:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11860:47:1"
															},
															"nativeSrc": "11860:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11860:47:1"
														},
														{
															"nativeSrc": "11916:139:1",
															"nodeType": "YulAssignment",
															"src": "11916:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12050:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12050:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11924:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "11924:124:1"
																},
																"nativeSrc": "11924:131:1",
																"nodeType": "YulFunctionCall",
																"src": "11924:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11916:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11916:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11643:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11794:9:1",
														"nodeType": "YulTypedName",
														"src": "11794:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11809:4:1",
														"nodeType": "YulTypedName",
														"src": "11809:4:1",
														"type": ""
													}
												],
												"src": "11643:419:1"
											},
											{
												"body": {
													"nativeSrc": "12096:152:1",
													"nodeType": "YulBlock",
													"src": "12096:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12113:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12113:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12116:77:1",
																		"nodeType": "YulLiteral",
																		"src": "12116:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12106:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12106:6:1"
																},
																"nativeSrc": "12106:88:1",
																"nodeType": "YulFunctionCall",
																"src": "12106:88:1"
															},
															"nativeSrc": "12106:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "12106:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12210:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12210:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12213:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12213:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:1"
																},
																"nativeSrc": "12203:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12203:15:1"
															},
															"nativeSrc": "12203:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12203:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12234:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12234:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12237:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12237:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12227:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12227:6:1"
																},
																"nativeSrc": "12227:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12227:15:1"
															},
															"nativeSrc": "12227:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12227:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12068:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12068:180:1"
											},
											{
												"body": {
													"nativeSrc": "12298:147:1",
													"nodeType": "YulBlock",
													"src": "12298:147:1",
													"statements": [
														{
															"nativeSrc": "12308:25:1",
															"nodeType": "YulAssignment",
															"src": "12308:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12331:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12331:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12313:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12313:17:1"
																},
																"nativeSrc": "12313:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12313:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12308:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12308:1:1"
																}
															]
														},
														{
															"nativeSrc": "12342:25:1",
															"nodeType": "YulAssignment",
															"src": "12342:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12365:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12365:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12347:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12347:17:1"
																},
																"nativeSrc": "12347:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12347:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12342:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12342:1:1"
																}
															]
														},
														{
															"nativeSrc": "12376:16:1",
															"nodeType": "YulAssignment",
															"src": "12376:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12387:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12387:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12390:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12390:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12383:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12383:3:1"
																},
																"nativeSrc": "12383:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12383:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12376:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12376:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12416:22:1",
																"nodeType": "YulBlock",
																"src": "12416:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12418:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12418:16:1"
																			},
																			"nativeSrc": "12418:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12418:18:1"
																		},
																		"nativeSrc": "12418:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12418:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12408:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12408:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12411:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12411:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12405:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12405:2:1"
																},
																"nativeSrc": "12405:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12405:10:1"
															},
															"nativeSrc": "12402:36:1",
															"nodeType": "YulIf",
															"src": "12402:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12254:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12285:1:1",
														"nodeType": "YulTypedName",
														"src": "12285:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12288:1:1",
														"nodeType": "YulTypedName",
														"src": "12288:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12294:3:1",
														"nodeType": "YulTypedName",
														"src": "12294:3:1",
														"type": ""
													}
												],
												"src": "12254:191:1"
											},
											{
												"body": {
													"nativeSrc": "12557:65:1",
													"nodeType": "YulBlock",
													"src": "12557:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12579:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12579:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12575:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12575:3:1"
																		},
																		"nativeSrc": "12575:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12575:14:1"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206578636565646564",
																		"kind": "string",
																		"nativeSrc": "12591:23:1",
																		"nodeType": "YulLiteral",
																		"src": "12591:23:1",
																		"type": "",
																		"value": "Total supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12568:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12568:6:1"
																},
																"nativeSrc": "12568:47:1",
																"nodeType": "YulFunctionCall",
																"src": "12568:47:1"
															},
															"nativeSrc": "12568:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "12568:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
												"nativeSrc": "12451:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12549:6:1",
														"nodeType": "YulTypedName",
														"src": "12549:6:1",
														"type": ""
													}
												],
												"src": "12451:171:1"
											},
											{
												"body": {
													"nativeSrc": "12774:220:1",
													"nodeType": "YulBlock",
													"src": "12774:220:1",
													"statements": [
														{
															"nativeSrc": "12784:74:1",
															"nodeType": "YulAssignment",
															"src": "12784:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12850:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12850:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12855:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12855:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12791:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "12791:58:1"
																},
																"nativeSrc": "12791:67:1",
																"nodeType": "YulFunctionCall",
																"src": "12791:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12956:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12956:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																	"nativeSrc": "12867:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "12867:88:1"
																},
																"nativeSrc": "12867:93:1",
																"nodeType": "YulFunctionCall",
																"src": "12867:93:1"
															},
															"nativeSrc": "12867:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "12867:93:1"
														},
														{
															"nativeSrc": "12969:19:1",
															"nodeType": "YulAssignment",
															"src": "12969:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12980:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12980:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12985:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12985:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12976:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12976:3:1"
																},
																"nativeSrc": "12976:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12976:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12969:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12969:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12628:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12762:3:1",
														"nodeType": "YulTypedName",
														"src": "12762:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12770:3:1",
														"nodeType": "YulTypedName",
														"src": "12770:3:1",
														"type": ""
													}
												],
												"src": "12628:366:1"
											},
											{
												"body": {
													"nativeSrc": "13171:248:1",
													"nodeType": "YulBlock",
													"src": "13171:248:1",
													"statements": [
														{
															"nativeSrc": "13181:26:1",
															"nodeType": "YulAssignment",
															"src": "13181:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13193:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13193:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13204:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13204:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13189:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13189:3:1"
																},
																"nativeSrc": "13189:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13189:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13181:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13181:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13228:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13228:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13239:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13239:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13224:3:1"
																		},
																		"nativeSrc": "13224:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13224:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13247:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "13247:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13253:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13243:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13243:3:1"
																		},
																		"nativeSrc": "13243:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13243:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13217:6:1"
																},
																"nativeSrc": "13217:47:1",
																"nodeType": "YulFunctionCall",
																"src": "13217:47:1"
															},
															"nativeSrc": "13217:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "13217:47:1"
														},
														{
															"nativeSrc": "13273:139:1",
															"nodeType": "YulAssignment",
															"src": "13273:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13407:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13407:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13281:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "13281:124:1"
																},
																"nativeSrc": "13281:131:1",
																"nodeType": "YulFunctionCall",
																"src": "13281:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13273:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13000:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13151:9:1",
														"nodeType": "YulTypedName",
														"src": "13151:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13166:4:1",
														"nodeType": "YulTypedName",
														"src": "13166:4:1",
														"type": ""
													}
												],
												"src": "13000:419:1"
											},
											{
												"body": {
													"nativeSrc": "13488:80:1",
													"nodeType": "YulBlock",
													"src": "13488:80:1",
													"statements": [
														{
															"nativeSrc": "13498:22:1",
															"nodeType": "YulAssignment",
															"src": "13498:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13513:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13513:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13507:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13507:5:1"
																},
																"nativeSrc": "13507:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13507:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13498:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13498:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13556:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13556:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13529:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "13529:26:1"
																},
																"nativeSrc": "13529:33:1",
																"nodeType": "YulFunctionCall",
																"src": "13529:33:1"
															},
															"nativeSrc": "13529:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "13529:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13425:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13466:6:1",
														"nodeType": "YulTypedName",
														"src": "13466:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13474:3:1",
														"nodeType": "YulTypedName",
														"src": "13474:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13482:5:1",
														"nodeType": "YulTypedName",
														"src": "13482:5:1",
														"type": ""
													}
												],
												"src": "13425:143:1"
											},
											{
												"body": {
													"nativeSrc": "13651:274:1",
													"nodeType": "YulBlock",
													"src": "13651:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13697:83:1",
																"nodeType": "YulBlock",
																"src": "13697:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13699:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "13699:77:1"
																			},
																			"nativeSrc": "13699:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13699:79:1"
																		},
																		"nativeSrc": "13699:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13699:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13672:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13672:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13681:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13681:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13668:3:1"
																		},
																		"nativeSrc": "13668:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13668:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13693:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13693:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13664:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13664:3:1"
																},
																"nativeSrc": "13664:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13664:32:1"
															},
															"nativeSrc": "13661:119:1",
															"nodeType": "YulIf",
															"src": "13661:119:1"
														},
														{
															"nativeSrc": "13790:128:1",
															"nodeType": "YulBlock",
															"src": "13790:128:1",
															"statements": [
																{
																	"nativeSrc": "13805:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13805:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13819:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13819:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13809:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13809:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13834:74:1",
																	"nodeType": "YulAssignment",
																	"src": "13834:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13880:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13880:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13891:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13891:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13876:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13876:3:1"
																				},
																				"nativeSrc": "13876:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13876:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13900:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13900:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13844:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "13844:31:1"
																		},
																		"nativeSrc": "13844:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13844:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13834:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13834:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13574:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13621:9:1",
														"nodeType": "YulTypedName",
														"src": "13621:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13632:7:1",
														"nodeType": "YulTypedName",
														"src": "13632:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13644:6:1",
														"nodeType": "YulTypedName",
														"src": "13644:6:1",
														"type": ""
													}
												],
												"src": "13574:351:1"
											},
											{
												"body": {
													"nativeSrc": "14085:288:1",
													"nodeType": "YulBlock",
													"src": "14085:288:1",
													"statements": [
														{
															"nativeSrc": "14095:26:1",
															"nodeType": "YulAssignment",
															"src": "14095:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14107:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14107:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14118:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14118:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14103:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14103:3:1"
																},
																"nativeSrc": "14103:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14103:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14095:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14095:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14175:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14175:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14188:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14188:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14199:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14199:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14184:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14184:3:1"
																		},
																		"nativeSrc": "14184:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14184:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14131:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14131:43:1"
																},
																"nativeSrc": "14131:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14131:71:1"
															},
															"nativeSrc": "14131:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14131:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14256:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14256:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14269:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14269:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14280:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14280:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14265:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14265:3:1"
																		},
																		"nativeSrc": "14265:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14265:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14212:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14212:43:1"
																},
																"nativeSrc": "14212:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14212:72:1"
															},
															"nativeSrc": "14212:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14212:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14338:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14338:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14351:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14351:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14362:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14362:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14347:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14347:3:1"
																		},
																		"nativeSrc": "14347:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14347:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14294:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14294:43:1"
																},
																"nativeSrc": "14294:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14294:72:1"
															},
															"nativeSrc": "14294:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14294:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13931:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14041:9:1",
														"nodeType": "YulTypedName",
														"src": "14041:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14053:6:1",
														"nodeType": "YulTypedName",
														"src": "14053:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14061:6:1",
														"nodeType": "YulTypedName",
														"src": "14061:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14069:6:1",
														"nodeType": "YulTypedName",
														"src": "14069:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14080:4:1",
														"nodeType": "YulTypedName",
														"src": "14080:4:1",
														"type": ""
													}
												],
												"src": "13931:442:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PriceOracle_$1489_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PriceOracle_$1489_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PriceOracle_$1489_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PriceOracle_$1489__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PriceOracle_$1489_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Freezable_$1008_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Freezable_$1008_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Freezable_$1008_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Freezable_$1008__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Freezable_$1008_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_Whitelist_$962_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Whitelist_$962_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Whitelist_$962_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Whitelist_$962__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Whitelist_$962_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is frozen\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be an integer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101a7575f3560e01c80635c975abb116100f757806395d89b4111610095578063dd62ed3e1161006f578063dd62ed3e146104b3578063e5839836146104e3578063eb91d37e14610513578063f2fde38b14610531576101a7565b806395d89b4114610447578063a9059cbb14610465578063aba6370514610495576101a7565b8063715018a6116100d1578063715018a6146103e357806384900b04146103ed5780638da5cb5b1461040b578063902d55a514610429576101a7565b80635c975abb146103775780636290865d1461039557806370a08231146103b3576101a7565b806323b872dd11610164578063313ce5671161013e578063313ce5671461030157806340c10f191461031f57806354fd4d501461033b57806356dd475a14610359576101a7565b806323b872dd146102955780632630c12f146102c55780632d380242146102e3576101a7565b806306fdde03146101ab578063095ea7b3146101c957806312cae7af146101f9578063134e18f414610229578063158b1a571461024757806318160ddd14610277575b5f5ffd5b6101b361054d565b6040516101c0919061163f565b60405180910390f35b6101e360048036038101906101de91906116f0565b6105dd565b6040516101f09190611748565b60405180910390f35b610213600480360381019061020e9190611761565b6105ff565b604051610220919061179b565b60405180910390f35b610231610610565b60405161023e91906117c3565b60405180910390f35b610261600480360381019061025c9190611761565b610617565b60405161026e919061179b565b60405180910390f35b61027f610620565b60405161028c919061179b565b60405180910390f35b6102af60048036038101906102aa91906117dc565b610629565b6040516102bc9190611748565b60405180910390f35b6102cd61076b565b6040516102da9190611887565b60405180910390f35b6102eb610790565b6040516102f8919061179b565b60405180910390f35b610309610796565b60405161031691906118bb565b60405180910390f35b610339600480360381019061033491906116f0565b61079d565b005b6103436108fd565b604051610350919061163f565b60405180910390f35b61036161093a565b60405161036e91906118f4565b60405180910390f35b61037f61095f565b60405161038c9190611748565b60405180910390f35b61039d610966565b6040516103aa91906117c3565b60405180910390f35b6103cd60048036038101906103c89190611761565b61096d565b6040516103da919061179b565b60405180910390f35b6103eb6109b2565b005b6103f56109c5565b604051610402919061192d565b60405180910390f35b6104136109ea565b60405161042091906117c3565b60405180910390f35b610431610a12565b60405161043e919061179b565b60405180910390f35b61044f610a20565b60405161045c919061163f565b60405180910390f35b61047f600480360381019061047a91906116f0565b610ab0565b60405161048c9190611748565b60405180910390f35b61049d610bf0565b6040516104aa91906117c3565b60405180910390f35b6104cd60048036038101906104c89190611946565b610bf7565b6040516104da919061179b565b60405180910390f35b6104fd60048036038101906104f89190611761565b610c79565b60405161050a9190611748565b60405180910390f35b61051b610d1a565b604051610528919061179b565b60405180910390f35b61054b60048036038101906105469190611761565b610dae565b005b60606003805461055c906119b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610588906119b1565b80156105d35780601f106105aa576101008083540402835291602001916105d3565b820191905f5260205f20905b8154815290600101906020018083116105b657829003601f168201915b5050505050905090565b5f5f6105e7610e32565b90506105f4818585610e39565b600191505092915050565b5f6106098261096d565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836856040518263ffffffff1660e01b815260040161068491906117c3565b602060405180830381865afa15801561069f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c39190611a0b565b15610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611a80565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611ae8565b60405180910390fd5b610762848484610e4b565b90509392505050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f5f905090565b6107a5610e79565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633af32abf836040518263ffffffff1660e01b81526004016107ff91906117c3565b602060405180830381865afa15801561081a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083e9190611a0b565b61087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490611b50565b60405180910390fd5b6969e10de76676d0800000816006546108969190611b9b565b11156108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce90611c18565b60405180910390fd5b6108e18282610f00565b8060065f8282546108f29190611b9b565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6109ba610e79565b6109c35f610f7f565b565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6969e10de76676d080000081565b606060048054610a2f906119b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5b906119b1565b8015610aa65780601f10610a7d57610100808354040283529160200191610aa6565b820191905f5260205f20905b815481529060010190602001808311610a8957829003601f168201915b5050505050905090565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836336040518263ffffffff1660e01b8152600401610b0b91906117c3565b602060405180830381865afa158015610b26573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611a0b565b15610b8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8190611a80565b60405180910390fd5b816fffffffffffffffffffffffffffffffff168214610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd590611ae8565b60405180910390fd5b610be88383611042565b905092915050565b5f30905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5839836836040518263ffffffff1660e01b8152600401610cd491906117c3565b602060405180830381865afa158015610cef573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d139190611a0b565b9050919050565b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb91d37e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d85573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da99190611c4a565b905090565b610db6610e79565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e26575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e1d91906117c3565b60405180910390fd5b610e2f81610f7f565b50565b5f33905090565b610e468383836001611064565b505050565b5f5f610e55610e32565b9050610e62858285611233565b610e6d8585856112c6565b60019150509392505050565b610e81610e32565b73ffffffffffffffffffffffffffffffffffffffff16610e9f6109ea565b73ffffffffffffffffffffffffffffffffffffffff1614610efe57610ec2610e32565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef591906117c3565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f70575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f6791906117c3565b60405180910390fd5b610f7b5f83836113b6565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f61104c610e32565b90506110598185856112c6565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110d4575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110cb91906117c3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161113b91906117c3565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561122d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611224919061179b565b60405180910390a35b50505050565b5f61123e8484610bf7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112c057818110156112b1578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112a893929190611c75565b60405180910390fd5b6112bf84848484035f611064565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611336575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161132d91906117c3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161139d91906117c3565b60405180910390fd5b6113b18383836113b6565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611406578060025f8282546113fa9190611b9b565b925050819055506114d4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561148f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148693929190611c75565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361151b578060025f8282540392505081905550611565565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115c2919061179b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611611826115cf565b61161b81856115d9565b935061162b8185602086016115e9565b611634816115f7565b840191505092915050565b5f6020820190508181035f8301526116578184611607565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61168c82611663565b9050919050565b61169c81611682565b81146116a6575f5ffd5b50565b5f813590506116b781611693565b92915050565b5f819050919050565b6116cf816116bd565b81146116d9575f5ffd5b50565b5f813590506116ea816116c6565b92915050565b5f5f604083850312156117065761170561165f565b5b5f611713858286016116a9565b9250506020611724858286016116dc565b9150509250929050565b5f8115159050919050565b6117428161172e565b82525050565b5f60208201905061175b5f830184611739565b92915050565b5f602082840312156117765761177561165f565b5b5f611783848285016116a9565b91505092915050565b611795816116bd565b82525050565b5f6020820190506117ae5f83018461178c565b92915050565b6117bd81611682565b82525050565b5f6020820190506117d65f8301846117b4565b92915050565b5f5f5f606084860312156117f3576117f261165f565b5b5f611800868287016116a9565b9350506020611811868287016116a9565b9250506040611822868287016116dc565b9150509250925092565b5f819050919050565b5f61184f61184a61184584611663565b61182c565b611663565b9050919050565b5f61186082611835565b9050919050565b5f61187182611856565b9050919050565b61188181611867565b82525050565b5f60208201905061189a5f830184611878565b92915050565b5f60ff82169050919050565b6118b5816118a0565b82525050565b5f6020820190506118ce5f8301846118ac565b92915050565b5f6118de82611856565b9050919050565b6118ee816118d4565b82525050565b5f6020820190506119075f8301846118e5565b92915050565b5f61191782611856565b9050919050565b6119278161190d565b82525050565b5f6020820190506119405f83018461191e565b92915050565b5f5f6040838503121561195c5761195b61165f565b5b5f611969858286016116a9565b925050602061197a858286016116a9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119c857607f821691505b6020821081036119db576119da611984565b5b50919050565b6119ea8161172e565b81146119f4575f5ffd5b50565b5f81519050611a05816119e1565b92915050565b5f60208284031215611a2057611a1f61165f565b5b5f611a2d848285016119f7565b91505092915050565b7f53656e6465722069732066726f7a656e000000000000000000000000000000005f82015250565b5f611a6a6010836115d9565b9150611a7582611a36565b602082019050919050565b5f6020820190508181035f830152611a9781611a5e565b9050919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611ad26019836115d9565b9150611add82611a9e565b602082019050919050565b5f6020820190508181035f830152611aff81611ac6565b9050919050565b7f4e6f742077686974656c697374656400000000000000000000000000000000005f82015250565b5f611b3a600f836115d9565b9150611b4582611b06565b602082019050919050565b5f6020820190508181035f830152611b6781611b2e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ba5826116bd565b9150611bb0836116bd565b9250828201905080821115611bc857611bc7611b6e565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611c026015836115d9565b9150611c0d82611bce565b602082019050919050565b5f6020820190508181035f830152611c2f81611bf6565b9050919050565b5f81519050611c44816116c6565b92915050565b5f60208284031215611c5f57611c5e61165f565b5b5f611c6c84828501611c36565b91505092915050565b5f606082019050611c885f8301866117b4565b611c95602083018561178c565b611ca2604083018461178c565b94935050505056fea264697066735822122071f06dd889a253c53401ead606c64d3bcefb97a1fcab2428ba5cb243c29c98a664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x531 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x495 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x84900B04 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x429 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x313CE567 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x56DD475A EQ PUSH2 0x359 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x2E3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x277 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EB PUSH2 0x790 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x309 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0x79D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37F PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16F0 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55C SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x588 SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5E7 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F4 DUP2 DUP6 DUP6 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x609 DUP3 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST ISZERO PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x762 DUP5 DUP5 DUP5 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3AF32ABF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x874 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 PUSH1 0x6 SLOAD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CE SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E1 DUP3 DUP3 PUSH2 0xF00 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x9C3 PUSH0 PUSH2 0xF7F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2F SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x19B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB26 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST ISZERO PUSH2 0xB8A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB81 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD5 SWAP1 PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE8 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE5839836 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCEF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x1A0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEB91D37E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD85 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x1C4A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDB6 PUSH2 0xE79 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xF7F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE46 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1064 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE55 PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0xE62 DUP6 DUP3 DUP6 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0xE6D DUP6 DUP6 DUP6 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE81 PUSH2 0xE32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9F PUSH2 0x9EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFE JUMPI PUSH2 0xEC2 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF70 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF67 SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF7B PUSH0 DUP4 DUP4 PUSH2 0x13B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x104C PUSH2 0xE32 JUMP JUMPDEST SWAP1 POP PUSH2 0x1059 DUP2 DUP6 DUP6 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x122D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x123E DUP5 DUP5 PUSH2 0xBF7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x12C0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12B1 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12BF DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1064 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1336 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139D SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B1 DUP4 DUP4 DUP4 PUSH2 0x13B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1406 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13FA SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14D4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x148F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1565 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x161B DUP2 DUP6 PUSH2 0x15D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x162B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x15F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1657 DUP2 DUP5 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x168C DUP3 PUSH2 0x1663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169C DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP2 EQ PUSH2 0x16A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B7 DUP2 PUSH2 0x1693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP2 EQ PUSH2 0x16D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EA DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1713 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1724 DUP6 DUP3 DUP7 ADD PUSH2 0x16DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1742 DUP2 PUSH2 0x172E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175B PUSH0 DUP4 ADD DUP5 PUSH2 0x1739 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1775 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1783 DUP5 DUP3 DUP6 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1795 DUP2 PUSH2 0x16BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17AE PUSH0 DUP4 ADD DUP5 PUSH2 0x178C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1682 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D6 PUSH0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1800 DUP7 DUP3 DUP8 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1811 DUP7 DUP3 DUP8 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1822 DUP7 DUP3 DUP8 ADD PUSH2 0x16DC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184F PUSH2 0x184A PUSH2 0x1845 DUP5 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0x182C JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1860 DUP3 PUSH2 0x1835 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x1867 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189A PUSH0 DUP4 ADD DUP5 PUSH2 0x1878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B5 DUP2 PUSH2 0x18A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CE PUSH0 DUP4 ADD DUP5 PUSH2 0x18AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18DE DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EE DUP2 PUSH2 0x18D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1907 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1917 DUP3 PUSH2 0x1856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1927 DUP2 PUSH2 0x190D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1940 PUSH0 DUP4 ADD DUP5 PUSH2 0x191E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1969 DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19DB JUMPI PUSH2 0x19DA PUSH2 0x1984 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x172E JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A05 DUP2 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A20 JUMPI PUSH2 0x1A1F PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2D DUP5 DUP3 DUP6 ADD PUSH2 0x19F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656E6465722069732066726F7A656E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6A PUSH1 0x10 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A75 DUP3 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A97 DUP2 PUSH2 0x1A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD2 PUSH1 0x19 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADD DUP3 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742077686974656C69737465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B3A PUSH1 0xF DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B45 DUP3 PUSH2 0x1B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B67 DUP2 PUSH2 0x1B2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BA5 DUP3 PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP PUSH2 0x1BB0 DUP4 PUSH2 0x16BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BC8 JUMPI PUSH2 0x1BC7 PUSH2 0x1B6E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C02 PUSH1 0x15 DUP4 PUSH2 0x15D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C2F DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C44 DUP2 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5F JUMPI PUSH2 0x1C5E PUSH2 0x165F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C6C DUP5 DUP3 DUP6 ADD PUSH2 0x1C36 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C88 PUSH0 DUP4 ADD DUP7 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x1C95 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1CA2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x178C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xF06DD889A253C53401EAD606C64D3BCEFB97 LOG1 0xFC 0xAB 0x24 0x28 0xBA TLOAD 0xB2 NUMBER 0xC2 SWAP13 SWAP9 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "54898:5532:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12629:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14848:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58013:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58707:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59804:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13699:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;57496:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55266:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55037:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60338:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;56374:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58459:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;55188:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59193:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58947:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13854:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24014:101;;;:::i;:::-;;55110:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23359:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54950:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12831:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;56898:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58247:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14401:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;59450;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60049:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24264:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12629:89;12674:13;12706:5;12699:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12629:89;:::o;14848:186::-;14921:4;14937:13;14953:12;:10;:12::i;:::-;14937:28;;14975:31;14984:5;14991:7;15000:5;14975:8;:31::i;:::-;15023:4;15016:11;;;14848:186;;;;:::o;58013:108::-;58073:7;58099:15;58109:4;58099:9;:15::i;:::-;58092:22;;58013:108;;;:::o;58707:103::-;58767:7;58801:1;58786:17;;58707:103;:::o;59804:112::-;59882:7;59908:1;59901:8;;59804:112;;;:::o;13699:97::-;13751:7;13777:12;;13770:19;;13699:97;:::o;57496:329::-;57594:4;57619:17;;;;;;;;;;;:26;;;57646:6;57619:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57618:35;57610:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;57718:6;57702:24;;57692:6;:34;57684:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;57773:45;57792:6;57800:9;57811:6;57773:18;:45::i;:::-;57766:52;;57496:329;;;;;:::o;55266:30::-;;;;;;;;;;;;;:::o;55037:27::-;;;;:::o;60338:90::-;60396:5;60420:1;60413:8;;60338:90;:::o;56374:281::-;23252:13;:11;:13::i;:::-;56453:17:::1;;;;;;;;;;;:31;;;56485:2;56453:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;56445:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;54989:16;56541:6;56526:12;;:21;;;;:::i;:::-;:37;;56518:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;56599:17;56605:2;56609:6;56599:5;:17::i;:::-;56642:6;56626:12;;:22;;;;;;;:::i;:::-;;;;;;;;56374:281:::0;;:::o;58459:97::-;58510:13;58535:14;;;;;;;;;;;;;;;;;;;58459:97;:::o;55188:34::-;;;;;;;;;;;;;:::o;59193:86::-;59243:4;59266:5;59259:12;;59193:86;:::o;58947:97::-;59001:7;59035:1;59020:17;;58947:97;:::o;13854:116::-;13919:7;13945:9;:18;13955:7;13945:18;;;;;;;;;;;;;;;;13938:25;;13854:116;;;:::o;24014:101::-;23252:13;:11;:13::i;:::-;24078:30:::1;24105:1;24078:18;:30::i;:::-;24014:101::o:0;55110:34::-;;;;;;;;;;;;;:::o;23359:85::-;23405:7;23431:6;;;;;;;;;;;23424:13;;23359:85;:::o;54950:55::-;54989:16;54950:55;:::o;12831:93::-;12878:13;12910:7;12903:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12831:93;:::o;56898:301::-;56976:4;57001:17;;;;;;;;;;;:26;;;57028:10;57001:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57000:39;56992:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;57104:6;57088:24;;57078:6;:34;57070:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;57159:33;57174:9;57185:6;57159:14;:33::i;:::-;57152:40;;56898:301;;;;:::o;58247:99::-;58300:7;58334:4;58319:20;;58247:99;:::o;14401:140::-;14481:7;14507:11;:18;14519:5;14507:18;;;;;;;;;;;;;;;:27;14526:7;14507:27;;;;;;;;;;;;;;;;14500:34;;14401:140;;;;:::o;59450:::-;59521:4;59544:17;;;;;;;;;;;:26;;;59571:11;59544:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;59537:46;;59450:140;;;:::o;60049:112::-;60099:7;60125:11;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60118:36;;60049:112;:::o;24264:215::-;23252:13;:11;:13::i;:::-;24368:1:::1;24348:22;;:8;:22;;::::0;24344:91:::1;;24421:1;24393:31;;;;;;;;;;;:::i;:::-;;;;;;;;24344:91;24444:28;24463:8;24444:18;:28::i;:::-;24264:215:::0;:::o;4177:96::-;4230:7;4256:10;4249:17;;4177:96;:::o;19576:128::-;19660:37;19669:5;19676:7;19685:5;19692:4;19660:8;:37::i;:::-;19576:128;;;:::o;15626:244::-;15713:4;15729:15;15747:12;:10;:12::i;:::-;15729:30;;15769:37;15785:4;15791:7;15800:5;15769:15;:37::i;:::-;15816:26;15826:4;15832:2;15836:5;15816:9;:26::i;:::-;15859:4;15852:11;;;15626:244;;;;;:::o;23517:162::-;23587:12;:10;:12::i;:::-;23576:23;;:7;:5;:7::i;:::-;:23;;;23572:101;;23649:12;:10;:12::i;:::-;23622:40;;;;;;;;;;;:::i;:::-;;;;;;;;23572:101;23517:162::o;18308:208::-;18397:1;18378:21;;:7;:21;;;18374:91;;18451:1;18422:32;;;;;;;;;;;:::i;:::-;;;;;;;;18374:91;18474:35;18490:1;18494:7;18503:5;18474:7;:35::i;:::-;18308:208;;:::o;24633:187::-;24706:16;24725:6;;;;;;;;;;;24706:25;;24750:8;24741:6;;:17;;;;;;;;;;;;;;;;;;24804:8;24773:40;;24794:8;24773:40;;;;;;;;;;;;24696:124;24633:187;:::o;14165:178::-;14234:4;14250:13;14266:12;:10;:12::i;:::-;14250:28;;14288:27;14298:5;14305:2;14309:5;14288:9;:27::i;:::-;14332:4;14325:11;;;14165:178;;;;:::o;20551:432::-;20680:1;20663:19;;:5;:19;;;20659:89;;20734:1;20705:32;;;;;;;;;;;:::i;:::-;;;;;;;;20659:89;20780:1;20761:21;;:7;:21;;;20757:90;;20833:1;20805:31;;;;;;;;;;;:::i;:::-;;;;;;;;20757:90;20886:5;20856:11;:18;20868:5;20856:18;;;;;;;;;;;;;;;:27;20875:7;20856:27;;;;;;;;;;;;;;;:35;;;;20905:9;20901:76;;;20951:7;20935:31;;20944:5;20935:31;;;20960:5;20935:31;;;;;;:::i;:::-;;;;;;;;20901:76;20551:432;;;;:::o;21265:476::-;21364:24;21391:25;21401:5;21408:7;21391:9;:25::i;:::-;21364:52;;21449:17;21430:16;:36;21426:309;;;21505:5;21486:16;:24;21482:130;;;21564:7;21573:16;21591:5;21537:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21482:130;21653:57;21662:5;21669:7;21697:5;21678:16;:24;21704:5;21653:8;:57::i;:::-;21426:309;21354:387;21265:476;;;:::o;16243:300::-;16342:1;16326:18;;:4;:18;;;16322:86;;16394:1;16367:30;;;;;;;;;;;:::i;:::-;;;;;;;;16322:86;16435:1;16421:16;;:2;:16;;;16417:86;;16489:1;16460:32;;;;;;;;;;;:::i;:::-;;;;;;;;16417:86;16512:24;16520:4;16526:2;16530:5;16512:7;:24::i;:::-;16243:300;;;:::o;16858:1107::-;16963:1;16947:18;;:4;:18;;;16943:540;;17099:5;17083:12;;:21;;;;;;;:::i;:::-;;;;;;;;16943:540;;;17135:19;17157:9;:15;17167:4;17157:15;;;;;;;;;;;;;;;;17135:37;;17204:5;17190:11;:19;17186:115;;;17261:4;17267:11;17280:5;17236:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17186:115;17453:5;17439:11;:19;17421:9;:15;17431:4;17421:15;;;;;;;;;;;;;;;:37;;;;17121:362;16943:540;17511:1;17497:16;;:2;:16;;;17493:425;;17676:5;17660:12;;:21;;;;;;;;;;;17493:425;;;17888:5;17871:9;:13;17881:2;17871:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17493:425;17948:2;17933:25;;17942:4;17933:25;;;17952:5;17933:25;;;;;;:::i;:::-;;;;;;;;16858:1107;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:118::-;4113:24;4131:5;4113:24;:::i;:::-;4108:3;4101:37;4026:118;;:::o;4150:222::-;4243:4;4281:2;4270:9;4266:18;4258:26;;4294:71;4362:1;4351:9;4347:17;4338:6;4294:71;:::i;:::-;4150:222;;;;:::o;4378:619::-;4455:6;4463;4471;4520:2;4508:9;4499:7;4495:23;4491:32;4488:119;;;4526:79;;:::i;:::-;4488:119;4646:1;4671:53;4716:7;4707:6;4696:9;4692:22;4671:53;:::i;:::-;4661:63;;4617:117;4773:2;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4744:118;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;4378:619;;;;;:::o;5003:60::-;5031:3;5052:5;5045:12;;5003:60;;;:::o;5069:142::-;5119:9;5152:53;5170:34;5179:24;5197:5;5179:24;:::i;:::-;5170:34;:::i;:::-;5152:53;:::i;:::-;5139:66;;5069:142;;;:::o;5217:126::-;5267:9;5300:37;5331:5;5300:37;:::i;:::-;5287:50;;5217:126;;;:::o;5349:146::-;5419:9;5452:37;5483:5;5452:37;:::i;:::-;5439:50;;5349:146;;;:::o;5501:171::-;5608:57;5659:5;5608:57;:::i;:::-;5603:3;5596:70;5501:171;;:::o;5678:262::-;5791:4;5829:2;5818:9;5814:18;5806:26;;5842:91;5930:1;5919:9;5915:17;5906:6;5842:91;:::i;:::-;5678:262;;;;:::o;5946:86::-;5981:7;6021:4;6014:5;6010:16;5999:27;;5946:86;;;:::o;6038:112::-;6121:22;6137:5;6121:22;:::i;:::-;6116:3;6109:35;6038:112;;:::o;6156:214::-;6245:4;6283:2;6272:9;6268:18;6260:26;;6296:67;6360:1;6349:9;6345:17;6336:6;6296:67;:::i;:::-;6156:214;;;;:::o;6376:144::-;6444:9;6477:37;6508:5;6477:37;:::i;:::-;6464:50;;6376:144;;;:::o;6526:167::-;6631:55;6680:5;6631:55;:::i;:::-;6626:3;6619:68;6526:167;;:::o;6699:258::-;6810:4;6848:2;6837:9;6833:18;6825:26;;6861:89;6947:1;6936:9;6932:17;6923:6;6861:89;:::i;:::-;6699:258;;;;:::o;6963:143::-;7030:9;7063:37;7094:5;7063:37;:::i;:::-;7050:50;;6963:143;;;:::o;7112:165::-;7216:54;7264:5;7216:54;:::i;:::-;7211:3;7204:67;7112:165;;:::o;7283:256::-;7393:4;7431:2;7420:9;7416:18;7408:26;;7444:88;7529:1;7518:9;7514:17;7505:6;7444:88;:::i;:::-;7283:256;;;;:::o;7545:474::-;7613:6;7621;7670:2;7658:9;7649:7;7645:23;7641:32;7638:119;;;7676:79;;:::i;:::-;7638:119;7796:1;7821:53;7866:7;7857:6;7846:9;7842:22;7821:53;:::i;:::-;7811:63;;7767:117;7923:2;7949:53;7994:7;7985:6;7974:9;7970:22;7949:53;:::i;:::-;7939:63;;7894:118;7545:474;;;;;:::o;8025:180::-;8073:77;8070:1;8063:88;8170:4;8167:1;8160:15;8194:4;8191:1;8184:15;8211:320;8255:6;8292:1;8286:4;8282:12;8272:22;;8339:1;8333:4;8329:12;8360:18;8350:81;;8416:4;8408:6;8404:17;8394:27;;8350:81;8478:2;8470:6;8467:14;8447:18;8444:38;8441:84;;8497:18;;:::i;:::-;8441:84;8262:269;8211:320;;;:::o;8537:116::-;8607:21;8622:5;8607:21;:::i;:::-;8600:5;8597:32;8587:60;;8643:1;8640;8633:12;8587:60;8537:116;:::o;8659:137::-;8713:5;8744:6;8738:13;8729:22;;8760:30;8784:5;8760:30;:::i;:::-;8659:137;;;;:::o;8802:345::-;8869:6;8918:2;8906:9;8897:7;8893:23;8889:32;8886:119;;;8924:79;;:::i;:::-;8886:119;9044:1;9069:61;9122:7;9113:6;9102:9;9098:22;9069:61;:::i;:::-;9059:71;;9015:125;8802:345;;;;:::o;9153:166::-;9293:18;9289:1;9281:6;9277:14;9270:42;9153:166;:::o;9325:366::-;9467:3;9488:67;9552:2;9547:3;9488:67;:::i;:::-;9481:74;;9564:93;9653:3;9564:93;:::i;:::-;9682:2;9677:3;9673:12;9666:19;;9325:366;;;:::o;9697:419::-;9863:4;9901:2;9890:9;9886:18;9878:26;;9950:9;9944:4;9940:20;9936:1;9925:9;9921:17;9914:47;9978:131;10104:4;9978:131;:::i;:::-;9970:139;;9697:419;;;:::o;10122:175::-;10262:27;10258:1;10250:6;10246:14;10239:51;10122:175;:::o;10303:366::-;10445:3;10466:67;10530:2;10525:3;10466:67;:::i;:::-;10459:74;;10542:93;10631:3;10542:93;:::i;:::-;10660:2;10655:3;10651:12;10644:19;;10303:366;;;:::o;10675:419::-;10841:4;10879:2;10868:9;10864:18;10856:26;;10928:9;10922:4;10918:20;10914:1;10903:9;10899:17;10892:47;10956:131;11082:4;10956:131;:::i;:::-;10948:139;;10675:419;;;:::o;11100:165::-;11240:17;11236:1;11228:6;11224:14;11217:41;11100:165;:::o;11271:366::-;11413:3;11434:67;11498:2;11493:3;11434:67;:::i;:::-;11427:74;;11510:93;11599:3;11510:93;:::i;:::-;11628:2;11623:3;11619:12;11612:19;;11271:366;;;:::o;11643:419::-;11809:4;11847:2;11836:9;11832:18;11824:26;;11896:9;11890:4;11886:20;11882:1;11871:9;11867:17;11860:47;11924:131;12050:4;11924:131;:::i;:::-;11916:139;;11643:419;;;:::o;12068:180::-;12116:77;12113:1;12106:88;12213:4;12210:1;12203:15;12237:4;12234:1;12227:15;12254:191;12294:3;12313:20;12331:1;12313:20;:::i;:::-;12308:25;;12347:20;12365:1;12347:20;:::i;:::-;12342:25;;12390:1;12387;12383:9;12376:16;;12411:3;12408:1;12405:10;12402:36;;;12418:18;;:::i;:::-;12402:36;12254:191;;;;:::o;12451:171::-;12591:23;12587:1;12579:6;12575:14;12568:47;12451:171;:::o;12628:366::-;12770:3;12791:67;12855:2;12850:3;12791:67;:::i;:::-;12784:74;;12867:93;12956:3;12867:93;:::i;:::-;12985:2;12980:3;12976:12;12969:19;;12628:366;;;:::o;13000:419::-;13166:4;13204:2;13193:9;13189:18;13181:26;;13253:9;13247:4;13243:20;13239:1;13228:9;13224:17;13217:47;13281:131;13407:4;13281:131;:::i;:::-;13273:139;;13000:419;;;:::o;13425:143::-;13482:5;13513:6;13507:13;13498:22;;13529:33;13556:5;13529:33;:::i;:::-;13425:143;;;;:::o;13574:351::-;13644:6;13693:2;13681:9;13672:7;13668:23;13664:32;13661:119;;;13699:79;;:::i;:::-;13661:119;13819:1;13844:64;13900:7;13891:6;13880:9;13876:22;13844:64;:::i;:::-;13834:74;;13790:128;13574:351;;;;:::o;13931:442::-;14080:4;14118:2;14107:9;14103:18;14095:26;;14131:71;14199:1;14188:9;14184:17;14175:6;14131:71;:::i;:::-;14212:72;14280:2;14269:9;14265:18;14256:6;14212:72;:::i;:::-;14294;14362:2;14351:9;14347:18;14338:6;14294:72;:::i;:::-;13931:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1478400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "436",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"balanceOfUser(address)": "2938",
								"compliance()": "447",
								"decimals()": "382",
								"freezableContract()": "infinite",
								"getCurrentPrice()": "infinite",
								"getFrozenTokens(address)": "752",
								"identityRegistry()": "469",
								"isFrozen(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"mintedAmount()": "2515",
								"name()": "infinite",
								"onchainID()": "468",
								"owner()": "2604",
								"paused()": "383",
								"priceOracle()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"version()": "infinite",
								"whitelistContract()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55589,
									"end": 56168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55698,
									"end": 55708,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "PUSH",
									"source": 0,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12525,
									"end": 12530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12522,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12517,
									"end": 12530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12517,
									"end": 12530,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12550,
									"end": 12557,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12547,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12540,
									"end": 12557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12540,
									"end": 12557,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12451,
									"end": 12564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23018,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22994,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22994,
									"end": 23020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22994,
									"end": 23006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22994,
									"end": 23020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22994,
									"end": 23020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22994,
									"end": 23020,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22990,
									"end": 23085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22990,
									"end": 23085,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23071,
									"end": 23072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23043,
									"end": 23074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23043,
									"end": 23074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22990,
									"end": 23085,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22990,
									"end": 23085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23113,
									"end": 23125,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23094,
									"end": 23112,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23094,
									"end": 23112,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23094,
									"end": 23126,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23094,
									"end": 23126,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23094,
									"end": 23126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22946,
									"end": 23133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 55745,
									"end": 55760,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "CREATE",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55745,
									"end": 55760,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 55725,
									"end": 55742,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55725,
									"end": 55760,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 55790,
									"end": 55805,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "CREATE",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55790,
									"end": 55805,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55787,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 55770,
									"end": 55787,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55770,
									"end": 55805,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55845,
									"end": 55857,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55829,
									"end": 55858,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 55829,
									"end": 55858,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "CREATE",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55829,
									"end": 55858,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 55815,
									"end": 55826,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55815,
									"end": 55858,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55897,
									"end": 55898,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55877,
									"end": 55887,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55877,
									"end": 55894,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55877,
									"end": 55898,
									"modifierDepth": 2,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 55869,
									"end": 55944,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 55869,
									"end": 55944,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55968,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55971,
									"end": 55972,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55959,
									"end": 55972,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55959,
									"end": 55972,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55978,
									"end": 55988,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55978,
									"end": 55995,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55974,
									"end": 55975,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55974,
									"end": 55995,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 56016,
									"end": 56033,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56048,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 56016,
									"end": 56048,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56048,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "E43252D7"
								},
								{
									"begin": 56049,
									"end": 56059,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 56060,
									"end": 56061,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 56049,
									"end": 56062,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56049,
									"end": 56062,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 56016,
									"end": 56063,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56016,
									"end": 56063,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55997,
									"end": 56000,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55954,
									"end": 56074,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56084,
									"end": 56115,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 56090,
									"end": 56100,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 54989,
									"end": 55005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 56084,
									"end": 56089,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 56084,
									"end": 56089,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 56084,
									"end": 56089,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 56084,
									"end": 56115,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 56084,
									"end": 56115,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 56084,
									"end": 56115,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 56084,
									"end": 56115,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 56084,
									"end": 56115,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55589,
									"end": 56168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24633,
									"end": 24820,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24633,
									"end": 24820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24706,
									"end": 24722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24725,
									"end": 24731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24706,
									"end": 24731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24706,
									"end": 24731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24750,
									"end": 24758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24747,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24741,
									"end": 24747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24741,
									"end": 24758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24804,
									"end": 24812,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24794,
									"end": 24802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24773,
									"end": 24813,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24696,
									"end": 24820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24633,
									"end": 24820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24633,
									"end": 24820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18397,
									"end": 18398,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18385,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18378,
									"end": 18399,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18451,
									"end": 18452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18422,
									"end": 18454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18422,
									"end": 18454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 18374,
									"end": 18465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 18490,
									"end": 18491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18494,
									"end": 18501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18503,
									"end": 18508,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 18474,
									"end": 18481,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18474,
									"end": 18481,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 18474,
									"end": 18509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18308,
									"end": 18516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16963,
									"end": 16964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16947,
									"end": 16951,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16947,
									"end": 16965,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17099,
									"end": 17104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17095,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17083,
									"end": 17095,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17083,
									"end": 17104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17083,
									"end": 17104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17135,
									"end": 17154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17157,
									"end": 17166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17167,
									"end": 17171,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17157,
									"end": 17172,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17135,
									"end": 17172,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17135,
									"end": 17172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17204,
									"end": 17209,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17190,
									"end": 17209,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17261,
									"end": 17265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17280,
									"end": 17285,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 17236,
									"end": 17286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17286,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 17186,
									"end": 17301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17453,
									"end": 17458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17450,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17431,
									"end": 17435,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17421,
									"end": 17436,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17421,
									"end": 17458,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17121,
									"end": 17483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "tag",
									"source": 0,
									"value": "54"
								},
								{
									"begin": 16943,
									"end": 17483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17511,
									"end": 17512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17499,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17513,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17676,
									"end": 17681,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17672,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17660,
									"end": 17672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17660,
									"end": 17681,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17888,
									"end": 17893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17881,
									"end": 17883,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17871,
									"end": 17893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 17493,
									"end": 17918,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17948,
									"end": 17950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17942,
									"end": 17946,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17952,
									"end": 17957,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 17933,
									"end": 17958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17933,
									"end": 17958,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16858,
									"end": 17965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000002"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000002"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000003"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000003"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3391,
									"end": 3397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3399,
									"end": 3405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3448,
									"end": 3450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3436,
									"end": 3445,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3427,
									"end": 3434,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3446,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3419,
									"end": 3451,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3535,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 3416,
									"end": 3535,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3454,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 3454,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3454,
									"end": 3533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3454,
									"end": 3533,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 3454,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3535,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 3416,
									"end": 3535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3584,
									"end": 3593,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3580,
									"end": 3597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3574,
									"end": 3598,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3625,
									"end": 3643,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3617,
									"end": 3623,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3614,
									"end": 3644,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3611,
									"end": 3728,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3611,
									"end": 3728,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 3611,
									"end": 3728,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3647,
									"end": 3726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 3647,
									"end": 3726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3611,
									"end": 3728,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 3611,
									"end": 3728,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3752,
									"end": 3841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 3833,
									"end": 3840,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3824,
									"end": 3830,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3813,
									"end": 3822,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3831,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3752,
									"end": 3841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3752,
									"end": 3841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3752,
									"end": 3841,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 3752,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3841,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3841,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3545,
									"end": 3851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3890,
									"end": 3892,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3916,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 3972,
									"end": 3979,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3963,
									"end": 3969,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3952,
									"end": 3961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3948,
									"end": 3970,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3916,
									"end": 3980,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3916,
									"end": 3980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3916,
									"end": 3980,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 3916,
									"end": 3980,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3906,
									"end": 3980,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3906,
									"end": 3980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3861,
									"end": 3990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4102,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4003,
									"end": 4102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4055,
									"end": 4061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4089,
									"end": 4094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4083,
									"end": 4095,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4073,
									"end": 4095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4073,
									"end": 4095,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4102,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4108,
									"end": 4288,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4108,
									"end": 4288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4156,
									"end": 4233,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4153,
									"end": 4154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4146,
									"end": 4234,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4253,
									"end": 4257,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4250,
									"end": 4251,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4243,
									"end": 4258,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4277,
									"end": 4281,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4274,
									"end": 4275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4267,
									"end": 4282,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4614,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4294,
									"end": 4614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4338,
									"end": 4344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4375,
									"end": 4376,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4369,
									"end": 4373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4377,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4355,
									"end": 4377,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4355,
									"end": 4377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4422,
									"end": 4423,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4416,
									"end": 4420,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4412,
									"end": 4424,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4443,
									"end": 4461,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4433,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 4433,
									"end": 4514,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4499,
									"end": 4503,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4491,
									"end": 4497,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4487,
									"end": 4504,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4477,
									"end": 4504,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4477,
									"end": 4504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4433,
									"end": 4514,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 4433,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4563,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4553,
									"end": 4559,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4550,
									"end": 4564,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4530,
									"end": 4548,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4527,
									"end": 4565,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 4524,
									"end": 4608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4580,
									"end": 4598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 4580,
									"end": 4598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4608,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 4524,
									"end": 4608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4345,
									"end": 4614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4614,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4614,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4614,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4294,
									"end": 4614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4620,
									"end": 4761,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4620,
									"end": 4761,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4692,
									"end": 4695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4684,
									"end": 4695,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4684,
									"end": 4695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4718,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4713,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4705,
									"end": 4719,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4749,
									"end": 4753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4746,
									"end": 4747,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 4754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 4754,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4620,
									"end": 4761,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4620,
									"end": 4761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4620,
									"end": 4761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4620,
									"end": 4761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4860,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4767,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4810,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4851,
									"end": 4853,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4846,
									"end": 4848,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4839,
									"end": 4844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4835,
									"end": 4849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4831,
									"end": 4854,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4821,
									"end": 4854,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4821,
									"end": 4854,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4860,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4860,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4860,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4767,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4910,
									"end": 4918,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4960,
									"end": 4965,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4958,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4966,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4929,
									"end": 4966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4929,
									"end": 4966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4866,
									"end": 4973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5048,
									"end": 5054,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5098,
									"end": 5099,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5086,
									"end": 5096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5082,
									"end": 5100,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5121,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 5151,
									"end": 5217,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5140,
									"end": 5149,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5121,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5121,
									"end": 5218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5121,
									"end": 5218,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 5121,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5239,
									"end": 5278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5269,
									"end": 5277,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5258,
									"end": 5267,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5239,
									"end": 5278,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5239,
									"end": 5278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5239,
									"end": 5278,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5239,
									"end": 5278,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5227,
									"end": 5278,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 5227,
									"end": 5278,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5311,
									"end": 5315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 5317,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5287,
									"end": 5317,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5287,
									"end": 5317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5350,
									"end": 5358,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5346,
									"end": 5365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5344,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5366,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5366,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5055,
									"end": 5372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5055,
									"end": 5372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5455,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5378,
									"end": 5455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5415,
									"end": 5422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5444,
									"end": 5449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5433,
									"end": 5449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5433,
									"end": 5449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5455,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5461,
									"end": 5521,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 5461,
									"end": 5521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5489,
									"end": 5492,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5510,
									"end": 5515,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5461,
									"end": 5521,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5461,
									"end": 5521,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5461,
									"end": 5521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5461,
									"end": 5521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5527,
									"end": 5669,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5527,
									"end": 5669,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5577,
									"end": 5586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5610,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 5628,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 5637,
									"end": 5661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 5655,
									"end": 5660,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5637,
									"end": 5661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5637,
									"end": 5661,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 5637,
									"end": 5661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5628,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 5628,
									"end": 5662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5628,
									"end": 5662,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 5628,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5610,
									"end": 5663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5610,
									"end": 5663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5610,
									"end": 5663,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 5610,
									"end": 5663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5597,
									"end": 5663,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5597,
									"end": 5663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5527,
									"end": 5669,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5527,
									"end": 5669,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5527,
									"end": 5669,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5527,
									"end": 5669,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5750,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5675,
									"end": 5750,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5718,
									"end": 5721,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5739,
									"end": 5744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5732,
									"end": 5744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5732,
									"end": 5744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5750,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5750,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5750,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5675,
									"end": 5750,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 6025,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 5756,
									"end": 6025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 5905,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 5897,
									"end": 5904,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 5905,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 5866,
									"end": 5905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5866,
									"end": 5905,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 5866,
									"end": 5905,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5927,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 5976,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6000,
									"end": 6016,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5976,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 5976,
									"end": 6017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5976,
									"end": 6017,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 5976,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5968,
									"end": 5974,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5961,
									"end": 5965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5966,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5927,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5927,
									"end": 6018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5927,
									"end": 6018,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 5927,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5914,
									"end": 6019,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 6025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 6025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 6025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 6025,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 6025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6031,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 6031,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6076,
									"end": 6079,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6090,
									"end": 6098,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6090,
									"end": 6098,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6031,
									"end": 6104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6031,
									"end": 6104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6110,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 6110,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6187,
									"end": 6219,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6187,
									"end": 6219,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 6187,
									"end": 6219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6187,
									"end": 6219,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6187,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6286,
									"end": 6292,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6278,
									"end": 6284,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6276,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 6228,
									"end": 6293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6228,
									"end": 6293,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6228,
									"end": 6293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6163,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6110,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6110,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6110,
									"end": 6299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6305,
									"end": 6491,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 6305,
									"end": 6491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6385,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6372,
									"end": 6386,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6436,
									"end": 6475,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 6473,
									"end": 6474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6471,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6436,
									"end": 6475,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 6436,
									"end": 6475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6436,
									"end": 6475,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 6436,
									"end": 6475,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6409,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6402,
									"end": 6407,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6398,
									"end": 6411,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6389,
									"end": 6411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6389,
									"end": 6411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 6365,
									"end": 6485,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6305,
									"end": 6491,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6305,
									"end": 6491,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6305,
									"end": 6491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 7040,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 6497,
									"end": 7040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 6600,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6593,
									"end": 6596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6590,
									"end": 6601,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6587,
									"end": 7033,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6587,
									"end": 7033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 6587,
									"end": 7033,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 6670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 6664,
									"end": 6669,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 6670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 6632,
									"end": 6670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 6670,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 6632,
									"end": 6670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6716,
									"end": 6745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 6734,
									"end": 6744,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6716,
									"end": 6745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 6716,
									"end": 6745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6716,
									"end": 6745,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 6716,
									"end": 6745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6706,
									"end": 6714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6702,
									"end": 6746,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6899,
									"end": 6901,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6887,
									"end": 6897,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6884,
									"end": 6902,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6881,
									"end": 6930,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6881,
									"end": 6930,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6881,
									"end": 6930,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6920,
									"end": 6928,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6905,
									"end": 6928,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6905,
									"end": 6928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6881,
									"end": 6930,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6881,
									"end": 6930,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6943,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6999,
									"end": 7021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 7017,
									"end": 7020,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6999,
									"end": 7021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 6999,
									"end": 7021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6999,
									"end": 7021,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 6999,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6989,
									"end": 6997,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6985,
									"end": 7022,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6972,
									"end": 6983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6943,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 6943,
									"end": 7023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6943,
									"end": 7023,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6943,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6602,
									"end": 7033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6602,
									"end": 7033,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6587,
									"end": 7033,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 6587,
									"end": 7033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 7040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 7040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 7040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6497,
									"end": 7040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7100,
									"end": 7108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7150,
									"end": 7155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7144,
									"end": 7148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7140,
									"end": 7156,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7119,
									"end": 7156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7119,
									"end": 7156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7046,
									"end": 7163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7219,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7246,
									"end": 7297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 7294,
									"end": 7295,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7290,
									"end": 7296,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7282,
									"end": 7287,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7279,
									"end": 7280,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7275,
									"end": 7288,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 7246,
									"end": 7297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7246,
									"end": 7297,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 7246,
									"end": 7297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7242,
									"end": 7298,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7327,
									"end": 7331,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7317,
									"end": 7332,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7307,
									"end": 7332,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7307,
									"end": 7332,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7220,
									"end": 7338,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7419,
									"end": 7423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7565,
									"end": 7594,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 7590,
									"end": 7593,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7584,
									"end": 7588,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7565,
									"end": 7594,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 7565,
									"end": 7594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7565,
									"end": 7594,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 7565,
									"end": 7594,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7557,
									"end": 7594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7557,
									"end": 7594,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7627,
									"end": 7630,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7624,
									"end": 7625,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7620,
									"end": 7631,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7632,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7632,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7603,
									"end": 7632,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7343,
									"end": 7638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 9038,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7643,
									"end": 9038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 7797,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 7793,
									"end": 7796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 7797,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 7760,
									"end": 7797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 7797,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 7760,
									"end": 7797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7862,
									"end": 7880,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7854,
									"end": 7860,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7851,
									"end": 7881,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7848,
									"end": 7904,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7848,
									"end": 7904,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 7848,
									"end": 7904,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7884,
									"end": 7902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 7884,
									"end": 7902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 7884,
									"end": 7902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7884,
									"end": 7902,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 7884,
									"end": 7902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7848,
									"end": 7904,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 7848,
									"end": 7904,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7928,
									"end": 7966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 7960,
									"end": 7964,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7954,
									"end": 7965,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7928,
									"end": 7966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 7928,
									"end": 7966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7928,
									"end": 7966,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 7928,
									"end": 7966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8073,
									"end": 8079,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8065,
									"end": 8071,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8059,
									"end": 8063,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 8013,
									"end": 8080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8013,
									"end": 8080,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8013,
									"end": 8080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8107,
									"end": 8108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8131,
									"end": 8135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8118,
									"end": 8135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8118,
									"end": 8135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8163,
									"end": 8165,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8155,
									"end": 8161,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8152,
									"end": 8166,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8180,
									"end": 8181,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8837,
									"end": 8838,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8854,
									"end": 8860,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8851,
									"end": 8928,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8851,
									"end": 8928,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 8851,
									"end": 8928,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8903,
									"end": 8912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8898,
									"end": 8901,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8894,
									"end": 8913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8888,
									"end": 8914,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8879,
									"end": 8914,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8879,
									"end": 8914,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8851,
									"end": 8928,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 8851,
									"end": 8928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8954,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9014,
									"end": 9020,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9007,
									"end": 9012,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8954,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 8954,
									"end": 9021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8954,
									"end": 9021,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 8954,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8948,
									"end": 8952,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8941,
									"end": 9022,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8810,
									"end": 9032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8145,
									"end": 9032,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8145,
									"end": 9032,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 8175,
									"end": 8793,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8227,
									"end": 8231,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8215,
									"end": 8221,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8211,
									"end": 8233,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8261,
									"end": 8298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 8293,
									"end": 8297,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8261,
									"end": 8298,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 8261,
									"end": 8298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8261,
									"end": 8298,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 8261,
									"end": 8298,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8320,
									"end": 8321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8348,
									"end": 8355,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8345,
									"end": 8346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8342,
									"end": 8356,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8427,
									"end": 8436,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8422,
									"end": 8425,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8418,
									"end": 8437,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8412,
									"end": 8438,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8404,
									"end": 8410,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8397,
									"end": 8439,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8478,
									"end": 8479,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8470,
									"end": 8476,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8466,
									"end": 8480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8456,
									"end": 8480,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8456,
									"end": 8480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8525,
									"end": 8527,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8514,
									"end": 8523,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8510,
									"end": 8528,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8497,
									"end": 8528,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8497,
									"end": 8528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8371,
									"end": 8375,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8368,
									"end": 8369,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8364,
									"end": 8376,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8359,
									"end": 8376,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8359,
									"end": 8376,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 8334,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8570,
									"end": 8576,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8561,
									"end": 8568,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8558,
									"end": 8577,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8555,
									"end": 8734,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8555,
									"end": 8734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8555,
									"end": 8734,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8628,
									"end": 8637,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8623,
									"end": 8626,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8619,
									"end": 8638,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8613,
									"end": 8639,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8713,
									"end": 8717,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8705,
									"end": 8711,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8701,
									"end": 8718,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8690,
									"end": 8699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8719,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 8671,
									"end": 8719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8719,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8671,
									"end": 8719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8720,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8578,
									"end": 8734,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8555,
									"end": 8734,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8555,
									"end": 8734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8780,
									"end": 8781,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8776,
									"end": 8777,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8768,
									"end": 8774,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8764,
									"end": 8778,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8760,
									"end": 8782,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8182,
									"end": 8793,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8182,
									"end": 8793,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8182,
									"end": 8793,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8145,
									"end": 9032,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8145,
									"end": 9032,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8145,
									"end": 9032,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7735,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7735,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7735,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 9038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7643,
									"end": 9038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9044,
									"end": 9162,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 9044,
									"end": 9162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9131,
									"end": 9155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 9149,
									"end": 9154,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9131,
									"end": 9155,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 9131,
									"end": 9155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9131,
									"end": 9155,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 9131,
									"end": 9155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9126,
									"end": 9129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9119,
									"end": 9156,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9044,
									"end": 9162,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9044,
									"end": 9162,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9044,
									"end": 9162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9265,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9299,
									"end": 9301,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9288,
									"end": 9297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9284,
									"end": 9302,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9276,
									"end": 9302,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9276,
									"end": 9302,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9312,
									"end": 9383,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 9380,
									"end": 9381,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9369,
									"end": 9378,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9365,
									"end": 9382,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9356,
									"end": 9362,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9312,
									"end": 9383,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 9312,
									"end": 9383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9312,
									"end": 9383,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 9312,
									"end": 9383,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9168,
									"end": 9390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9480,
									"end": 9491,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9514,
									"end": 9520,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9509,
									"end": 9512,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9502,
									"end": 9521,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9554,
									"end": 9558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9549,
									"end": 9552,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9545,
									"end": 9559,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9530,
									"end": 9559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9530,
									"end": 9559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9571,
									"end": 9799,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 9571,
									"end": 9799,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9711,
									"end": 9745,
									"name": "PUSH",
									"source": 1,
									"value": "4174206C65617374206F6E652077686974656C69737465642061646472657373"
								},
								{
									"begin": 9707,
									"end": 9708,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9699,
									"end": 9705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9695,
									"end": 9709,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9688,
									"end": 9746,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9780,
									"end": 9791,
									"name": "PUSH",
									"source": 1,
									"value": "2072657175697265640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9775,
									"end": 9777,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 9767,
									"end": 9773,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9763,
									"end": 9778,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9756,
									"end": 9792,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9571,
									"end": 9799,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9571,
									"end": 9799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 10171,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 9805,
									"end": 10171,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9947,
									"end": 9950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9968,
									"end": 10035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 10032,
									"end": 10034,
									"name": "PUSH",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 10027,
									"end": 10030,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 10035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 9968,
									"end": 10035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 10035,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 9968,
									"end": 10035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 10035,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 10035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10044,
									"end": 10137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 10133,
									"end": 10136,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10044,
									"end": 10137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 10044,
									"end": 10137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10044,
									"end": 10137,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 10044,
									"end": 10137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10162,
									"end": 10164,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10157,
									"end": 10160,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10153,
									"end": 10165,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10146,
									"end": 10165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10146,
									"end": 10165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 10171,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 10171,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 10171,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9805,
									"end": 10171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10177,
									"end": 10596,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 10177,
									"end": 10596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10343,
									"end": 10347,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10383,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10370,
									"end": 10379,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10366,
									"end": 10384,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10358,
									"end": 10384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10358,
									"end": 10384,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10430,
									"end": 10439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10424,
									"end": 10428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10420,
									"end": 10440,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 10416,
									"end": 10417,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10405,
									"end": 10414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10401,
									"end": 10418,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10394,
									"end": 10441,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 10584,
									"end": 10588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10589,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 10458,
									"end": 10589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10589,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 10458,
									"end": 10589,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10450,
									"end": 10589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10450,
									"end": 10589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10177,
									"end": 10596,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10177,
									"end": 10596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10177,
									"end": 10596,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10177,
									"end": 10596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10602,
									"end": 10782,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 10602,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10650,
									"end": 10727,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10647,
									"end": 10648,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10640,
									"end": 10728,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10747,
									"end": 10751,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 10744,
									"end": 10745,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10737,
									"end": 10752,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10771,
									"end": 10775,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10768,
									"end": 10769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10761,
									"end": 10776,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10788,
									"end": 10968,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 10788,
									"end": 10968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10836,
									"end": 10913,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10833,
									"end": 10834,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10826,
									"end": 10914,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10933,
									"end": 10937,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 10930,
									"end": 10931,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 10923,
									"end": 10938,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10957,
									"end": 10961,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 10954,
									"end": 10955,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10947,
									"end": 10962,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11014,
									"end": 11017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11033,
									"end": 11053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 11051,
									"end": 11052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11033,
									"end": 11053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 11033,
									"end": 11053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11033,
									"end": 11053,
									"name": "tag",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 11033,
									"end": 11053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11028,
									"end": 11053,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11028,
									"end": 11053,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11067,
									"end": 11087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 11085,
									"end": 11086,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11067,
									"end": 11087,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 11067,
									"end": 11087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11067,
									"end": 11087,
									"name": "tag",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 11067,
									"end": 11087,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11062,
									"end": 11087,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11062,
									"end": 11087,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11110,
									"end": 11111,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11107,
									"end": 11108,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11103,
									"end": 11112,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11096,
									"end": 11112,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11096,
									"end": 11112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11131,
									"end": 11134,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 11128,
									"end": 11129,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11125,
									"end": 11135,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 11122,
									"end": 11158,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 11122,
									"end": 11158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 11122,
									"end": 11158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11138,
									"end": 11156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 11138,
									"end": 11156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 11138,
									"end": 11156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11138,
									"end": 11156,
									"name": "tag",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 11138,
									"end": 11156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11122,
									"end": 11158,
									"name": "tag",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 11122,
									"end": 11158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10974,
									"end": 11165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11289,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 11171,
									"end": 11289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11258,
									"end": 11282,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "228"
								},
								{
									"begin": 11276,
									"end": 11281,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11258,
									"end": 11282,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 11258,
									"end": 11282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11258,
									"end": 11282,
									"name": "tag",
									"source": 1,
									"value": "228"
								},
								{
									"begin": 11258,
									"end": 11282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11253,
									"end": 11256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11246,
									"end": 11283,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11444,
									"end": 11448,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11482,
									"end": 11484,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 11471,
									"end": 11480,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11467,
									"end": 11485,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11459,
									"end": 11485,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11459,
									"end": 11485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11495,
									"end": 11566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 11563,
									"end": 11564,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11552,
									"end": 11561,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11548,
									"end": 11565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11539,
									"end": 11545,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 11495,
									"end": 11566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 11495,
									"end": 11566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11495,
									"end": 11566,
									"name": "tag",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 11495,
									"end": 11566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11576,
									"end": 11648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 11644,
									"end": 11646,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11633,
									"end": 11642,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11629,
									"end": 11647,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11620,
									"end": 11626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11576,
									"end": 11648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 11576,
									"end": 11648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11576,
									"end": 11648,
									"name": "tag",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 11576,
									"end": 11648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11658,
									"end": 11730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 11726,
									"end": 11728,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 11715,
									"end": 11724,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11711,
									"end": 11729,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11702,
									"end": 11708,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11658,
									"end": 11730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 11658,
									"end": 11730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11658,
									"end": 11730,
									"name": "tag",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 11658,
									"end": 11730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11295,
									"end": 11737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11836,
									"end": 11840,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11874,
									"end": 11876,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11863,
									"end": 11872,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11859,
									"end": 11877,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11851,
									"end": 11877,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11851,
									"end": 11877,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11887,
									"end": 11958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "234"
								},
								{
									"begin": 11955,
									"end": 11956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11944,
									"end": 11953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11940,
									"end": 11957,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11931,
									"end": 11937,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11887,
									"end": 11958,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 11887,
									"end": 11958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11887,
									"end": 11958,
									"name": "tag",
									"source": 1,
									"value": "234"
								},
								{
									"begin": 11887,
									"end": 11958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11743,
									"end": 11965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54898,
									"end": 60430,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071f06dd889a253c53401ead606c64d3bcefb97a1fcab2428ba5cb243c29c98a664736f6c634300081e0033",
									".code": [
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "EB91D37E"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "ABA63705"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "84900B04"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "902D55A5"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "6290865D"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "56DD475A"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "2630C12F"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "2D380242"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "12CAE7AF"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "134E18F4"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "158B1A57"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54898,
											"end": 60430,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 58013,
											"end": 58121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 58013,
											"end": 58121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 58013,
											"end": 58121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 58707,
											"end": 58810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58707,
											"end": 58810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59804,
											"end": 59916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 59804,
											"end": 59916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 59804,
											"end": 59916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13699,
											"end": 13796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13699,
											"end": 13796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 57496,
											"end": 57825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57496,
											"end": 57825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 57496,
											"end": 57825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55266,
											"end": 55296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 55266,
											"end": 55296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 55037,
											"end": 55064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 55037,
											"end": 55064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60338,
											"end": 60428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 60338,
											"end": 60428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56374,
											"end": 56655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 56374,
											"end": 56655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 58459,
											"end": 58556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 58459,
											"end": 58556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 55188,
											"end": 55222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 55188,
											"end": 55222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59193,
											"end": 59279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 59193,
											"end": 59279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 58947,
											"end": 59044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58947,
											"end": 59044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13854,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13854,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 13854,
											"end": 13970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24014,
											"end": 24115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 55110,
											"end": 55144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 55110,
											"end": 55144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23359,
											"end": 23444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23359,
											"end": 23444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 54950,
											"end": 55005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54950,
											"end": 55005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 12831,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12831,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 56898,
											"end": 57199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 56898,
											"end": 57199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56898,
											"end": 57199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 58247,
											"end": 58346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58247,
											"end": 58346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 14401,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14401,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14401,
											"end": 14541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 59450,
											"end": 59590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 59450,
											"end": 59590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 59450,
											"end": 59590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 60049,
											"end": 60161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 60049,
											"end": 60161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24264,
											"end": 24479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24264,
											"end": 24479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12674,
											"end": 12687,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12706,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12699,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12699,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12629,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14921,
											"end": 14925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14937,
											"end": 14950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14953,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14953,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14937,
											"end": 14965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14937,
											"end": 14965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14984,
											"end": 14989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14991,
											"end": 14998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14975,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14975,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15027,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15016,
											"end": 15027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14848,
											"end": 15034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58073,
											"end": 58080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58099,
											"end": 58114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 58109,
											"end": 58113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58099,
											"end": 58108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 58099,
											"end": 58114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58099,
											"end": 58114,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 58099,
											"end": 58114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58092,
											"end": 58114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58092,
											"end": 58114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58013,
											"end": 58121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58767,
											"end": 58774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58801,
											"end": 58802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58786,
											"end": 58803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58707,
											"end": 58810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59882,
											"end": 59889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59908,
											"end": 59909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59901,
											"end": 59909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59901,
											"end": 59909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13770,
											"end": 13789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13770,
											"end": 13789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13699,
											"end": 13796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57594,
											"end": 57598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57619,
											"end": 57636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57645,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57619,
											"end": 57645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57645,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 57646,
											"end": 57652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 57619,
											"end": 57653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 57619,
											"end": 57653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 57619,
											"end": 57653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57618,
											"end": 57653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 57610,
											"end": 57674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 57610,
											"end": 57674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57718,
											"end": 57724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57702,
											"end": 57726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57702,
											"end": 57726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 57698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 57726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 57684,
											"end": 57756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 57684,
											"end": 57756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57773,
											"end": 57818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57792,
											"end": 57798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57800,
											"end": 57809,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57811,
											"end": 57817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57773,
											"end": 57791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 57773,
											"end": 57818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57773,
											"end": 57818,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 57773,
											"end": 57818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57766,
											"end": 57818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57766,
											"end": 57818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57496,
											"end": 57825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55266,
											"end": 55296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55037,
											"end": 55064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60396,
											"end": 60401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60420,
											"end": 60421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60413,
											"end": 60421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60413,
											"end": 60421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60338,
											"end": 60428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 23252,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23252,
											"end": 23265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56453,
											"end": 56470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56453,
											"end": 56484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3AF32ABF"
										},
										{
											"begin": 56485,
											"end": 56487,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56453,
											"end": 56488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 56453,
											"end": 56488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 56453,
											"end": 56488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 56445,
											"end": 56508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 56445,
											"end": 56508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54989,
											"end": 55005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 56541,
											"end": 56547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56526,
											"end": 56538,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 56526,
											"end": 56547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 56526,
											"end": 56547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56563,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56563,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 56518,
											"end": 56589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 56518,
											"end": 56589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56599,
											"end": 56616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 56605,
											"end": 56607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56609,
											"end": 56615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56599,
											"end": 56604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 56599,
											"end": 56616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56599,
											"end": 56616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 56599,
											"end": 56616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56642,
											"end": 56648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56626,
											"end": 56638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 56626,
											"end": 56648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56626,
											"end": 56648,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56374,
											"end": 56655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58510,
											"end": 58523,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "PUSH",
											"source": 0,
											"value": "312E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58535,
											"end": 58549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58459,
											"end": 58556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55188,
											"end": 55222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59243,
											"end": 59247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59266,
											"end": 59271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59259,
											"end": 59271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59259,
											"end": 59271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59193,
											"end": 59279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59001,
											"end": 59008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59035,
											"end": 59036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59020,
											"end": 59037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59020,
											"end": 59037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58947,
											"end": 59044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13919,
											"end": 13926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 13963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 13963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13854,
											"end": 13970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24014,
											"end": 24115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23252,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23252,
											"end": 23265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24078,
											"end": 24108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24105,
											"end": 24106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24078,
											"end": 24096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24078,
											"end": 24108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24078,
											"end": 24108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24078,
											"end": 24108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24014,
											"end": 24115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55110,
											"end": 55144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23405,
											"end": 23412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23431,
											"end": 23437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23359,
											"end": 23444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54989,
											"end": 55005,
											"name": "PUSH",
											"source": 0,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 54950,
											"end": 55005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54950,
											"end": 55005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12878,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12910,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12903,
											"end": 12917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12903,
											"end": 12917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56976,
											"end": 56980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57001,
											"end": 57018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57027,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57001,
											"end": 57027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57027,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 57028,
											"end": 57038,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 57001,
											"end": 57039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 57001,
											"end": 57039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 57001,
											"end": 57039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57000,
											"end": 57039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 56992,
											"end": 57060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56992,
											"end": 57060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57104,
											"end": 57110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57088,
											"end": 57112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57088,
											"end": 57112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57078,
											"end": 57112,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 57070,
											"end": 57142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 57070,
											"end": 57142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57159,
											"end": 57192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 57174,
											"end": 57183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57185,
											"end": 57191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57159,
											"end": 57173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 57159,
											"end": 57192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57159,
											"end": 57192,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 57159,
											"end": 57192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57152,
											"end": 57192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57152,
											"end": 57192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56898,
											"end": 57199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58300,
											"end": 58307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58334,
											"end": 58338,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 58319,
											"end": 58339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58319,
											"end": 58339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58247,
											"end": 58346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14481,
											"end": 14488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14518,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14519,
											"end": 14524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14507,
											"end": 14534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59521,
											"end": 59525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59544,
											"end": 59561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59544,
											"end": 59570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59570,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 59571,
											"end": 59582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 59544,
											"end": 59583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 59544,
											"end": 59583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 59544,
											"end": 59583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59537,
											"end": 59583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59537,
											"end": 59583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59450,
											"end": 59590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60099,
											"end": 60106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60125,
											"end": 60136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60152,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60125,
											"end": 60152,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60152,
											"name": "PUSH",
											"source": 0,
											"value": "EB91D37E"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 60125,
											"end": 60154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 60125,
											"end": 60154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60118,
											"end": 60154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60118,
											"end": 60154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60049,
											"end": 60161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 23252,
											"end": 23263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23252,
											"end": 23265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 23252,
											"end": 23265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24368,
											"end": 24369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24348,
											"end": 24370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24348,
											"end": 24370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24348,
											"end": 24370,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24344,
											"end": 24435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 24344,
											"end": 24435,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24421,
											"end": 24422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24393,
											"end": 24424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24393,
											"end": 24424,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24344,
											"end": 24435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 24344,
											"end": 24435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 24463,
											"end": 24471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24444,
											"end": 24472,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24444,
											"end": 24472,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 24444,
											"end": 24472,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24264,
											"end": 24479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4273,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4177,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 19669,
											"end": 19674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19676,
											"end": 19683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19685,
											"end": 19690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19692,
											"end": 19696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19660,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 19660,
											"end": 19697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 19660,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 19704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15713,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15729,
											"end": 15744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15747,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 15747,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 15747,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15747,
											"end": 15759,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 15747,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15729,
											"end": 15759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 15785,
											"end": 15789,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15791,
											"end": 15798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15800,
											"end": 15805,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 15769,
											"end": 15806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 15769,
											"end": 15806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15832,
											"end": 15834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15841,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 15816,
											"end": 15842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15816,
											"end": 15842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15852,
											"end": 15863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 15863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 15863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15626,
											"end": 15870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23679,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23517,
											"end": 23679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23587,
											"end": 23599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 23587,
											"end": 23597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 23587,
											"end": 23599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23587,
											"end": 23599,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 23587,
											"end": 23599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23576,
											"end": 23599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 23576,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23576,
											"end": 23583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23583,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 23576,
											"end": 23583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23576,
											"end": 23599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23576,
											"end": 23599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 23572,
											"end": 23673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 23649,
											"end": 23659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 23649,
											"end": 23661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23661,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 23649,
											"end": 23661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23622,
											"end": 23662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23673,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 23572,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23517,
											"end": 23679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18308,
											"end": 18516,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18308,
											"end": 18516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18397,
											"end": 18398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18378,
											"end": 18399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18378,
											"end": 18399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 18374,
											"end": 18465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18451,
											"end": 18452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 18422,
											"end": 18454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18422,
											"end": 18454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18465,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 18374,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 18490,
											"end": 18491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18494,
											"end": 18501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18503,
											"end": 18508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 18474,
											"end": 18509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 18474,
											"end": 18509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18308,
											"end": 18516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18308,
											"end": 18516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18308,
											"end": 18516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24633,
											"end": 24820,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 24633,
											"end": 24820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24741,
											"end": 24747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24804,
											"end": 24812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24794,
											"end": 24802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24773,
											"end": 24813,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24633,
											"end": 24820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24633,
											"end": 24820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14234,
											"end": 14238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14266,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 14266,
											"end": 14278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14266,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14250,
											"end": 14278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14298,
											"end": 14303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14314,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 14288,
											"end": 14315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14288,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14165,
											"end": 14343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20680,
											"end": 20681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20663,
											"end": 20682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20734,
											"end": 20735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20705,
											"end": 20737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 20659,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20761,
											"end": 20782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20833,
											"end": 20834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 20805,
											"end": 20836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20805,
											"end": 20836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 20757,
											"end": 20847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20868,
											"end": 20873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20875,
											"end": 20882,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20856,
											"end": 20883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20905,
											"end": 20914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 20958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20949,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20960,
											"end": 20965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 20935,
											"end": 20966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20935,
											"end": 20966,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 20901,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20551,
											"end": 20983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21364,
											"end": 21388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21391,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21401,
											"end": 21406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21408,
											"end": 21415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21391,
											"end": 21416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21416,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21391,
											"end": 21416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21364,
											"end": 21416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21364,
											"end": 21416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21430,
											"end": 21446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21430,
											"end": 21466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21505,
											"end": 21510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21486,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21486,
											"end": 21510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21573,
											"end": 21589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21591,
											"end": 21596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 21537,
											"end": 21597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21537,
											"end": 21597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21482,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21662,
											"end": 21667,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21669,
											"end": 21676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21697,
											"end": 21702,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21678,
											"end": 21694,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21678,
											"end": 21702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21704,
											"end": 21709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21653,
											"end": 21661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 21653,
											"end": 21710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 21653,
											"end": 21710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21426,
											"end": 21735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21354,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21265,
											"end": 21741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16326,
											"end": 16344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16367,
											"end": 16397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16367,
											"end": 16397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 16322,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16435,
											"end": 16436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16421,
											"end": 16437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16489,
											"end": 16490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16460,
											"end": 16492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16460,
											"end": 16492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 16417,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 16520,
											"end": 16524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16526,
											"end": 16528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16530,
											"end": 16535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 16512,
											"end": 16536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16536,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 16512,
											"end": 16536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16243,
											"end": 16543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16963,
											"end": 16964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 16951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17099,
											"end": 17104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17083,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17083,
											"end": 17104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17167,
											"end": 17171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17157,
											"end": 17172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17135,
											"end": 17172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17204,
											"end": 17209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17209,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17261,
											"end": 17265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17236,
											"end": 17286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 17186,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17431,
											"end": 17435,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17121,
											"end": 17483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 16943,
											"end": 17483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17511,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17497,
											"end": 17513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17672,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17660,
											"end": 17672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17660,
											"end": 17681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17881,
											"end": 17883,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 17493,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17948,
											"end": 17950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17942,
											"end": 17946,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17952,
											"end": 17957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 17933,
											"end": 17958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17933,
											"end": 17958,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16858,
											"end": 17965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4113,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4294,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4523,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4526,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4671,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 4799,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5069,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 5170,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 5179,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5197,
											"end": 5202,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5179,
											"end": 5203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5203,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 5179,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5170,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5204,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 5170,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5152,
											"end": 5205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 5152,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5343,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5217,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5331,
											"end": 5336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5300,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5337,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 5300,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5349,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5483,
											"end": 5488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5452,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5489,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 5452,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5672,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5501,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5608,
											"end": 5665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5608,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5501,
											"end": 5672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 5932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5842,
											"end": 5933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5933,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5842,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6032,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5946,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6025,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6014,
											"end": 6019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6026,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6150,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6038,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6137,
											"end": 6142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6121,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 6121,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6360,
											"end": 6361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6345,
											"end": 6362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6296,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6363,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6296,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6520,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6376,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6477,
											"end": 6514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6477,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6693,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6526,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6680,
											"end": 6685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6631,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6631,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6947,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6932,
											"end": 6949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6861,
											"end": 6950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6861,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7106,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6963,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 7094,
											"end": 7099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7063,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7100,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 7063,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7277,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7112,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7264,
											"end": 7269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7216,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7270,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7216,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7204,
											"end": 7271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7420,
											"end": 7429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7518,
											"end": 7527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7444,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7532,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7444,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7656,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7668,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7673,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7638,
											"end": 7757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 7676,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7676,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7757,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7638,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7866,
											"end": 7873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7846,
											"end": 7855,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7821,
											"end": 7874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7874,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7821,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7923,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7994,
											"end": 8001,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 7992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 7949,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7949,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 8019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8205,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8025,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8073,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8167,
											"end": 8168,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8160,
											"end": 8175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8531,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8211,
											"end": 8531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8255,
											"end": 8261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8293,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8282,
											"end": 8294,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8272,
											"end": 8294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8333,
											"end": 8337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8341,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8350,
											"end": 8431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8420,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8431,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8350,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8481,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8441,
											"end": 8525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8497,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8525,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8441,
											"end": 8525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8653,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8537,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8622,
											"end": 8627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 8607,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8607,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8629,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8587,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8587,
											"end": 8647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8640,
											"end": 8641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8587,
											"end": 8647,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 8587,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8738,
											"end": 8751,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8784,
											"end": 8789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8760,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8790,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8760,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8906,
											"end": 8915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8893,
											"end": 8916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8921,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8886,
											"end": 9005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8924,
											"end": 9003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8924,
											"end": 9003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9005,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8886,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9122,
											"end": 9129,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9102,
											"end": 9111,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9069,
											"end": 9130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9130,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9069,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9059,
											"end": 9130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9059,
											"end": 9130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9319,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9153,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"source": 1,
											"value": "53656E6465722069732066726F7A656E00000000000000000000000000000000"
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9270,
											"end": 9312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9691,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9325,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9552,
											"end": 9554,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9547,
											"end": 9550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 9488,
											"end": 9555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9555,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9488,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9653,
											"end": 9656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9564,
											"end": 9657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9657,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9564,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9677,
											"end": 9680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9673,
											"end": 9685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 9697,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9890,
											"end": 9899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9960,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 10104,
											"end": 10108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9978,
											"end": 10109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 10109,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9978,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 10116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 10116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10297,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10122,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10289,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D75737420626520616E20696E746567657200000000000000"
										},
										{
											"begin": 10258,
											"end": 10259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10239,
											"end": 10290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10669,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10303,
											"end": 10669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10530,
											"end": 10532,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 10525,
											"end": 10528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10466,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 10466,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10466,
											"end": 10533,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10466,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10631,
											"end": 10634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10542,
											"end": 10635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10542,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10655,
											"end": 10658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 11094,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 10675,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 10845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10879,
											"end": 10881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 10937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10922,
											"end": 10926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10903,
											"end": 10912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10892,
											"end": 10939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 11082,
											"end": 11086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10956,
											"end": 11087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 11087,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10956,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 11087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 11087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 11094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 11094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 11094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 11094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11265,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11100,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11257,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F742077686974656C69737465640000000000000000000000000000000000"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11224,
											"end": 11238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11217,
											"end": 11258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11637,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11271,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11413,
											"end": 11416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11434,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 11493,
											"end": 11496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 11434,
											"end": 11501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11434,
											"end": 11501,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 11434,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11427,
											"end": 11501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 11599,
											"end": 11602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11510,
											"end": 11603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11510,
											"end": 11603,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 11510,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11628,
											"end": 11630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11623,
											"end": 11626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 12062,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 11643,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11847,
											"end": 11849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11836,
											"end": 11845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11824,
											"end": 11850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11824,
											"end": 11850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11896,
											"end": 11905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 12055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 11924,
											"end": 12055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11924,
											"end": 12055,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 11924,
											"end": 12055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11916,
											"end": 12055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11916,
											"end": 12055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 12062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 12062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 12062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 12062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12068,
											"end": 12248,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 12068,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12193,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12113,
											"end": 12114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12213,
											"end": 12217,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12210,
											"end": 12211,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12203,
											"end": 12218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12241,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12227,
											"end": 12242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12294,
											"end": 12297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 12331,
											"end": 12332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12313,
											"end": 12333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12333,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 12313,
											"end": 12333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12333,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12308,
											"end": 12333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12347,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12347,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12347,
											"end": 12367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12347,
											"end": 12367,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 12347,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12383,
											"end": 12392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12414,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12408,
											"end": 12409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12415,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12402,
											"end": 12438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12402,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 12402,
											"end": 12438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 12418,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 12418,
											"end": 12436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12436,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 12418,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12402,
											"end": 12438,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 12402,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12622,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12451,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12614,
											"name": "PUSH",
											"source": 1,
											"value": "546F74616C20737570706C792065786365656465640000000000000000000000"
										},
										{
											"begin": 12587,
											"end": 12588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12575,
											"end": 12589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12994,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12628,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12770,
											"end": 12773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12791,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 12855,
											"end": 12857,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 12850,
											"end": 12853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12791,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 12791,
											"end": 12858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12791,
											"end": 12858,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 12791,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 12858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 12858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12867,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12956,
											"end": 12959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12867,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12867,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12867,
											"end": 12960,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12867,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12985,
											"end": 12987,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12980,
											"end": 12983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 12988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 12988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13419,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13000,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13204,
											"end": 13206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13189,
											"end": 13207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13181,
											"end": 13207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13253,
											"end": 13262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13247,
											"end": 13251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13243,
											"end": 13263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13228,
											"end": 13237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13224,
											"end": 13241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 13281,
											"end": 13412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13412,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 13281,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13000,
											"end": 13419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13507,
											"end": 13520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13556,
											"end": 13561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 13529,
											"end": 13562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13562,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13529,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13644,
											"end": 13650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13681,
											"end": 13690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13672,
											"end": 13679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13668,
											"end": 13691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13696,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 13661,
											"end": 13780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13699,
											"end": 13778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 13699,
											"end": 13778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13778,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13699,
											"end": 13778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13780,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 13661,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13819,
											"end": 13820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13844,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13900,
											"end": 13907,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13880,
											"end": 13889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13876,
											"end": 13898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13844,
											"end": 13908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 13844,
											"end": 13908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13844,
											"end": 13908,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13844,
											"end": 13908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 13918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14080,
											"end": 14084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14107,
											"end": 14116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 14121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14095,
											"end": 14121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14131,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14199,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14175,
											"end": 14181,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14131,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 14131,
											"end": 14202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14131,
											"end": 14202,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14131,
											"end": 14202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14212,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14280,
											"end": 14282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14265,
											"end": 14283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14256,
											"end": 14262,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14212,
											"end": 14284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14212,
											"end": 14284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14212,
											"end": 14284,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14212,
											"end": 14284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 14362,
											"end": 14364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14338,
											"end": 14344,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 14294,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14294,
											"end": 14366,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 14294,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 14373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								},
								"1": {
									".code": [
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH #[$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "RETURN",
											"source": 0
										}
									],
									".data": {
										"0": {
											".auxdata": "a2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033",
											".code": [
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "SHR",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "3AF32ABF"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "8AB1D681"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "9B19251A"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "E43252D7"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 24980,
													"end": 25856,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "tag",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 25745,
													"end": 25854,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "tag",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 25745,
													"end": 25854,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 25745,
													"end": 25854,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "tag",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 25466,
													"end": 25562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "tag",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 25466,
													"end": 25562,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "tag",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 25051,
													"end": 25092,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "tag",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 25051,
													"end": 25092,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 25051,
													"end": 25092,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "tag",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 25230,
													"end": 25320,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "tag",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 25230,
													"end": 25320,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "tag",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "tag",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25807,
													"end": 25811,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25830,
													"end": 25839,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25840,
													"end": 25846,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 25830,
													"end": 25847,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25823,
													"end": 25847,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25823,
													"end": 25847,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25745,
													"end": 25854,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "tag",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25550,
													"end": 25555,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25530,
													"end": 25539,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25540,
													"end": 25546,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25547,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 25530,
													"end": 25555,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25466,
													"end": 25562,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "tag",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25051,
													"end": 25092,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "tag",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 25309,
													"end": 25313,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 25289,
													"end": 25298,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25299,
													"end": 25305,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25306,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 25289,
													"end": 25313,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 25230,
													"end": 25320,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 88,
													"end": 205,
													"name": "tag",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 88,
													"end": 205,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 197,
													"end": 198,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 194,
													"end": 195,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 187,
													"end": 199,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "tag",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 334,
													"end": 460,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 371,
													"end": 378,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 411,
													"end": 453,
													"name": "PUSH",
													"source": 1,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 404,
													"end": 409,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 400,
													"end": 454,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 389,
													"end": 454,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 389,
													"end": 454,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "tag",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 466,
													"end": 562,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 503,
													"end": 510,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 550,
													"end": 555,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 532,
													"end": 556,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 532,
													"end": 556,
													"name": "tag",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 521,
													"end": 556,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 521,
													"end": 556,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"name": "tag",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 568,
													"end": 690,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 659,
													"end": 664,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 641,
													"end": 665,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "tag",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 641,
													"end": 665,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 634,
													"end": 639,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 631,
													"end": 666,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 621,
													"end": 684,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 680,
													"end": 681,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 677,
													"end": 678,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 670,
													"end": 682,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 621,
													"end": 684,
													"name": "tag",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "tag",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 696,
													"end": 835,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 742,
													"end": 747,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 780,
													"end": 786,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 767,
													"end": 787,
													"name": "CALLDATALOAD",
													"source": 1
												},
												{
													"begin": 758,
													"end": 787,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 758,
													"end": 787,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 823,
													"end": 828,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 796,
													"end": 829,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "tag",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 796,
													"end": 829,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "tag",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 900,
													"end": 906,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 949,
													"end": 951,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 937,
													"end": 946,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 928,
													"end": 935,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 924,
													"end": 947,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 920,
													"end": 952,
													"name": "SLT",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 955,
													"end": 1034,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "tag",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "tag",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1075,
													"end": 1076,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 1145,
													"end": 1152,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 1136,
													"end": 1142,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1125,
													"end": 1134,
													"name": "DUP6",
													"source": 1
												},
												{
													"begin": 1121,
													"end": 1143,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1100,
													"end": 1153,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "tag",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1090,
													"end": 1153,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1090,
													"end": 1153,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1046,
													"end": 1163,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "tag",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1210,
													"end": 1217,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1253,
													"end": 1258,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1246,
													"end": 1259,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 1239,
													"end": 1260,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 1228,
													"end": 1260,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1228,
													"end": 1260,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "tag",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "53"
												},
												{
													"begin": 1368,
													"end": 1373,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1353,
													"end": 1374,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "tag",
													"source": 1,
													"value": "53"
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1348,
													"end": 1351,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1341,
													"end": 1375,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "tag",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1474,
													"end": 1478,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1512,
													"end": 1514,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 1501,
													"end": 1510,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1497,
													"end": 1515,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1489,
													"end": 1515,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1489,
													"end": 1515,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "55"
												},
												{
													"begin": 1587,
													"end": 1588,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1576,
													"end": 1585,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 1572,
													"end": 1589,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1563,
													"end": 1569,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1525,
													"end": 1590,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "tag",
													"source": 1,
													"value": "55"
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												}
											]
										}
									}
								},
								"2": {
									".code": [
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH #[$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "RETURN",
											"source": 0
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033",
											".code": [
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "SHR",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "CB4B73AB"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "D0516650"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "E08BA51A"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "E5839836"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26026,
													"end": 26917,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "tag",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 26535,
													"end": 26617,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "tag",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 26535,
													"end": 26617,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "tag",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 26106,
													"end": 26144,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "tag",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 26106,
													"end": 26144,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 26106,
													"end": 26144,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "tag",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 26303,
													"end": 26382,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "tag",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 26303,
													"end": 26382,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 26804,
													"end": 26915,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "tag",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 26804,
													"end": 26915,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "tag",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 26804,
													"end": 26915,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "tag",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "tag",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26605,
													"end": 26610,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26590,
													"end": 26596,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26597,
													"end": 26601,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26602,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 26590,
													"end": 26610,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26535,
													"end": 26617,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "tag",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26106,
													"end": 26144,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "tag",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26371,
													"end": 26375,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 26356,
													"end": 26362,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26363,
													"end": 26367,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26368,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 26356,
													"end": 26375,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26303,
													"end": 26382,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "tag",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 26866,
													"end": 26870,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26889,
													"end": 26895,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26896,
													"end": 26907,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 26889,
													"end": 26908,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 26882,
													"end": 26908,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26882,
													"end": 26908,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 26804,
													"end": 26915,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 88,
													"end": 205,
													"name": "tag",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 88,
													"end": 205,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 197,
													"end": 198,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 194,
													"end": 195,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 187,
													"end": 199,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "tag",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 334,
													"end": 460,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 371,
													"end": 378,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 411,
													"end": 453,
													"name": "PUSH",
													"source": 1,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 404,
													"end": 409,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 400,
													"end": 454,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 389,
													"end": 454,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 389,
													"end": 454,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 334,
													"end": 460,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "tag",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 466,
													"end": 562,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 503,
													"end": 510,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 550,
													"end": 555,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "29"
												},
												{
													"begin": 532,
													"end": 556,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 532,
													"end": 556,
													"name": "tag",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 521,
													"end": 556,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 521,
													"end": 556,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 466,
													"end": 562,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"name": "tag",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 568,
													"end": 690,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 659,
													"end": 664,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 641,
													"end": 665,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 641,
													"end": 665,
													"name": "tag",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 641,
													"end": 665,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 634,
													"end": 639,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 631,
													"end": 666,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 621,
													"end": 684,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 680,
													"end": 681,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 677,
													"end": 678,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 670,
													"end": 682,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 621,
													"end": 684,
													"name": "tag",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 568,
													"end": 690,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "tag",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 696,
													"end": 835,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 742,
													"end": 747,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 780,
													"end": 786,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 767,
													"end": 787,
													"name": "CALLDATALOAD",
													"source": 1
												},
												{
													"begin": 758,
													"end": 787,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 758,
													"end": 787,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 823,
													"end": 828,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 796,
													"end": 829,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 796,
													"end": 829,
													"name": "tag",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 796,
													"end": 829,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 696,
													"end": 835,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "tag",
													"source": 1,
													"value": "9"
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 900,
													"end": 906,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 949,
													"end": 951,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 937,
													"end": 946,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 928,
													"end": 935,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 924,
													"end": 947,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 920,
													"end": 952,
													"name": "SLT",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "27"
												},
												{
													"begin": 955,
													"end": 1034,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "tag",
													"source": 1,
													"value": "49"
												},
												{
													"begin": 955,
													"end": 1034,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "tag",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 917,
													"end": 1036,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1075,
													"end": 1076,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 1145,
													"end": 1152,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 1136,
													"end": 1142,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1125,
													"end": 1134,
													"name": "DUP6",
													"source": 1
												},
												{
													"begin": 1121,
													"end": 1143,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1100,
													"end": 1153,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "tag",
													"source": 1,
													"value": "50"
												},
												{
													"begin": 1100,
													"end": 1153,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1090,
													"end": 1153,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1090,
													"end": 1153,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1046,
													"end": 1163,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 841,
													"end": 1170,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "tag",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1210,
													"end": 1217,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1253,
													"end": 1258,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1246,
													"end": 1259,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 1239,
													"end": 1260,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 1228,
													"end": 1260,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1228,
													"end": 1260,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1176,
													"end": 1266,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "tag",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "53"
												},
												{
													"begin": 1368,
													"end": 1373,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1353,
													"end": 1374,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "tag",
													"source": 1,
													"value": "53"
												},
												{
													"begin": 1353,
													"end": 1374,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1348,
													"end": 1351,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1341,
													"end": 1375,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1272,
													"end": 1381,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "tag",
													"source": 1,
													"value": "15"
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1474,
													"end": 1478,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1512,
													"end": 1514,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 1501,
													"end": 1510,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 1497,
													"end": 1515,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1489,
													"end": 1515,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1489,
													"end": 1515,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "55"
												},
												{
													"begin": 1587,
													"end": 1588,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1576,
													"end": 1585,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 1572,
													"end": 1589,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 1563,
													"end": 1569,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1525,
													"end": 1590,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "tag",
													"source": 1,
													"value": "55"
												},
												{
													"begin": 1525,
													"end": 1590,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1387,
													"end": 1597,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												}
											]
										}
									}
								},
								"3": {
									".code": [
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSHSIZE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "CODESIZE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSHSIZE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52532,
											"end": 52609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52590,
											"end": 52602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52576,
											"end": 52587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52576,
											"end": 52602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52532,
											"end": 52609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 696,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 769,
											"end": 791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 800,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 833,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 800,
											"end": 833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 939,
											"end": 962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 935,
											"end": 967,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 970,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 970,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 932,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1171,
											"end": 1178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1115,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1115,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH #[$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "RETURN",
											"source": 0
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033",
											".code": [
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "SHR",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "BDD3D825"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "EB91D37E"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52272,
													"end": 53073,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "tag",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 52299,
													"end": 52325,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 52299,
													"end": 52325,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "tag",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 52779,
													"end": 53071,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "tag",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 52779,
													"end": 53071,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52299,
													"end": 52325,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "tag",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52829,
													"end": 52836,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52848,
													"end": 52867,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 52885,
													"end": 52896,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52848,
													"end": 52897,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52848,
													"end": 52897,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52908,
													"end": 52928,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52944,
													"end": 52948,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52954,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 52944,
													"end": 52954,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52954,
													"name": "PUSH",
													"source": 0,
													"value": "3850C7BD"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFF"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "SHL",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP7",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "GAS",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "STATICCALL",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "RETURNDATACOPY",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "tag",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "RETURNDATASIZE",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "1F"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "1F"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 52944,
													"end": 52956,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 52944,
													"end": 52956,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52907,
													"end": 52956,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52966,
													"end": 52979,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 53012,
													"end": 53020,
													"name": "PUSH",
													"source": 0,
													"value": "1000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 53007,
													"end": 53008,
													"name": "PUSH",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 52990,
													"end": 53002,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53003,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 52982,
													"end": 53003,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 52982,
													"end": 53008,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "tag",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 52982,
													"end": 53008,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 52982,
													"end": 53021,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "tag",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 52982,
													"end": 53021,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 52966,
													"end": 53021,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52966,
													"end": 53021,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 53059,
													"end": 53064,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 53052,
													"end": 53064,
													"name": "SWAP4",
													"source": 0
												},
												{
													"begin": 53052,
													"end": 53064,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 53052,
													"end": 53064,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 53052,
													"end": 53064,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 53052,
													"end": 53064,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 52779,
													"end": 53071,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7,
													"end": 133,
													"name": "tag",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 7,
													"end": 133,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 44,
													"end": 51,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 84,
													"end": 126,
													"name": "PUSH",
													"source": 1,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 77,
													"end": 82,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 73,
													"end": 127,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 62,
													"end": 127,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 62,
													"end": 127,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7,
													"end": 133,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 7,
													"end": 133,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 7,
													"end": 133,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7,
													"end": 133,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 139,
													"end": 235,
													"name": "tag",
													"source": 1,
													"value": "23"
												},
												{
													"begin": 139,
													"end": 235,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 176,
													"end": 183,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 205,
													"end": 229,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "52"
												},
												{
													"begin": 223,
													"end": 228,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 205,
													"end": 229,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 205,
													"end": 229,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 205,
													"end": 229,
													"name": "tag",
													"source": 1,
													"value": "52"
												},
												{
													"begin": 205,
													"end": 229,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 194,
													"end": 229,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 194,
													"end": 229,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 139,
													"end": 235,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 139,
													"end": 235,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 139,
													"end": 235,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 139,
													"end": 235,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 241,
													"end": 359,
													"name": "tag",
													"source": 1,
													"value": "24"
												},
												{
													"begin": 241,
													"end": 359,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 328,
													"end": 352,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "54"
												},
												{
													"begin": 346,
													"end": 351,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 328,
													"end": 352,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "23"
												},
												{
													"begin": 328,
													"end": 352,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 328,
													"end": 352,
													"name": "tag",
													"source": 1,
													"value": "54"
												},
												{
													"begin": 328,
													"end": 352,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 323,
													"end": 326,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 316,
													"end": 353,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 241,
													"end": 359,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 241,
													"end": 359,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 241,
													"end": 359,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"name": "tag",
													"source": 1,
													"value": "8"
												},
												{
													"begin": 365,
													"end": 587,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 458,
													"end": 462,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 496,
													"end": 498,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 485,
													"end": 494,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 481,
													"end": 499,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 473,
													"end": 499,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 473,
													"end": 499,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 509,
													"end": 580,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "56"
												},
												{
													"begin": 577,
													"end": 578,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 566,
													"end": 575,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 562,
													"end": 579,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 553,
													"end": 559,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 509,
													"end": 580,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "24"
												},
												{
													"begin": 509,
													"end": 580,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 509,
													"end": 580,
													"name": "tag",
													"source": 1,
													"value": "56"
												},
												{
													"begin": 509,
													"end": 580,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 365,
													"end": 587,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 593,
													"end": 670,
													"name": "tag",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 593,
													"end": 670,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 630,
													"end": 637,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 659,
													"end": 664,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 648,
													"end": 664,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 648,
													"end": 664,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 593,
													"end": 670,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 593,
													"end": 670,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 593,
													"end": 670,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 593,
													"end": 670,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 676,
													"end": 794,
													"name": "tag",
													"source": 1,
													"value": "26"
												},
												{
													"begin": 676,
													"end": 794,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 763,
													"end": 787,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "59"
												},
												{
													"begin": 781,
													"end": 786,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 763,
													"end": 787,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 763,
													"end": 787,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 763,
													"end": 787,
													"name": "tag",
													"source": 1,
													"value": "59"
												},
												{
													"begin": 763,
													"end": 787,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 758,
													"end": 761,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 751,
													"end": 788,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 676,
													"end": 794,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 676,
													"end": 794,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 676,
													"end": 794,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "tag",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 893,
													"end": 897,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 931,
													"end": 933,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 920,
													"end": 929,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 916,
													"end": 934,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 908,
													"end": 934,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 908,
													"end": 934,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "61"
												},
												{
													"begin": 1012,
													"end": 1013,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1001,
													"end": 1010,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 997,
													"end": 1014,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 988,
													"end": 994,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "26"
												},
												{
													"begin": 944,
													"end": 1015,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "tag",
													"source": 1,
													"value": "61"
												},
												{
													"begin": 944,
													"end": 1015,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 800,
													"end": 1022,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1109,
													"end": 1226,
													"name": "tag",
													"source": 1,
													"value": "28"
												},
												{
													"begin": 1109,
													"end": 1226,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1218,
													"end": 1219,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1215,
													"end": 1216,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1208,
													"end": 1220,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "tag",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "66"
												},
												{
													"begin": 1446,
													"end": 1451,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "22"
												},
												{
													"begin": 1428,
													"end": 1452,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "tag",
													"source": 1,
													"value": "66"
												},
												{
													"begin": 1428,
													"end": 1452,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1421,
													"end": 1426,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1418,
													"end": 1453,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "67"
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 1467,
													"end": 1468,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1464,
													"end": 1465,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1457,
													"end": 1469,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "tag",
													"source": 1,
													"value": "67"
												},
												{
													"begin": 1408,
													"end": 1471,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1355,
													"end": 1477,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1355,
													"end": 1477,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "tag",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1540,
													"end": 1545,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1571,
													"end": 1577,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1565,
													"end": 1578,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 1556,
													"end": 1578,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1556,
													"end": 1578,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1587,
													"end": 1620,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "69"
												},
												{
													"begin": 1614,
													"end": 1619,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1587,
													"end": 1620,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "30"
												},
												{
													"begin": 1587,
													"end": 1620,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1587,
													"end": 1620,
													"name": "tag",
													"source": 1,
													"value": "69"
												},
												{
													"begin": 1587,
													"end": 1620,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1483,
													"end": 1626,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1632,
													"end": 1722,
													"name": "tag",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1632,
													"end": 1722,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1667,
													"end": 1674,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1710,
													"end": 1715,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1707,
													"end": 1708,
													"name": "PUSH",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 1696,
													"end": 1716,
													"name": "SIGNEXTEND",
													"source": 1
												},
												{
													"begin": 1685,
													"end": 1716,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1685,
													"end": 1716,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1632,
													"end": 1722,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1632,
													"end": 1722,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1632,
													"end": 1722,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1632,
													"end": 1722,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1728,
													"end": 1846,
													"name": "tag",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1728,
													"end": 1846,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1799,
													"end": 1821,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "72"
												},
												{
													"begin": 1815,
													"end": 1820,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1799,
													"end": 1821,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "32"
												},
												{
													"begin": 1799,
													"end": 1821,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1799,
													"end": 1821,
													"name": "tag",
													"source": 1,
													"value": "72"
												},
												{
													"begin": 1799,
													"end": 1821,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1792,
													"end": 1797,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1789,
													"end": 1822,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 1779,
													"end": 1840,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "73"
												},
												{
													"begin": 1779,
													"end": 1840,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 1836,
													"end": 1837,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1833,
													"end": 1834,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1826,
													"end": 1838,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 1779,
													"end": 1840,
													"name": "tag",
													"source": 1,
													"value": "73"
												},
												{
													"begin": 1779,
													"end": 1840,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1728,
													"end": 1846,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1728,
													"end": 1846,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "tag",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1907,
													"end": 1912,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 1938,
													"end": 1944,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1932,
													"end": 1945,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 1923,
													"end": 1945,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1923,
													"end": 1945,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1954,
													"end": 1985,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "75"
												},
												{
													"begin": 1979,
													"end": 1984,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 1954,
													"end": 1985,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "33"
												},
												{
													"begin": 1954,
													"end": 1985,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1954,
													"end": 1985,
													"name": "tag",
													"source": 1,
													"value": "75"
												},
												{
													"begin": 1954,
													"end": 1985,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1852,
													"end": 1991,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 1997,
													"end": 2086,
													"name": "tag",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 1997,
													"end": 2086,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2033,
													"end": 2040,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2073,
													"end": 2079,
													"name": "PUSH",
													"source": 1,
													"value": "FFFF"
												},
												{
													"begin": 2066,
													"end": 2071,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 2062,
													"end": 2080,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 2051,
													"end": 2080,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2051,
													"end": 2080,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1997,
													"end": 2086,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 1997,
													"end": 2086,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 1997,
													"end": 2086,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 1997,
													"end": 2086,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2092,
													"end": 2212,
													"name": "tag",
													"source": 1,
													"value": "36"
												},
												{
													"begin": 2092,
													"end": 2212,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2164,
													"end": 2187,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "78"
												},
												{
													"begin": 2181,
													"end": 2186,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2164,
													"end": 2187,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "35"
												},
												{
													"begin": 2164,
													"end": 2187,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2164,
													"end": 2187,
													"name": "tag",
													"source": 1,
													"value": "78"
												},
												{
													"begin": 2164,
													"end": 2187,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2157,
													"end": 2162,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2154,
													"end": 2188,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 2144,
													"end": 2206,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "79"
												},
												{
													"begin": 2144,
													"end": 2206,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2202,
													"end": 2203,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2199,
													"end": 2200,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2192,
													"end": 2204,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2144,
													"end": 2206,
													"name": "tag",
													"source": 1,
													"value": "79"
												},
												{
													"begin": 2144,
													"end": 2206,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2092,
													"end": 2212,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2092,
													"end": 2212,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "tag",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2274,
													"end": 2279,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2305,
													"end": 2311,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2299,
													"end": 2312,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 2290,
													"end": 2312,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2290,
													"end": 2312,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2321,
													"end": 2353,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "81"
												},
												{
													"begin": 2347,
													"end": 2352,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2321,
													"end": 2353,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "36"
												},
												{
													"begin": 2321,
													"end": 2353,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2321,
													"end": 2353,
													"name": "tag",
													"source": 1,
													"value": "81"
												},
												{
													"begin": 2321,
													"end": 2353,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2218,
													"end": 2359,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2365,
													"end": 2451,
													"name": "tag",
													"source": 1,
													"value": "38"
												},
												{
													"begin": 2365,
													"end": 2451,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2400,
													"end": 2407,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2440,
													"end": 2444,
													"name": "PUSH",
													"source": 1,
													"value": "FF"
												},
												{
													"begin": 2433,
													"end": 2438,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 2429,
													"end": 2445,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 2418,
													"end": 2445,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2418,
													"end": 2445,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2365,
													"end": 2451,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2365,
													"end": 2451,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2365,
													"end": 2451,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2365,
													"end": 2451,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2457,
													"end": 2575,
													"name": "tag",
													"source": 1,
													"value": "39"
												},
												{
													"begin": 2457,
													"end": 2575,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2528,
													"end": 2550,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "84"
												},
												{
													"begin": 2544,
													"end": 2549,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2528,
													"end": 2550,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "38"
												},
												{
													"begin": 2528,
													"end": 2550,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2528,
													"end": 2550,
													"name": "tag",
													"source": 1,
													"value": "84"
												},
												{
													"begin": 2528,
													"end": 2550,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2521,
													"end": 2526,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2518,
													"end": 2551,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 2508,
													"end": 2569,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "85"
												},
												{
													"begin": 2508,
													"end": 2569,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2565,
													"end": 2566,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2562,
													"end": 2563,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2555,
													"end": 2567,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2508,
													"end": 2569,
													"name": "tag",
													"source": 1,
													"value": "85"
												},
												{
													"begin": 2508,
													"end": 2569,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2457,
													"end": 2575,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2457,
													"end": 2575,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "tag",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2636,
													"end": 2641,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2667,
													"end": 2673,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2661,
													"end": 2674,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 2652,
													"end": 2674,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2652,
													"end": 2674,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2683,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "87"
												},
												{
													"begin": 2708,
													"end": 2713,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2683,
													"end": 2714,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "39"
												},
												{
													"begin": 2683,
													"end": 2714,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2683,
													"end": 2714,
													"name": "tag",
													"source": 1,
													"value": "87"
												},
												{
													"begin": 2683,
													"end": 2714,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2581,
													"end": 2720,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2726,
													"end": 2816,
													"name": "tag",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 2726,
													"end": 2816,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2760,
													"end": 2767,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2803,
													"end": 2808,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2796,
													"end": 2809,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 2789,
													"end": 2810,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 2778,
													"end": 2810,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2778,
													"end": 2810,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2726,
													"end": 2816,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2726,
													"end": 2816,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 2726,
													"end": 2816,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2726,
													"end": 2816,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2822,
													"end": 2938,
													"name": "tag",
													"source": 1,
													"value": "42"
												},
												{
													"begin": 2822,
													"end": 2938,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2892,
													"end": 2913,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "90"
												},
												{
													"begin": 2907,
													"end": 2912,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2892,
													"end": 2913,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "41"
												},
												{
													"begin": 2892,
													"end": 2913,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2892,
													"end": 2913,
													"name": "tag",
													"source": 1,
													"value": "90"
												},
												{
													"begin": 2892,
													"end": 2913,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2885,
													"end": 2890,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 2882,
													"end": 2914,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 2872,
													"end": 2932,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "91"
												},
												{
													"begin": 2872,
													"end": 2932,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 2928,
													"end": 2929,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2925,
													"end": 2926,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 2918,
													"end": 2930,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 2872,
													"end": 2932,
													"name": "tag",
													"source": 1,
													"value": "91"
												},
												{
													"begin": 2872,
													"end": 2932,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2822,
													"end": 2938,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2822,
													"end": 2938,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "tag",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2998,
													"end": 3003,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3029,
													"end": 3035,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 3023,
													"end": 3036,
													"name": "MLOAD",
													"source": 1
												},
												{
													"begin": 3014,
													"end": 3036,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 3014,
													"end": 3036,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3045,
													"end": 3075,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "93"
												},
												{
													"begin": 3069,
													"end": 3074,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 3045,
													"end": 3075,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "42"
												},
												{
													"begin": 3045,
													"end": 3075,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3045,
													"end": 3075,
													"name": "tag",
													"source": 1,
													"value": "93"
												},
												{
													"begin": 3045,
													"end": 3075,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 2944,
													"end": 3081,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "tag",
													"source": 1,
													"value": "17"
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3201,
													"end": 3207,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3209,
													"end": 3215,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3217,
													"end": 3223,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3225,
													"end": 3231,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3233,
													"end": 3239,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3241,
													"end": 3247,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3249,
													"end": 3255,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3298,
													"end": 3301,
													"name": "PUSH",
													"source": 1,
													"value": "E0"
												},
												{
													"begin": 3286,
													"end": 3295,
													"name": "DUP9",
													"source": 1
												},
												{
													"begin": 3277,
													"end": 3284,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 3273,
													"end": 3296,
													"name": "SUB",
													"source": 1
												},
												{
													"begin": 3269,
													"end": 3302,
													"name": "SLT",
													"source": 1
												},
												{
													"begin": 3266,
													"end": 3386,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 3266,
													"end": 3386,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "95"
												},
												{
													"begin": 3266,
													"end": 3386,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 3305,
													"end": 3384,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "96"
												},
												{
													"begin": 3305,
													"end": 3384,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "28"
												},
												{
													"begin": 3305,
													"end": 3384,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3305,
													"end": 3384,
													"name": "tag",
													"source": 1,
													"value": "96"
												},
												{
													"begin": 3305,
													"end": 3384,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3266,
													"end": 3386,
													"name": "tag",
													"source": 1,
													"value": "95"
												},
												{
													"begin": 3266,
													"end": 3386,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3425,
													"end": 3426,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 3450,
													"end": 3514,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "97"
												},
												{
													"begin": 3506,
													"end": 3513,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 3497,
													"end": 3503,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 3486,
													"end": 3495,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 3482,
													"end": 3504,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 3450,
													"end": 3514,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "31"
												},
												{
													"begin": 3450,
													"end": 3514,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3450,
													"end": 3514,
													"name": "tag",
													"source": 1,
													"value": "97"
												},
												{
													"begin": 3450,
													"end": 3514,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3440,
													"end": 3514,
													"name": "SWAP8",
													"source": 1
												},
												{
													"begin": 3440,
													"end": 3514,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3396,
													"end": 3524,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3563,
													"end": 3565,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 3589,
													"end": 3651,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "98"
												},
												{
													"begin": 3643,
													"end": 3650,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 3634,
													"end": 3640,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 3623,
													"end": 3632,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 3619,
													"end": 3641,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 3589,
													"end": 3651,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "34"
												},
												{
													"begin": 3589,
													"end": 3651,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3589,
													"end": 3651,
													"name": "tag",
													"source": 1,
													"value": "98"
												},
												{
													"begin": 3589,
													"end": 3651,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3579,
													"end": 3651,
													"name": "SWAP7",
													"source": 1
												},
												{
													"begin": 3579,
													"end": 3651,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3534,
													"end": 3661,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3700,
													"end": 3702,
													"name": "PUSH",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 3726,
													"end": 3789,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "99"
												},
												{
													"begin": 3781,
													"end": 3788,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 3772,
													"end": 3778,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 3761,
													"end": 3770,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 3757,
													"end": 3779,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 3726,
													"end": 3789,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 3726,
													"end": 3789,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3726,
													"end": 3789,
													"name": "tag",
													"source": 1,
													"value": "99"
												},
												{
													"begin": 3726,
													"end": 3789,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3716,
													"end": 3789,
													"name": "SWAP6",
													"source": 1
												},
												{
													"begin": 3716,
													"end": 3789,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3671,
													"end": 3799,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3838,
													"end": 3840,
													"name": "PUSH",
													"source": 1,
													"value": "60"
												},
												{
													"begin": 3864,
													"end": 3927,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "100"
												},
												{
													"begin": 3919,
													"end": 3926,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 3910,
													"end": 3916,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 3899,
													"end": 3908,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 3895,
													"end": 3917,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 3864,
													"end": 3927,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 3864,
													"end": 3927,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 3864,
													"end": 3927,
													"name": "tag",
													"source": 1,
													"value": "100"
												},
												{
													"begin": 3864,
													"end": 3927,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3854,
													"end": 3927,
													"name": "SWAP5",
													"source": 1
												},
												{
													"begin": 3854,
													"end": 3927,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3809,
													"end": 3937,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3976,
													"end": 3979,
													"name": "PUSH",
													"source": 1,
													"value": "80"
												},
												{
													"begin": 4003,
													"end": 4066,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "101"
												},
												{
													"begin": 4058,
													"end": 4065,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 4049,
													"end": 4055,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 4038,
													"end": 4047,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 4034,
													"end": 4056,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 4003,
													"end": 4066,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "37"
												},
												{
													"begin": 4003,
													"end": 4066,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4003,
													"end": 4066,
													"name": "tag",
													"source": 1,
													"value": "101"
												},
												{
													"begin": 4003,
													"end": 4066,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 3993,
													"end": 4066,
													"name": "SWAP4",
													"source": 1
												},
												{
													"begin": 3993,
													"end": 4066,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3947,
													"end": 4076,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4115,
													"end": 4118,
													"name": "PUSH",
													"source": 1,
													"value": "A0"
												},
												{
													"begin": 4142,
													"end": 4204,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "102"
												},
												{
													"begin": 4196,
													"end": 4203,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 4187,
													"end": 4193,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 4176,
													"end": 4185,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 4172,
													"end": 4194,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 4142,
													"end": 4204,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "40"
												},
												{
													"begin": 4142,
													"end": 4204,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4142,
													"end": 4204,
													"name": "tag",
													"source": 1,
													"value": "102"
												},
												{
													"begin": 4142,
													"end": 4204,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4132,
													"end": 4204,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 4132,
													"end": 4204,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4086,
													"end": 4214,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4253,
													"end": 4256,
													"name": "PUSH",
													"source": 1,
													"value": "C0"
												},
												{
													"begin": 4280,
													"end": 4341,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "103"
												},
												{
													"begin": 4333,
													"end": 4340,
													"name": "DUP11",
													"source": 1
												},
												{
													"begin": 4324,
													"end": 4330,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 4313,
													"end": 4322,
													"name": "DUP12",
													"source": 1
												},
												{
													"begin": 4309,
													"end": 4331,
													"name": "ADD",
													"source": 1
												},
												{
													"begin": 4280,
													"end": 4341,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "43"
												},
												{
													"begin": 4280,
													"end": 4341,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4280,
													"end": 4341,
													"name": "tag",
													"source": 1,
													"value": "103"
												},
												{
													"begin": 4280,
													"end": 4341,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4270,
													"end": 4341,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 4270,
													"end": 4341,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4224,
													"end": 4351,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP6",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP9",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP5",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP8",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "SWAP6",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 3087,
													"end": 4358,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4364,
													"end": 4544,
													"name": "tag",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 4364,
													"end": 4544,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4412,
													"end": 4489,
													"name": "PUSH",
													"source": 1,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 4409,
													"end": 4410,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 4402,
													"end": 4490,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 4509,
													"end": 4513,
													"name": "PUSH",
													"source": 1,
													"value": "11"
												},
												{
													"begin": 4506,
													"end": 4507,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 4499,
													"end": 4514,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 4533,
													"end": 4537,
													"name": "PUSH",
													"source": 1,
													"value": "24"
												},
												{
													"begin": 4530,
													"end": 4531,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 4523,
													"end": 4538,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 4550,
													"end": 4652,
													"name": "tag",
													"source": 1,
													"value": "45"
												},
												{
													"begin": 4550,
													"end": 4652,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4592,
													"end": 4600,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 4639,
													"end": 4644,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 4636,
													"end": 4637,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 4632,
													"end": 4645,
													"name": "SHR",
													"source": 1
												},
												{
													"begin": 4611,
													"end": 4645,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 4611,
													"end": 4645,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4550,
													"end": 4652,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 4550,
													"end": 4652,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 4550,
													"end": 4652,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4550,
													"end": 4652,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "tag",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4719,
													"end": 4724,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 4726,
													"end": 4730,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 4750,
													"end": 4756,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 4741,
													"end": 4756,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 4741,
													"end": 4756,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4774,
													"end": 4779,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 4765,
													"end": 4779,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 4765,
													"end": 4779,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "tag",
													"source": 1,
													"value": "107"
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4809,
													"end": 4810,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 4799,
													"end": 4807,
													"name": "DUP6",
													"source": 1
												},
												{
													"begin": 4796,
													"end": 4811,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "109"
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 4904,
													"end": 4908,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 4899,
													"end": 4902,
													"name": "DUP7",
													"source": 1
												},
												{
													"begin": 4895,
													"end": 4909,
													"name": "DIV",
													"source": 1
												},
												{
													"begin": 4889,
													"end": 4893,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 4886,
													"end": 4910,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 4883,
													"end": 4933,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 4883,
													"end": 4933,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "110"
												},
												{
													"begin": 4883,
													"end": 4933,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 4913,
													"end": 4931,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "111"
												},
												{
													"begin": 4913,
													"end": 4931,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 4913,
													"end": 4931,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4913,
													"end": 4931,
													"name": "tag",
													"source": 1,
													"value": "111"
												},
												{
													"begin": 4913,
													"end": 4931,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4883,
													"end": 4933,
													"name": "tag",
													"source": 1,
													"value": "110"
												},
												{
													"begin": 4883,
													"end": 4933,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4963,
													"end": 4964,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 4953,
													"end": 4961,
													"name": "DUP6",
													"source": 1
												},
												{
													"begin": 4949,
													"end": 4965,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 4946,
													"end": 5397,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 4946,
													"end": 5397,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "112"
												},
												{
													"begin": 4946,
													"end": 5397,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 5378,
													"end": 5382,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 5371,
													"end": 5376,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 5367,
													"end": 5383,
													"name": "MUL",
													"source": 1
												},
												{
													"begin": 5358,
													"end": 5383,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 5358,
													"end": 5383,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4946,
													"end": 5397,
													"name": "tag",
													"source": 1,
													"value": "112"
												},
												{
													"begin": 4946,
													"end": 5397,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5428,
													"end": 5432,
													"name": "DUP1",
													"source": 1
												},
												{
													"begin": 5422,
													"end": 5426,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 5418,
													"end": 5433,
													"name": "MUL",
													"source": 1
												},
												{
													"begin": 5410,
													"end": 5433,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 5410,
													"end": 5433,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5458,
													"end": 5490,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "113"
												},
												{
													"begin": 5481,
													"end": 5489,
													"name": "DUP6",
													"source": 1
												},
												{
													"begin": 5458,
													"end": 5490,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "45"
												},
												{
													"begin": 5458,
													"end": 5490,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5458,
													"end": 5490,
													"name": "tag",
													"source": 1,
													"value": "113"
												},
												{
													"begin": 5458,
													"end": 5490,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5446,
													"end": 5490,
													"name": "SWAP5",
													"source": 1
												},
												{
													"begin": 5446,
													"end": 5490,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "107"
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "tag",
													"source": 1,
													"value": "109"
												},
												{
													"begin": 4788,
													"end": 5500,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "SWAP5",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "SWAP5",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 4658,
													"end": 5506,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "tag",
													"source": 1,
													"value": "47"
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5566,
													"end": 5571,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 5757,
													"end": 5765,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 5747,
													"end": 5787,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "115"
												},
												{
													"begin": 5747,
													"end": 5787,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 5778,
													"end": 5779,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 5769,
													"end": 5779,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 5769,
													"end": 5779,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5780,
													"end": 5785,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 5780,
													"end": 5785,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5747,
													"end": 5787,
													"name": "tag",
													"source": 1,
													"value": "115"
												},
												{
													"begin": 5747,
													"end": 5787,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5806,
													"end": 5810,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 5796,
													"end": 5832,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "116"
												},
												{
													"begin": 5796,
													"end": 5832,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 5823,
													"end": 5824,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 5814,
													"end": 5824,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 5814,
													"end": 5824,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5825,
													"end": 5830,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 5825,
													"end": 5830,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5796,
													"end": 5832,
													"name": "tag",
													"source": 1,
													"value": "116"
												},
												{
													"begin": 5796,
													"end": 5832,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5892,
													"end": 5896,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 5940,
													"end": 5941,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "118"
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 5976,
													"end": 5977,
													"name": "PUSH",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "EQ",
													"source": 1
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "119"
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 5885,
													"end": 6162,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "117"
												},
												{
													"begin": 5885,
													"end": 6162,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "tag",
													"source": 1,
													"value": "118"
												},
												{
													"begin": 5935,
													"end": 5962,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5953,
													"end": 5954,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 5944,
													"end": 5954,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 5944,
													"end": 5954,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5955,
													"end": 5960,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5955,
													"end": 5960,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 5955,
													"end": 5960,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "tag",
													"source": 1,
													"value": "119"
												},
												{
													"begin": 5971,
													"end": 6162,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6016,
													"end": 6019,
													"name": "PUSH",
													"source": 1,
													"value": "FF"
												},
												{
													"begin": 6006,
													"end": 6014,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6003,
													"end": 6020,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 6000,
													"end": 6043,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6000,
													"end": 6043,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "120"
												},
												{
													"begin": 6000,
													"end": 6043,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6023,
													"end": 6041,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "121"
												},
												{
													"begin": 6023,
													"end": 6041,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 6023,
													"end": 6041,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6023,
													"end": 6041,
													"name": "tag",
													"source": 1,
													"value": "121"
												},
												{
													"begin": 6023,
													"end": 6041,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6000,
													"end": 6043,
													"name": "tag",
													"source": 1,
													"value": "120"
												},
												{
													"begin": 6000,
													"end": 6043,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6072,
													"end": 6080,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6069,
													"end": 6070,
													"name": "PUSH",
													"source": 1,
													"value": "2"
												},
												{
													"begin": 6065,
													"end": 6081,
													"name": "EXP",
													"source": 1
												},
												{
													"begin": 6056,
													"end": 6081,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6056,
													"end": 6081,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6107,
													"end": 6110,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6100,
													"end": 6105,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6097,
													"end": 6111,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 6094,
													"end": 6134,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6094,
													"end": 6134,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "122"
												},
												{
													"begin": 6094,
													"end": 6134,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6114,
													"end": 6132,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "123"
												},
												{
													"begin": 6114,
													"end": 6132,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 6114,
													"end": 6132,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6114,
													"end": 6132,
													"name": "tag",
													"source": 1,
													"value": "123"
												},
												{
													"begin": 6114,
													"end": 6132,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6094,
													"end": 6134,
													"name": "tag",
													"source": 1,
													"value": "122"
												},
												{
													"begin": 6094,
													"end": 6134,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6147,
													"end": 6152,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6147,
													"end": 6152,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 6147,
													"end": 6152,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 5885,
													"end": 6162,
													"name": "tag",
													"source": 1,
													"value": "117"
												},
												{
													"begin": 5885,
													"end": 6162,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5885,
													"end": 6162,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6271,
													"end": 6273,
													"name": "PUSH",
													"source": 1,
													"value": "20"
												},
												{
													"begin": 6261,
													"end": 6269,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6258,
													"end": 6274,
													"name": "LT",
													"source": 1
												},
												{
													"begin": 6252,
													"end": 6255,
													"name": "PUSH",
													"source": 1,
													"value": "133"
												},
												{
													"begin": 6246,
													"end": 6250,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6243,
													"end": 6256,
													"name": "LT",
													"source": 1
												},
												{
													"begin": 6239,
													"end": 6275,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6221,
													"end": 6223,
													"name": "PUSH",
													"source": 1,
													"value": "4E"
												},
												{
													"begin": 6211,
													"end": 6219,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6208,
													"end": 6224,
													"name": "LT",
													"source": 1
												},
												{
													"begin": 6203,
													"end": 6205,
													"name": "PUSH",
													"source": 1,
													"value": "B"
												},
												{
													"begin": 6197,
													"end": 6201,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6194,
													"end": 6206,
													"name": "LT",
													"source": 1
												},
												{
													"begin": 6190,
													"end": 6225,
													"name": "AND",
													"source": 1
												},
												{
													"begin": 6174,
													"end": 6285,
													"name": "OR",
													"source": 1
												},
												{
													"begin": 6171,
													"end": 6417,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6171,
													"end": 6417,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "124"
												},
												{
													"begin": 6171,
													"end": 6417,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6327,
													"end": 6335,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6321,
													"end": 6325,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6317,
													"end": 6336,
													"name": "EXP",
													"source": 1
												},
												{
													"begin": 6308,
													"end": 6336,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6308,
													"end": 6336,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6362,
													"end": 6365,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6355,
													"end": 6360,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6352,
													"end": 6366,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 6349,
													"end": 6389,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6349,
													"end": 6389,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "125"
												},
												{
													"begin": 6349,
													"end": 6389,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6369,
													"end": 6387,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "126"
												},
												{
													"begin": 6369,
													"end": 6387,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 6369,
													"end": 6387,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6369,
													"end": 6387,
													"name": "tag",
													"source": 1,
													"value": "126"
												},
												{
													"begin": 6369,
													"end": 6387,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6349,
													"end": 6389,
													"name": "tag",
													"source": 1,
													"value": "125"
												},
												{
													"begin": 6349,
													"end": 6389,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6402,
													"end": 6407,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 6402,
													"end": 6407,
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6171,
													"end": 6417,
													"name": "tag",
													"source": 1,
													"value": "124"
												},
												{
													"begin": 6171,
													"end": 6417,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6442,
													"end": 6484,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "127"
												},
												{
													"begin": 6480,
													"end": 6483,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6470,
													"end": 6478,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6464,
													"end": 6468,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6461,
													"end": 6462,
													"name": "PUSH",
													"source": 1,
													"value": "1"
												},
												{
													"begin": 6442,
													"end": 6484,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "46"
												},
												{
													"begin": 6442,
													"end": 6484,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6442,
													"end": 6484,
													"name": "tag",
													"source": 1,
													"value": "127"
												},
												{
													"begin": 6442,
													"end": 6484,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6427,
													"end": 6484,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 6427,
													"end": 6484,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6427,
													"end": 6484,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6427,
													"end": 6484,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6516,
													"end": 6520,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6511,
													"end": 6514,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6507,
													"end": 6521,
													"name": "DIV",
													"source": 1
												},
												{
													"begin": 6500,
													"end": 6505,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6497,
													"end": 6522,
													"name": "GT",
													"source": 1
												},
												{
													"begin": 6494,
													"end": 6545,
													"name": "ISZERO",
													"source": 1
												},
												{
													"begin": 6494,
													"end": 6545,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "128"
												},
												{
													"begin": 6494,
													"end": 6545,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 6525,
													"end": 6543,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "129"
												},
												{
													"begin": 6525,
													"end": 6543,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "44"
												},
												{
													"begin": 6525,
													"end": 6543,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6525,
													"end": 6543,
													"name": "tag",
													"source": 1,
													"value": "129"
												},
												{
													"begin": 6525,
													"end": 6543,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6494,
													"end": 6545,
													"name": "tag",
													"source": 1,
													"value": "128"
												},
												{
													"begin": 6494,
													"end": 6545,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6574,
													"end": 6578,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6567,
													"end": 6572,
													"name": "DUP2",
													"source": 1
												},
												{
													"begin": 6563,
													"end": 6579,
													"name": "MUL",
													"source": 1
												},
												{
													"begin": 6554,
													"end": 6579,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6554,
													"end": 6579,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "tag",
													"source": 1,
													"value": "114"
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "SWAP4",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 5512,
													"end": 6585,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "tag",
													"source": 1,
													"value": "19"
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6649,
													"end": 6654,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6673,
													"end": 6696,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "131"
												},
												{
													"begin": 6691,
													"end": 6695,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 6673,
													"end": 6696,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 6673,
													"end": 6696,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6673,
													"end": 6696,
													"name": "tag",
													"source": 1,
													"value": "131"
												},
												{
													"begin": 6673,
													"end": 6696,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6665,
													"end": 6696,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6665,
													"end": 6696,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6717,
													"end": 6742,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "132"
												},
												{
													"begin": 6733,
													"end": 6741,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 6717,
													"end": 6742,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "38"
												},
												{
													"begin": 6717,
													"end": 6742,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6717,
													"end": 6742,
													"name": "tag",
													"source": 1,
													"value": "132"
												},
												{
													"begin": 6717,
													"end": 6742,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6705,
													"end": 6742,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 6705,
													"end": 6742,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6761,
													"end": 6865,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "133"
												},
												{
													"begin": 6798,
													"end": 6864,
													"name": "PUSH",
													"source": 1,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 6788,
													"end": 6796,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6782,
													"end": 6786,
													"name": "DUP5",
													"source": 1
												},
												{
													"begin": 6761,
													"end": 6865,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "47"
												},
												{
													"begin": 6761,
													"end": 6865,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6761,
													"end": 6865,
													"name": "tag",
													"source": 1,
													"value": "133"
												},
												{
													"begin": 6761,
													"end": 6865,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6752,
													"end": 6865,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 6752,
													"end": 6865,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 6591,
													"end": 6872,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 6878,
													"end": 7058,
													"name": "tag",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 6878,
													"end": 7058,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 6926,
													"end": 7003,
													"name": "PUSH",
													"source": 1,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 6923,
													"end": 6924,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 6916,
													"end": 7004,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 7023,
													"end": 7027,
													"name": "PUSH",
													"source": 1,
													"value": "12"
												},
												{
													"begin": 7020,
													"end": 7021,
													"name": "PUSH",
													"source": 1,
													"value": "4"
												},
												{
													"begin": 7013,
													"end": 7028,
													"name": "MSTORE",
													"source": 1
												},
												{
													"begin": 7047,
													"end": 7051,
													"name": "PUSH",
													"source": 1,
													"value": "24"
												},
												{
													"begin": 7044,
													"end": 7045,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 7037,
													"end": 7052,
													"name": "REVERT",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "tag",
													"source": 1,
													"value": "21"
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7104,
													"end": 7105,
													"name": "PUSH",
													"source": 1,
													"value": "0"
												},
												{
													"begin": 7121,
													"end": 7141,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "136"
												},
												{
													"begin": 7139,
													"end": 7140,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7121,
													"end": 7141,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 7121,
													"end": 7141,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 7121,
													"end": 7141,
													"name": "tag",
													"source": 1,
													"value": "136"
												},
												{
													"begin": 7121,
													"end": 7141,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7116,
													"end": 7141,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 7116,
													"end": 7141,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7155,
													"end": 7175,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "137"
												},
												{
													"begin": 7173,
													"end": 7174,
													"name": "DUP4",
													"source": 1
												},
												{
													"begin": 7155,
													"end": 7175,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "25"
												},
												{
													"begin": 7155,
													"end": 7175,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 7155,
													"end": 7175,
													"name": "tag",
													"source": 1,
													"value": "137"
												},
												{
													"begin": 7155,
													"end": 7175,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7150,
													"end": 7175,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 7150,
													"end": 7175,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7194,
													"end": 7195,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7184,
													"end": 7219,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "138"
												},
												{
													"begin": 7184,
													"end": 7219,
													"name": "JUMPI",
													"source": 1
												},
												{
													"begin": 7199,
													"end": 7217,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "139"
												},
												{
													"begin": 7199,
													"end": 7217,
													"name": "PUSH [tag]",
													"source": 1,
													"value": "48"
												},
												{
													"begin": 7199,
													"end": 7217,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 1
												},
												{
													"begin": 7199,
													"end": 7217,
													"name": "tag",
													"source": 1,
													"value": "139"
												},
												{
													"begin": 7199,
													"end": 7217,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7184,
													"end": 7219,
													"name": "tag",
													"source": 1,
													"value": "138"
												},
												{
													"begin": 7184,
													"end": 7219,
													"name": "JUMPDEST",
													"source": 1
												},
												{
													"begin": 7241,
													"end": 7242,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7238,
													"end": 7239,
													"name": "DUP3",
													"source": 1
												},
												{
													"begin": 7234,
													"end": 7243,
													"name": "DIV",
													"source": 1
												},
												{
													"begin": 7229,
													"end": 7243,
													"name": "SWAP1",
													"source": 1
												},
												{
													"begin": 7229,
													"end": 7243,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "SWAP3",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "SWAP2",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"name": "POP",
													"source": 1
												},
												{
													"begin": 7064,
													"end": 7249,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 1
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"contracts/CCK/Token/CCKToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUser(address)": "12cae7af",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"freezableContract()": "56dd475a",
							"getCurrentPrice()": "eb91d37e",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"mintedAmount()": "2d380242",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"priceOracle()": "2630c12f",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"whitelistContract()": "84900b04"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezableContract\",\"outputs\":[{\"internalType\":\"contract Freezable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistContract\",\"outputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token implementation with additional features such as whitelisting, freezing accounts, and price retrieval from Uniswap V3.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"balanceOfUser(address)\":{\"details\":\"Returns the balance of a specified user.\",\"params\":{\"user\":\"Address of the user to check balance\"},\"returns\":{\"_0\":\"balance Amount of tokens held by the user\"}},\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address (currently returns zero)\"}},\"constructor\":{\"details\":\"Constructor to initialize the token and its associated contracts.\",\"params\":{\"_uniswapPool\":\"Address of the Uniswap V3 pool for price retrieval\",\"_whitelist\":\"Array of addresses to be added to the whitelist\"}},\"decimals()\":{\"details\":\"Returns the number of decimal places used by the token.\",\"returns\":{\"_0\":\"uint8 The number of decimal places (always returns 0 for this token).\"}},\"getCurrentPrice()\":{\"details\":\"Retrieves the current price from the price oracle.\",\"returns\":{\"_0\":\"price Current price of the token\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check\"},\"returns\":{\"_0\":\"frozenTokens Amount of frozen tokens (currently returns zero)\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address (currently returns zero)\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check\"},\"returns\":{\"_0\":\"frozen Indicates if the user is frozen\"}},\"mint(address,uint256)\":{\"details\":\"Mints new tokens to a specified address, if the address is whitelisted.\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to receive the minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"paused Indicates if the contract is paused (always returns false)\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Transfers tokens to a specified address.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"recipient\":\"Address to receive the tokens\"},\"returns\":{\"_0\":\"success Indicates if the transfer was successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers tokens from one address to another.\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"recipient\":\"Address to receive the tokens\",\"sender\":\"Address to send tokens from\"},\"returns\":{\"_0\":\"success Indicates if the transfer was successful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"version The version string\"}}},\"title\":\"CCKToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"CCKToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1555,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "mintedAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1558,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "whitelistContract",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(Whitelist)962"
							},
							{
								"astId": 1561,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "freezableContract",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(Freezable)1008"
							},
							{
								"astId": 1564,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:CCKToken",
								"label": "priceOracle",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(PriceOracle)1489"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Freezable)1008": {
								"encoding": "inplace",
								"label": "contract Freezable",
								"numberOfBytes": "20"
							},
							"t_contract(PriceOracle)1489": {
								"encoding": "inplace",
								"label": "contract PriceOracle",
								"numberOfBytes": "20"
							},
							"t_contract(Whitelist)962": {
								"encoding": "inplace",
								"label": "contract Whitelist",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Freezable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "freezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "frozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unfreezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract that allows freezing and unfreezing of user accounts.",
						"kind": "dev",
						"methods": {
							"freezeUser(address)": {
								"details": "Freezes a user account, preventing it from performing certain actions.",
								"params": {
									"user": "Address of the user to be frozen."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user account is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user account is frozen."
								}
							},
							"unfreezeUser(address)": {
								"details": "Unfreezes a user account, allowing it to perform actions again.",
								"params": {
									"user": "Address of the user to be unfrozen."
								}
							}
						},
						"title": "Freezable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26026:26917  contract Freezable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26026:26917  contract Freezable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcb4b73ab\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0516650\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe08ba51a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26106:26144  mapping(address => bool) public frozen */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n    tag_6:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n    tag_10:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26605:26610  false */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26596  frozen */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26602  frozen[user] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26597:26601  user */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26602  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26590:26610  frozen[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26535:26617  function unfreezeUser(address user) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26106:26144  mapping(address => bool) public frozen */\n    tag_13:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n    tag_18:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26371:26375  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26362  frozen */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26368  frozen[user] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26363:26367  user */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26368  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26356:26375  frozen[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26303:26382  function freezeUser(address user) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n    tag_21:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26866:26870  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26895  frozen */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26908  frozen[userAddress] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26896:26907  userAddress */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26889:26908  frozen[userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26882:26908  return frozen[userAddress] */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":26804:26915  function isFrozen(address userAddress) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_27:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_29:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_30:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_41\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_29\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_31:\n        /* \"#utility.yul\":641:665   */\n      tag_43\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_44:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_32:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_46\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_49\n      tag_27\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":917:1036   */\n    tag_48:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_50\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_33:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_34:\n        /* \"#utility.yul\":1353:1374   */\n      tag_53\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_15:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_55\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_34\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102f28061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063cb4b73ab1461004e578063d05166501461006a578063e08ba51a1461009a578063e5839836146100b6575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b005b610084600480360381019061007f919061025e565b61013c565b60405161009191906102a3565b60405180910390f35b6100b460048036038101906100af919061025e565b610158565b005b6100d060048036038101906100cb919061025e565b6101af565b6040516100dd91906102a3565b60405180910390f35b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xB3 RETURNDATACOPY 0x2F CALLER LOG3 PUSH16 0xFF689B7507A3E99CB9AC8D696BCC5899 0x1F SWAPN 0xC2 CODESIZE 0xDE PUSH6 0x6A0B7A64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "26026:891:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@freezeUser_981": {
									"entryPoint": 344,
									"id": 981,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@frozen_968": {
									"entryPoint": 316,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isFrozen_1007": {
									"entryPoint": 431,
									"id": 1007,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unfreezeUser_994": {
									"entryPoint": 230,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1600:1",
										"nodeType": "YulBlock",
										"src": "0:1600:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063cb4b73ab1461004e578063d05166501461006a578063e08ba51a1461009a578063e5839836146100b6575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b005b610084600480360381019061007f919061025e565b61013c565b60405161009191906102a3565b60405180910390f35b6100b460048036038101906100af919061025e565b610158565b005b6100d060048036038101906100cb919061025e565b6101af565b6040516100dd91906102a3565b60405180910390f35b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x158 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xB3 RETURNDATACOPY 0x2F CALLER LOG3 PUSH16 0xFF689B7507A3E99CB9AC8D696BCC5899 0x1F SWAPN 0xC2 CODESIZE 0xDE PUSH6 0x6A0B7A64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "26026:891:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26535:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26106:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26303:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26804:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26535:82;26605:5;26590:6;:12;26597:4;26590:12;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;26535:82;:::o;26106:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;26303:79::-;26371:4;26356:6;:12;26363:4;26356:12;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;26303:79;:::o;26804:111::-;26866:4;26889:6;:19;26896:11;26889:19;;;;;;;;;;;;;;;;;;;;;;;;;26882:26;;26804:111;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "150800",
								"executionCost": "194",
								"totalCost": "150994"
							},
							"external": {
								"freezeUser(address)": "24824",
								"frozen(address)": "2832",
								"isFrozen(address)": "2913",
								"unfreezeUser(address)": "24779"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26026,
									"end": 26917,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203db33e2f33a36fff689b7507a3e99cb9ac8d696bcc58991fe7c238de656a0b7a64736f6c634300081e0033",
									".code": [
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "CB4B73AB"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "D0516650"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "E08BA51A"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "E5839836"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26026,
											"end": 26917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26535,
											"end": 26617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26535,
											"end": 26617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26106,
											"end": 26144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26106,
											"end": 26144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26106,
											"end": 26144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26303,
											"end": 26382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26303,
											"end": 26382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26804,
											"end": 26915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26804,
											"end": 26915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26804,
											"end": 26915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26605,
											"end": 26610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26590,
											"end": 26596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26597,
											"end": 26601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26590,
											"end": 26610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26106,
											"end": 26144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26371,
											"end": 26375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26356,
											"end": 26362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26363,
											"end": 26367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26866,
											"end": 26870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26889,
											"end": 26895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26896,
											"end": 26907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26889,
											"end": 26908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26882,
											"end": 26908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26882,
											"end": 26908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26804,
											"end": 26915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CCK/Token/CCKToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"freezeUser(address)": "e08ba51a",
							"frozen(address)": "d0516650",
							"isFrozen(address)": "e5839836",
							"unfreezeUser(address)": "cb4b73ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"freezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unfreezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract that allows freezing and unfreezing of user accounts.\",\"kind\":\"dev\",\"methods\":{\"freezeUser(address)\":{\"details\":\"Freezes a user account, preventing it from performing certain actions.\",\"params\":{\"user\":\"Address of the user to be frozen.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user account is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user account is frozen.\"}},\"unfreezeUser(address)\":{\"details\":\"Unfreezes a user account, allowing it to perform actions again.\",\"params\":{\"user\":\"Address of the user to be unfrozen.\"}}},\"title\":\"Freezable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"Freezable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 968,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:Freezable",
								"label": "frozen",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC3643": {
					"abi": [
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for on-chain identity management and compliance.",
						"kind": "dev",
						"methods": {
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"title": "IERC3643",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compliance()": "6290865d",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"onchainID()": "aba63705",
							"paused()": "5c975abb",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for on-chain identity management and compliance.\",\"kind\":\"dev\",\"methods\":{\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"title\":\"IERC3643\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC3643\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				},
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				},
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				},
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				},
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				},
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				},
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PriceOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_uniswapPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract for retrieving the current price from a Uniswap V3 pool.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor to set the Uniswap V3 pool address.",
								"params": {
									"_uniswapPool": "Address of the Uniswap V3 pool to be used for price retrieval."
								}
							},
							"getCurrentPrice()": {
								"details": "Retrieves the current price from the Uniswap V3 pool.",
								"returns": {
									"_0": "uint256 The current price calculated from the pool's sqrtPriceX96."
								}
							}
						},
						"title": "PriceOracle",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52532:52609  constructor(address _uniswapPool) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52590:52602  _uniswapPool */\n  dup1\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52576:52587  uniswapPool */\n  0x00\n  0x00\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52576:52602  uniswapPool = _uniswapPool */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52532:52609  constructor(address _uniswapPool) {... */\n  pop\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52272:53073  contract PriceOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbdd3d825\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52299:52325  address public uniswapPool */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52299:52325  address public uniswapPool */\n    tag_6:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n    tag_10:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52829:52836  uint256 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52848:52867  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52885:52896  uniswapPool */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52848:52897  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52908:52928  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52948  pool */\n      dup2\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52954  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52944:52956  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52907:52956  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52966:52979  uint256 price */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53012:53020  2 ** 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53007:53008  2 */\n      0x02\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52990:53002  sqrtPriceX96 */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53003  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53008  uint256(sqrtPriceX96) ** 2 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52982:53021  uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52966:53021  uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53059:53064  price */\n      dup1\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":53052:53064  return price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":52779:53071  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_22:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_23:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_52\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_22\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_24:\n        /* \"#utility.yul\":328:352   */\n      tag_54\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_23\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_56\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_24\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_25:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_26:\n        /* \"#utility.yul\":763:787   */\n      tag_59\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_25\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_12:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_61\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_26\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_28:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_30:\n        /* \"#utility.yul\":1428:1452   */\n      tag_66\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_22\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_67:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1626   */\n    tag_31:\n        /* \"#utility.yul\":1540:1545   */\n      0x00\n        /* \"#utility.yul\":1571:1577   */\n      dup2\n        /* \"#utility.yul\":1565:1578   */\n      mload\n        /* \"#utility.yul\":1556:1578   */\n      swap1\n      pop\n        /* \"#utility.yul\":1587:1620   */\n      tag_69\n        /* \"#utility.yul\":1614:1619   */\n      dup2\n        /* \"#utility.yul\":1587:1620   */\n      tag_30\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1483:1626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1722   */\n    tag_32:\n        /* \"#utility.yul\":1667:1674   */\n      0x00\n        /* \"#utility.yul\":1710:1715   */\n      dup2\n        /* \"#utility.yul\":1707:1708   */\n      0x02\n        /* \"#utility.yul\":1696:1716   */\n      signextend\n        /* \"#utility.yul\":1685:1716   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1728:1846   */\n    tag_33:\n        /* \"#utility.yul\":1799:1821   */\n      tag_72\n        /* \"#utility.yul\":1815:1820   */\n      dup2\n        /* \"#utility.yul\":1799:1821   */\n      tag_32\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1789:1822   */\n      eq\n        /* \"#utility.yul\":1779:1840   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1836:1837   */\n      0x00\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1826:1838   */\n      revert\n        /* \"#utility.yul\":1779:1840   */\n    tag_73:\n        /* \"#utility.yul\":1728:1846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:1991   */\n    tag_34:\n        /* \"#utility.yul\":1907:1912   */\n      0x00\n        /* \"#utility.yul\":1938:1944   */\n      dup2\n        /* \"#utility.yul\":1932:1945   */\n      mload\n        /* \"#utility.yul\":1923:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1985   */\n      tag_75\n        /* \"#utility.yul\":1979:1984   */\n      dup2\n        /* \"#utility.yul\":1954:1985   */\n      tag_33\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1852:1991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1997:2086   */\n    tag_35:\n        /* \"#utility.yul\":2033:2040   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      0xffff\n        /* \"#utility.yul\":2066:2071   */\n      dup3\n        /* \"#utility.yul\":2062:2080   */\n      and\n        /* \"#utility.yul\":2051:2080   */\n      swap1\n      pop\n        /* \"#utility.yul\":1997:2086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2212   */\n    tag_36:\n        /* \"#utility.yul\":2164:2187   */\n      tag_78\n        /* \"#utility.yul\":2181:2186   */\n      dup2\n        /* \"#utility.yul\":2164:2187   */\n      tag_35\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2157:2162   */\n      dup2\n        /* \"#utility.yul\":2154:2188   */\n      eq\n        /* \"#utility.yul\":2144:2206   */\n      tag_79\n      jumpi\n        /* \"#utility.yul\":2202:2203   */\n      0x00\n        /* \"#utility.yul\":2199:2200   */\n      0x00\n        /* \"#utility.yul\":2192:2204   */\n      revert\n        /* \"#utility.yul\":2144:2206   */\n    tag_79:\n        /* \"#utility.yul\":2092:2212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2359   */\n    tag_37:\n        /* \"#utility.yul\":2274:2279   */\n      0x00\n        /* \"#utility.yul\":2305:2311   */\n      dup2\n        /* \"#utility.yul\":2299:2312   */\n      mload\n        /* \"#utility.yul\":2290:2312   */\n      swap1\n      pop\n        /* \"#utility.yul\":2321:2353   */\n      tag_81\n        /* \"#utility.yul\":2347:2352   */\n      dup2\n        /* \"#utility.yul\":2321:2353   */\n      tag_36\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2218:2359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2365:2451   */\n    tag_38:\n        /* \"#utility.yul\":2400:2407   */\n      0x00\n        /* \"#utility.yul\":2440:2444   */\n      0xff\n        /* \"#utility.yul\":2433:2438   */\n      dup3\n        /* \"#utility.yul\":2429:2445   */\n      and\n        /* \"#utility.yul\":2418:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2365:2451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2457:2575   */\n    tag_39:\n        /* \"#utility.yul\":2528:2550   */\n      tag_84\n        /* \"#utility.yul\":2544:2549   */\n      dup2\n        /* \"#utility.yul\":2528:2550   */\n      tag_38\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2518:2551   */\n      eq\n        /* \"#utility.yul\":2508:2569   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":2565:2566   */\n      0x00\n        /* \"#utility.yul\":2562:2563   */\n      0x00\n        /* \"#utility.yul\":2555:2567   */\n      revert\n        /* \"#utility.yul\":2508:2569   */\n    tag_85:\n        /* \"#utility.yul\":2457:2575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2581:2720   */\n    tag_40:\n        /* \"#utility.yul\":2636:2641   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      dup2\n        /* \"#utility.yul\":2661:2674   */\n      mload\n        /* \"#utility.yul\":2652:2674   */\n      swap1\n      pop\n        /* \"#utility.yul\":2683:2714   */\n      tag_87\n        /* \"#utility.yul\":2708:2713   */\n      dup2\n        /* \"#utility.yul\":2683:2714   */\n      tag_39\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2581:2720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2726:2816   */\n    tag_41:\n        /* \"#utility.yul\":2760:2767   */\n      0x00\n        /* \"#utility.yul\":2803:2808   */\n      dup2\n        /* \"#utility.yul\":2796:2809   */\n      iszero\n        /* \"#utility.yul\":2789:2810   */\n      iszero\n        /* \"#utility.yul\":2778:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2726:2816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2822:2938   */\n    tag_42:\n        /* \"#utility.yul\":2892:2913   */\n      tag_90\n        /* \"#utility.yul\":2907:2912   */\n      dup2\n        /* \"#utility.yul\":2892:2913   */\n      tag_41\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2885:2890   */\n      dup2\n        /* \"#utility.yul\":2882:2914   */\n      eq\n        /* \"#utility.yul\":2872:2932   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2872:2932   */\n    tag_91:\n        /* \"#utility.yul\":2822:2938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2944:3081   */\n    tag_43:\n        /* \"#utility.yul\":2998:3003   */\n      0x00\n        /* \"#utility.yul\":3029:3035   */\n      dup2\n        /* \"#utility.yul\":3023:3036   */\n      mload\n        /* \"#utility.yul\":3014:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":3045:3075   */\n      tag_93\n        /* \"#utility.yul\":3069:3074   */\n      dup2\n        /* \"#utility.yul\":3045:3075   */\n      tag_42\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2944:3081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3087:4358   */\n    tag_17:\n        /* \"#utility.yul\":3201:3207   */\n      0x00\n        /* \"#utility.yul\":3209:3215   */\n      0x00\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3225:3231   */\n      0x00\n        /* \"#utility.yul\":3233:3239   */\n      0x00\n        /* \"#utility.yul\":3241:3247   */\n      0x00\n        /* \"#utility.yul\":3249:3255   */\n      0x00\n        /* \"#utility.yul\":3298:3301   */\n      0xe0\n        /* \"#utility.yul\":3286:3295   */\n      dup9\n        /* \"#utility.yul\":3277:3284   */\n      dup11\n        /* \"#utility.yul\":3273:3296   */\n      sub\n        /* \"#utility.yul\":3269:3302   */\n      slt\n        /* \"#utility.yul\":3266:3386   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3305:3384   */\n      tag_96\n      tag_28\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3266:3386   */\n    tag_95:\n        /* \"#utility.yul\":3425:3426   */\n      0x00\n        /* \"#utility.yul\":3450:3514   */\n      tag_97\n        /* \"#utility.yul\":3506:3513   */\n      dup11\n        /* \"#utility.yul\":3497:3503   */\n      dup3\n        /* \"#utility.yul\":3486:3495   */\n      dup12\n        /* \"#utility.yul\":3482:3504   */\n      add\n        /* \"#utility.yul\":3450:3514   */\n      tag_31\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3440:3514   */\n      swap8\n      pop\n        /* \"#utility.yul\":3396:3524   */\n      pop\n        /* \"#utility.yul\":3563:3565   */\n      0x20\n        /* \"#utility.yul\":3589:3651   */\n      tag_98\n        /* \"#utility.yul\":3643:3650   */\n      dup11\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup12\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3589:3651   */\n      tag_34\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3579:3651   */\n      swap7\n      pop\n        /* \"#utility.yul\":3534:3661   */\n      pop\n        /* \"#utility.yul\":3700:3702   */\n      0x40\n        /* \"#utility.yul\":3726:3789   */\n      tag_99\n        /* \"#utility.yul\":3781:3788   */\n      dup11\n        /* \"#utility.yul\":3772:3778   */\n      dup3\n        /* \"#utility.yul\":3761:3770   */\n      dup12\n        /* \"#utility.yul\":3757:3779   */\n      add\n        /* \"#utility.yul\":3726:3789   */\n      tag_37\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3716:3789   */\n      swap6\n      pop\n        /* \"#utility.yul\":3671:3799   */\n      pop\n        /* \"#utility.yul\":3838:3840   */\n      0x60\n        /* \"#utility.yul\":3864:3927   */\n      tag_100\n        /* \"#utility.yul\":3919:3926   */\n      dup11\n        /* \"#utility.yul\":3910:3916   */\n      dup3\n        /* \"#utility.yul\":3899:3908   */\n      dup12\n        /* \"#utility.yul\":3895:3917   */\n      add\n        /* \"#utility.yul\":3864:3927   */\n      tag_37\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3854:3927   */\n      swap5\n      pop\n        /* \"#utility.yul\":3809:3937   */\n      pop\n        /* \"#utility.yul\":3976:3979   */\n      0x80\n        /* \"#utility.yul\":4003:4066   */\n      tag_101\n        /* \"#utility.yul\":4058:4065   */\n      dup11\n        /* \"#utility.yul\":4049:4055   */\n      dup3\n        /* \"#utility.yul\":4038:4047   */\n      dup12\n        /* \"#utility.yul\":4034:4056   */\n      add\n        /* \"#utility.yul\":4003:4066   */\n      tag_37\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3993:4066   */\n      swap4\n      pop\n        /* \"#utility.yul\":3947:4076   */\n      pop\n        /* \"#utility.yul\":4115:4118   */\n      0xa0\n        /* \"#utility.yul\":4142:4204   */\n      tag_102\n        /* \"#utility.yul\":4196:4203   */\n      dup11\n        /* \"#utility.yul\":4187:4193   */\n      dup3\n        /* \"#utility.yul\":4176:4185   */\n      dup12\n        /* \"#utility.yul\":4172:4194   */\n      add\n        /* \"#utility.yul\":4142:4204   */\n      tag_40\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4132:4204   */\n      swap3\n      pop\n        /* \"#utility.yul\":4086:4214   */\n      pop\n        /* \"#utility.yul\":4253:4256   */\n      0xc0\n        /* \"#utility.yul\":4280:4341   */\n      tag_103\n        /* \"#utility.yul\":4333:4340   */\n      dup11\n        /* \"#utility.yul\":4324:4330   */\n      dup3\n        /* \"#utility.yul\":4313:4322   */\n      dup12\n        /* \"#utility.yul\":4309:4331   */\n      add\n        /* \"#utility.yul\":4280:4341   */\n      tag_43\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4270:4341   */\n      swap2\n      pop\n        /* \"#utility.yul\":4224:4351   */\n      pop\n        /* \"#utility.yul\":3087:4358   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4544   */\n    tag_44:\n        /* \"#utility.yul\":4412:4489   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4409:4410   */\n      0x00\n        /* \"#utility.yul\":4402:4490   */\n      mstore\n        /* \"#utility.yul\":4509:4513   */\n      0x11\n        /* \"#utility.yul\":4506:4507   */\n      0x04\n        /* \"#utility.yul\":4499:4514   */\n      mstore\n        /* \"#utility.yul\":4533:4537   */\n      0x24\n        /* \"#utility.yul\":4530:4531   */\n      0x00\n        /* \"#utility.yul\":4523:4538   */\n      revert\n        /* \"#utility.yul\":4550:4652   */\n    tag_45:\n        /* \"#utility.yul\":4592:4600   */\n      0x00\n        /* \"#utility.yul\":4639:4644   */\n      dup2\n        /* \"#utility.yul\":4636:4637   */\n      0x01\n        /* \"#utility.yul\":4632:4645   */\n      shr\n        /* \"#utility.yul\":4611:4645   */\n      swap1\n      pop\n        /* \"#utility.yul\":4550:4652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4658:5506   */\n    tag_46:\n        /* \"#utility.yul\":4719:4724   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0x00\n        /* \"#utility.yul\":4750:4756   */\n      dup3\n        /* \"#utility.yul\":4741:4756   */\n      swap2\n      pop\n        /* \"#utility.yul\":4774:4779   */\n      dup4\n        /* \"#utility.yul\":4765:4779   */\n      swap1\n      pop\n        /* \"#utility.yul\":4788:5500   */\n    tag_107:\n        /* \"#utility.yul\":4809:4810   */\n      0x01\n        /* \"#utility.yul\":4799:4807   */\n      dup6\n        /* \"#utility.yul\":4796:4811   */\n      gt\n        /* \"#utility.yul\":4788:5500   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":4904:4908   */\n      dup1\n        /* \"#utility.yul\":4899:4902   */\n      dup7\n        /* \"#utility.yul\":4895:4909   */\n      div\n        /* \"#utility.yul\":4889:4893   */\n      dup2\n        /* \"#utility.yul\":4886:4910   */\n      gt\n        /* \"#utility.yul\":4883:4933   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4913:4931   */\n      tag_111\n      tag_44\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4883:4933   */\n    tag_110:\n        /* \"#utility.yul\":4963:4964   */\n      0x01\n        /* \"#utility.yul\":4953:4961   */\n      dup6\n        /* \"#utility.yul\":4949:4965   */\n      and\n        /* \"#utility.yul\":4946:5397   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":5378:5382   */\n      dup1\n        /* \"#utility.yul\":5371:5376   */\n      dup3\n        /* \"#utility.yul\":5367:5383   */\n      mul\n        /* \"#utility.yul\":5358:5383   */\n      swap2\n      pop\n        /* \"#utility.yul\":4946:5397   */\n    tag_112:\n        /* \"#utility.yul\":5428:5432   */\n      dup1\n        /* \"#utility.yul\":5422:5426   */\n      dup2\n        /* \"#utility.yul\":5418:5433   */\n      mul\n        /* \"#utility.yul\":5410:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5458:5490   */\n      tag_113\n        /* \"#utility.yul\":5481:5489   */\n      dup6\n        /* \"#utility.yul\":5458:5490   */\n      tag_45\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5446:5490   */\n      swap5\n      pop\n        /* \"#utility.yul\":4788:5500   */\n      jump(tag_107)\n    tag_109:\n        /* \"#utility.yul\":4658:5506   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5512:6585   */\n    tag_47:\n        /* \"#utility.yul\":5566:5571   */\n      0x00\n        /* \"#utility.yul\":5757:5765   */\n      dup3\n        /* \"#utility.yul\":5747:5787   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":5778:5779   */\n      0x01\n        /* \"#utility.yul\":5769:5779   */\n      swap1\n      pop\n        /* \"#utility.yul\":5780:5785   */\n      jump(tag_114)\n        /* \"#utility.yul\":5747:5787   */\n    tag_115:\n        /* \"#utility.yul\":5806:5810   */\n      dup2\n        /* \"#utility.yul\":5796:5832   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":5823:5824   */\n      0x00\n        /* \"#utility.yul\":5814:5824   */\n      swap1\n      pop\n        /* \"#utility.yul\":5825:5830   */\n      jump(tag_114)\n        /* \"#utility.yul\":5796:5832   */\n    tag_116:\n        /* \"#utility.yul\":5892:5896   */\n      dup2\n        /* \"#utility.yul\":5940:5941   */\n      0x01\n        /* \"#utility.yul\":5935:5962   */\n      dup2\n      eq\n      tag_118\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x02\n        /* \"#utility.yul\":5971:6162   */\n      dup2\n      eq\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5885:6162   */\n      jump(tag_117)\n        /* \"#utility.yul\":5935:5962   */\n    tag_118:\n        /* \"#utility.yul\":5953:5954   */\n      0x01\n        /* \"#utility.yul\":5944:5954   */\n      swap2\n      pop\n        /* \"#utility.yul\":5955:5960   */\n      pop\n      jump(tag_114)\n        /* \"#utility.yul\":5971:6162   */\n    tag_119:\n        /* \"#utility.yul\":6016:6019   */\n      0xff\n        /* \"#utility.yul\":6006:6014   */\n      dup5\n        /* \"#utility.yul\":6003:6020   */\n      gt\n        /* \"#utility.yul\":6000:6043   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":6023:6041   */\n      tag_121\n      tag_44\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":6000:6043   */\n    tag_120:\n        /* \"#utility.yul\":6072:6080   */\n      dup4\n        /* \"#utility.yul\":6069:6070   */\n      0x02\n        /* \"#utility.yul\":6065:6081   */\n      exp\n        /* \"#utility.yul\":6056:6081   */\n      swap2\n      pop\n        /* \"#utility.yul\":6107:6110   */\n      dup5\n        /* \"#utility.yul\":6100:6105   */\n      dup3\n        /* \"#utility.yul\":6097:6111   */\n      gt\n        /* \"#utility.yul\":6094:6134   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":6114:6132   */\n      tag_123\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":6094:6134   */\n    tag_122:\n        /* \"#utility.yul\":6147:6152   */\n      pop\n      jump(tag_114)\n        /* \"#utility.yul\":5885:6162   */\n    tag_117:\n      pop\n        /* \"#utility.yul\":6271:6273   */\n      0x20\n        /* \"#utility.yul\":6261:6269   */\n      dup4\n        /* \"#utility.yul\":6258:6274   */\n      lt\n        /* \"#utility.yul\":6252:6255   */\n      0x0133\n        /* \"#utility.yul\":6246:6250   */\n      dup4\n        /* \"#utility.yul\":6243:6256   */\n      lt\n        /* \"#utility.yul\":6239:6275   */\n      and\n        /* \"#utility.yul\":6221:6223   */\n      0x4e\n        /* \"#utility.yul\":6211:6219   */\n      dup5\n        /* \"#utility.yul\":6208:6224   */\n      lt\n        /* \"#utility.yul\":6203:6205   */\n      0x0b\n        /* \"#utility.yul\":6197:6201   */\n      dup5\n        /* \"#utility.yul\":6194:6206   */\n      lt\n        /* \"#utility.yul\":6190:6225   */\n      and\n        /* \"#utility.yul\":6174:6285   */\n      or\n        /* \"#utility.yul\":6171:6417   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":6327:6335   */\n      dup3\n        /* \"#utility.yul\":6321:6325   */\n      dup3\n        /* \"#utility.yul\":6317:6336   */\n      exp\n        /* \"#utility.yul\":6308:6336   */\n      swap1\n      pop\n        /* \"#utility.yul\":6362:6365   */\n      dup4\n        /* \"#utility.yul\":6355:6360   */\n      dup2\n        /* \"#utility.yul\":6352:6366   */\n      gt\n        /* \"#utility.yul\":6349:6389   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":6369:6387   */\n      tag_126\n      tag_44\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":6349:6389   */\n    tag_125:\n        /* \"#utility.yul\":6402:6407   */\n      jump(tag_114)\n        /* \"#utility.yul\":6171:6417   */\n    tag_124:\n        /* \"#utility.yul\":6442:6484   */\n      tag_127\n        /* \"#utility.yul\":6480:6483   */\n      dup5\n        /* \"#utility.yul\":6470:6478   */\n      dup5\n        /* \"#utility.yul\":6464:6468   */\n      dup5\n        /* \"#utility.yul\":6461:6462   */\n      0x01\n        /* \"#utility.yul\":6442:6484   */\n      tag_46\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6427:6484   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":6516:6520   */\n      dup2\n        /* \"#utility.yul\":6511:6514   */\n      dup5\n        /* \"#utility.yul\":6507:6521   */\n      div\n        /* \"#utility.yul\":6500:6505   */\n      dup2\n        /* \"#utility.yul\":6497:6522   */\n      gt\n        /* \"#utility.yul\":6494:6545   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":6525:6543   */\n      tag_129\n      tag_44\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6494:6545   */\n    tag_128:\n        /* \"#utility.yul\":6574:6578   */\n      dup2\n        /* \"#utility.yul\":6567:6572   */\n      dup2\n        /* \"#utility.yul\":6563:6579   */\n      mul\n        /* \"#utility.yul\":6554:6579   */\n      swap1\n      pop\n        /* \"#utility.yul\":5512:6585   */\n    tag_114:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6591:6872   */\n    tag_19:\n        /* \"#utility.yul\":6649:6654   */\n      0x00\n        /* \"#utility.yul\":6673:6696   */\n      tag_131\n        /* \"#utility.yul\":6691:6695   */\n      dup3\n        /* \"#utility.yul\":6673:6696   */\n      tag_25\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6665:6696   */\n      swap2\n      pop\n        /* \"#utility.yul\":6717:6742   */\n      tag_132\n        /* \"#utility.yul\":6733:6741   */\n      dup4\n        /* \"#utility.yul\":6717:6742   */\n      tag_38\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6705:6742   */\n      swap3\n      pop\n        /* \"#utility.yul\":6761:6865   */\n      tag_133\n        /* \"#utility.yul\":6798:6864   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6788:6796   */\n      dup5\n        /* \"#utility.yul\":6782:6786   */\n      dup5\n        /* \"#utility.yul\":6761:6865   */\n      tag_47\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6752:6865   */\n      swap1\n      pop\n        /* \"#utility.yul\":6591:6872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6878:7058   */\n    tag_48:\n        /* \"#utility.yul\":6926:7003   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6916:7004   */\n      mstore\n        /* \"#utility.yul\":7023:7027   */\n      0x12\n        /* \"#utility.yul\":7020:7021   */\n      0x04\n        /* \"#utility.yul\":7013:7028   */\n      mstore\n        /* \"#utility.yul\":7047:7051   */\n      0x24\n        /* \"#utility.yul\":7044:7045   */\n      0x00\n        /* \"#utility.yul\":7037:7052   */\n      revert\n        /* \"#utility.yul\":7064:7249   */\n    tag_21:\n        /* \"#utility.yul\":7104:7105   */\n      0x00\n        /* \"#utility.yul\":7121:7141   */\n      tag_136\n        /* \"#utility.yul\":7139:7140   */\n      dup3\n        /* \"#utility.yul\":7121:7141   */\n      tag_25\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":7116:7141   */\n      swap2\n      pop\n        /* \"#utility.yul\":7155:7175   */\n      tag_137\n        /* \"#utility.yul\":7173:7174   */\n      dup4\n        /* \"#utility.yul\":7155:7175   */\n      tag_25\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":7150:7175   */\n      swap3\n      pop\n        /* \"#utility.yul\":7194:7195   */\n      dup3\n        /* \"#utility.yul\":7184:7219   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":7199:7217   */\n      tag_139\n      tag_48\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":7184:7219   */\n    tag_138:\n        /* \"#utility.yul\":7241:7242   */\n      dup3\n        /* \"#utility.yul\":7238:7239   */\n      dup3\n        /* \"#utility.yul\":7234:7243   */\n      div\n        /* \"#utility.yul\":7229:7243   */\n      swap1\n      pop\n        /* \"#utility.yul\":7064:7249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:1",
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516106f73803806106f7833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6105eb8061010c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063bdd3d82514610038578063eb91d37e14610056575b5f5ffd5b610040610074565b60405161004d91906101c5565b60405180910390f35b61005e610098565b60405161006b91906101f6565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610107573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012b9190610315565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610171919061050e565b61017b9190610585565b905080935050505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101af82610186565b9050919050565b6101bf816101a5565b82525050565b5f6020820190506101d85f8301846101b6565b92915050565b5f819050919050565b6101f0816101de565b82525050565b5f6020820190506102095f8301846101e7565b92915050565b5f5ffd5b61021c81610186565b8114610226575f5ffd5b50565b5f8151905061023781610213565b92915050565b5f8160020b9050919050565b6102528161023d565b811461025c575f5ffd5b50565b5f8151905061026d81610249565b92915050565b5f61ffff82169050919050565b61028981610273565b8114610293575f5ffd5b50565b5f815190506102a481610280565b92915050565b5f60ff82169050919050565b6102bf816102aa565b81146102c9575f5ffd5b50565b5f815190506102da816102b6565b92915050565b5f8115159050919050565b6102f4816102e0565b81146102fe575f5ffd5b50565b5f8151905061030f816102eb565b92915050565b5f5f5f5f5f5f5f60e0888a0312156103305761032f61020f565b5b5f61033d8a828b01610229565b975050602061034e8a828b0161025f565b965050604061035f8a828b01610296565b95505060606103708a828b01610296565b94505060806103818a828b01610296565b93505060a06103928a828b016102cc565b92505060c06103a38a828b01610301565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610434578086048111156104105761040f6103b2565b5b600185161561041f5780820291505b808102905061042d856103df565b94506103f4565b94509492505050565b5f8261044c5760019050610507565b81610459575f9050610507565b816001811461046f5760028114610479576104a8565b6001915050610507565b60ff84111561048b5761048a6103b2565b5b8360020a9150848211156104a2576104a16103b2565b5b50610507565b5060208310610133831016604e8410600b84101617156104dd5782820a9050838111156104d8576104d76103b2565b5b610507565b6104ea84848460016103eb565b92509050818404811115610501576105006103b2565b5b81810290505b9392505050565b5f610518826101de565b9150610523836102aa565b92506105507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461043d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61058f826101de565b915061059a836101de565b9250826105aa576105a9610558565b5b82820490509291505056fea26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F7 CODESIZE SUB DUP1 PUSH2 0x6F7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5EB DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF DUP3 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x21C DUP2 PUSH2 0x186 JUMP JUMPDEST DUP2 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x237 DUP2 PUSH2 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x23D JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26D DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x289 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP2 EQ PUSH2 0x293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A4 DUP2 PUSH2 0x280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x2AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DA DUP2 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0x20F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x33D DUP11 DUP3 DUP12 ADD PUSH2 0x229 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34E DUP11 DUP3 DUP12 ADD PUSH2 0x25F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x35F DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x370 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x381 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x392 DUP11 DUP3 DUP12 ADD PUSH2 0x2CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3A3 DUP11 DUP3 DUP12 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x434 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x41F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x42D DUP6 PUSH2 0x3DF JUMP JUMPDEST SWAP5 POP PUSH2 0x3F4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x44C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH2 0x459 JUMPI PUSH0 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x46F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x479 JUMPI PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x507 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A1 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x507 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4DD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4EA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3EB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x518 DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x523 DUP4 PUSH2 0x2AA JUMP JUMPDEST SWAP3 POP PUSH2 0x550 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x58F DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x59A DUP4 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x558 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D EXTCODEHASH 0xE8 SWAP3 EXTCODECOPY 0xC7 CALLDATALOAD 0xCA 0x2A 0xC3 0xBB RETURNDATASIZE 0x2F 0xEB 0xFC CALLER PUSH21 0x7247ED18E8B191A596DBD301F92E164736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "52272:801:0:-:0;;;52532:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;52590:12;52576:11;;:26;;;;;;;;;;;;;;;;;;52532:77;52272:801;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;52272:801:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getCurrentPrice_1488": {
									"entryPoint": 152,
									"id": 1488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@uniswapPool_1441": {
									"entryPoint": 116,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bool": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7252:1",
										"nodeType": "YulBlock",
										"src": "0:7252:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "638:32:1",
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nativeSrc": "648:16:1",
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:1",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:1",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:1",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nativeSrc": "741:53:1",
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nativeSrc": "763:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nativeSrc": "751:37:1",
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nativeSrc": "751:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:1",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:1",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nativeSrc": "898:124:1",
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nativeSrc": "908:26:1",
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:1",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nativeSrc": "916:18:1",
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nativeSrc": "997:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nativeSrc": "944:71:1",
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nativeSrc": "944:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:1",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:1",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:1",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											},
											{
												"body": {
													"nativeSrc": "1068:35:1",
													"nodeType": "YulBlock",
													"src": "1068:35:1",
													"statements": [
														{
															"nativeSrc": "1078:19:1",
															"nodeType": "YulAssignment",
															"src": "1078:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:1"
																},
																"nativeSrc": "1088:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:1",
														"nodeType": "YulTypedName",
														"src": "1061:6:1",
														"type": ""
													}
												],
												"src": "1028:75:1"
											},
											{
												"body": {
													"nativeSrc": "1198:28:1",
													"nodeType": "YulBlock",
													"src": "1198:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:1"
																},
																"nativeSrc": "1208:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:1"
															},
															"nativeSrc": "1208:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:1"
											},
											{
												"body": {
													"nativeSrc": "1321:28:1",
													"nodeType": "YulBlock",
													"src": "1321:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:1"
																},
																"nativeSrc": "1331:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:1"
															},
															"nativeSrc": "1331:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:1"
											},
											{
												"body": {
													"nativeSrc": "1398:79:1",
													"nodeType": "YulBlock",
													"src": "1398:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:1",
																"nodeType": "YulBlock",
																"src": "1455:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:1"
																			},
																			"nativeSrc": "1457:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:1"
																		},
																		"nativeSrc": "1457:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1428:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:1"
																				},
																				"nativeSrc": "1428:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:1"
																		},
																		"nativeSrc": "1418:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:1"
																},
																"nativeSrc": "1411:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:1"
															},
															"nativeSrc": "1408:63:1",
															"nodeType": "YulIf",
															"src": "1408:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "1355:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:1",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"src": "1355:122:1"
											},
											{
												"body": {
													"nativeSrc": "1546:80:1",
													"nodeType": "YulBlock",
													"src": "1546:80:1",
													"statements": [
														{
															"nativeSrc": "1556:22:1",
															"nodeType": "YulAssignment",
															"src": "1556:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1565:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1565:5:1"
																},
																"nativeSrc": "1565:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1565:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1556:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1556:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1614:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1614:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "1587:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1587:26:1"
																},
																"nativeSrc": "1587:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1587:33:1"
															},
															"nativeSrc": "1587:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1587:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "1483:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1524:6:1",
														"nodeType": "YulTypedName",
														"src": "1524:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1532:3:1",
														"nodeType": "YulTypedName",
														"src": "1532:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1540:5:1",
														"nodeType": "YulTypedName",
														"src": "1540:5:1",
														"type": ""
													}
												],
												"src": "1483:143:1"
											},
											{
												"body": {
													"nativeSrc": "1675:47:1",
													"nodeType": "YulBlock",
													"src": "1675:47:1",
													"statements": [
														{
															"nativeSrc": "1685:31:1",
															"nodeType": "YulAssignment",
															"src": "1685:31:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1707:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:1",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1710:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1710:5:1"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1696:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "1696:10:1"
																},
																"nativeSrc": "1696:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1696:20:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1685:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1685:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1632:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1657:5:1",
														"nodeType": "YulTypedName",
														"src": "1657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1667:7:1",
														"nodeType": "YulTypedName",
														"src": "1667:7:1",
														"type": ""
													}
												],
												"src": "1632:90:1"
											},
											{
												"body": {
													"nativeSrc": "1769:77:1",
													"nodeType": "YulBlock",
													"src": "1769:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1824:16:1",
																"nodeType": "YulBlock",
																"src": "1824:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1836:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1826:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1826:6:1"
																			},
																			"nativeSrc": "1826:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1826:12:1"
																		},
																		"nativeSrc": "1826:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1826:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1792:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1815:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1815:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "1799:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "1799:15:1"
																				},
																				"nativeSrc": "1799:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1799:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1789:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1789:2:1"
																		},
																		"nativeSrc": "1789:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1789:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nativeSrc": "1782:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1782:41:1"
															},
															"nativeSrc": "1779:61:1",
															"nodeType": "YulIf",
															"src": "1779:61:1"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "1728:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1762:5:1",
														"nodeType": "YulTypedName",
														"src": "1762:5:1",
														"type": ""
													}
												],
												"src": "1728:118:1"
											},
											{
												"body": {
													"nativeSrc": "1913:78:1",
													"nodeType": "YulBlock",
													"src": "1913:78:1",
													"statements": [
														{
															"nativeSrc": "1923:22:1",
															"nodeType": "YulAssignment",
															"src": "1923:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1938:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1938:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1932:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1932:5:1"
																},
																"nativeSrc": "1932:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1932:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1923:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1923:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1979:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1979:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "1954:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "1954:24:1"
																},
																"nativeSrc": "1954:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1954:31:1"
															},
															"nativeSrc": "1954:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1954:31:1"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "1852:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1891:6:1",
														"nodeType": "YulTypedName",
														"src": "1891:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1899:3:1",
														"nodeType": "YulTypedName",
														"src": "1899:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1907:5:1",
														"nodeType": "YulTypedName",
														"src": "1907:5:1",
														"type": ""
													}
												],
												"src": "1852:139:1"
											},
											{
												"body": {
													"nativeSrc": "2041:45:1",
													"nodeType": "YulBlock",
													"src": "2041:45:1",
													"statements": [
														{
															"nativeSrc": "2051:29:1",
															"nodeType": "YulAssignment",
															"src": "2051:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2066:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2066:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2073:6:1",
																		"nodeType": "YulLiteral",
																		"src": "2073:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2062:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:1"
																},
																"nativeSrc": "2062:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2062:18:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2051:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "1997:89:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2023:5:1",
														"nodeType": "YulTypedName",
														"src": "2023:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2033:7:1",
														"nodeType": "YulTypedName",
														"src": "2033:7:1",
														"type": ""
													}
												],
												"src": "1997:89:1"
											},
											{
												"body": {
													"nativeSrc": "2134:78:1",
													"nodeType": "YulBlock",
													"src": "2134:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2190:16:1",
																"nodeType": "YulBlock",
																"src": "2190:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2199:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2192:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2192:6:1"
																			},
																			"nativeSrc": "2192:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2192:12:1"
																		},
																		"nativeSrc": "2192:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2192:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2157:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2157:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2181:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2181:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "2164:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "2164:16:1"
																				},
																				"nativeSrc": "2164:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2154:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2154:2:1"
																		},
																		"nativeSrc": "2154:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2154:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2147:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:1"
																},
																"nativeSrc": "2147:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2147:42:1"
															},
															"nativeSrc": "2144:62:1",
															"nodeType": "YulIf",
															"src": "2144:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "2092:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:1",
														"nodeType": "YulTypedName",
														"src": "2127:5:1",
														"type": ""
													}
												],
												"src": "2092:120:1"
											},
											{
												"body": {
													"nativeSrc": "2280:79:1",
													"nodeType": "YulBlock",
													"src": "2280:79:1",
													"statements": [
														{
															"nativeSrc": "2290:22:1",
															"nodeType": "YulAssignment",
															"src": "2290:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2305:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2305:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2299:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2299:5:1"
																},
																"nativeSrc": "2299:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2299:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2290:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2290:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2347:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2347:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "2321:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "2321:25:1"
																},
																"nativeSrc": "2321:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2321:32:1"
															},
															"nativeSrc": "2321:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "2321:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "2218:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2258:6:1",
														"nodeType": "YulTypedName",
														"src": "2258:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2274:5:1",
														"nodeType": "YulTypedName",
														"src": "2274:5:1",
														"type": ""
													}
												],
												"src": "2218:141:1"
											},
											{
												"body": {
													"nativeSrc": "2408:43:1",
													"nodeType": "YulBlock",
													"src": "2408:43:1",
													"statements": [
														{
															"nativeSrc": "2418:27:1",
															"nodeType": "YulAssignment",
															"src": "2418:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2433:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2433:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2440:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2440:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2429:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:1"
																},
																"nativeSrc": "2429:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2429:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2418:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2365:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2390:5:1",
														"nodeType": "YulTypedName",
														"src": "2390:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2400:7:1",
														"nodeType": "YulTypedName",
														"src": "2400:7:1",
														"type": ""
													}
												],
												"src": "2365:86:1"
											},
											{
												"body": {
													"nativeSrc": "2498:77:1",
													"nodeType": "YulBlock",
													"src": "2498:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2553:16:1",
																"nodeType": "YulBlock",
																"src": "2553:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2562:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2562:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2565:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2565:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2555:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2555:6:1"
																			},
																			"nativeSrc": "2555:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2555:12:1"
																		},
																		"nativeSrc": "2555:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2555:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2521:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2544:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2544:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2528:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "2528:15:1"
																				},
																				"nativeSrc": "2528:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2528:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2518:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2518:2:1"
																		},
																		"nativeSrc": "2518:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:1"
																},
																"nativeSrc": "2511:41:1",
																"nodeType": "YulFunctionCall",
																"src": "2511:41:1"
															},
															"nativeSrc": "2508:61:1",
															"nodeType": "YulIf",
															"src": "2508:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2457:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2491:5:1",
														"nodeType": "YulTypedName",
														"src": "2491:5:1",
														"type": ""
													}
												],
												"src": "2457:118:1"
											},
											{
												"body": {
													"nativeSrc": "2642:78:1",
													"nodeType": "YulBlock",
													"src": "2642:78:1",
													"statements": [
														{
															"nativeSrc": "2652:22:1",
															"nodeType": "YulAssignment",
															"src": "2652:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2667:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2667:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2661:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2661:5:1"
																},
																"nativeSrc": "2661:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2661:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2652:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2652:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2708:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2708:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2683:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "2683:24:1"
																},
																"nativeSrc": "2683:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2683:31:1"
															},
															"nativeSrc": "2683:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2683:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2581:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2620:6:1",
														"nodeType": "YulTypedName",
														"src": "2620:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2628:3:1",
														"nodeType": "YulTypedName",
														"src": "2628:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2636:5:1",
														"nodeType": "YulTypedName",
														"src": "2636:5:1",
														"type": ""
													}
												],
												"src": "2581:139:1"
											},
											{
												"body": {
													"nativeSrc": "2768:48:1",
													"nodeType": "YulBlock",
													"src": "2768:48:1",
													"statements": [
														{
															"nativeSrc": "2778:32:1",
															"nodeType": "YulAssignment",
															"src": "2778:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2803:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2803:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2796:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2796:6:1"
																		},
																		"nativeSrc": "2796:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2796:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2789:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:1"
																},
																"nativeSrc": "2789:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2778:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2778:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2726:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2750:5:1",
														"nodeType": "YulTypedName",
														"src": "2750:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2760:7:1",
														"nodeType": "YulTypedName",
														"src": "2760:7:1",
														"type": ""
													}
												],
												"src": "2726:90:1"
											},
											{
												"body": {
													"nativeSrc": "2862:76:1",
													"nodeType": "YulBlock",
													"src": "2862:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2916:16:1",
																"nodeType": "YulBlock",
																"src": "2916:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2925:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2928:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2918:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:1"
																			},
																			"nativeSrc": "2918:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:1"
																		},
																		"nativeSrc": "2918:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2885:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2885:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2907:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2907:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2892:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "2892:14:1"
																				},
																				"nativeSrc": "2892:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2892:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2882:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2882:2:1"
																		},
																		"nativeSrc": "2882:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2882:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:1"
																},
																"nativeSrc": "2875:40:1",
																"nodeType": "YulFunctionCall",
																"src": "2875:40:1"
															},
															"nativeSrc": "2872:60:1",
															"nodeType": "YulIf",
															"src": "2872:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2822:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2855:5:1",
														"nodeType": "YulTypedName",
														"src": "2855:5:1",
														"type": ""
													}
												],
												"src": "2822:116:1"
											},
											{
												"body": {
													"nativeSrc": "3004:77:1",
													"nodeType": "YulBlock",
													"src": "3004:77:1",
													"statements": [
														{
															"nativeSrc": "3014:22:1",
															"nodeType": "YulAssignment",
															"src": "3014:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3029:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3029:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3023:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3023:5:1"
																},
																"nativeSrc": "3023:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3023:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3014:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3069:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3069:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3045:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "3045:23:1"
																},
																"nativeSrc": "3045:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3045:30:1"
															},
															"nativeSrc": "3045:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3045:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2944:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2982:6:1",
														"nodeType": "YulTypedName",
														"src": "2982:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2990:3:1",
														"nodeType": "YulTypedName",
														"src": "2990:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2998:5:1",
														"nodeType": "YulTypedName",
														"src": "2998:5:1",
														"type": ""
													}
												],
												"src": "2944:137:1"
											},
											{
												"body": {
													"nativeSrc": "3256:1102:1",
													"nodeType": "YulBlock",
													"src": "3256:1102:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3303:83:1",
																"nodeType": "YulBlock",
																"src": "3303:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3305:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3305:77:1"
																			},
																			"nativeSrc": "3305:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3305:79:1"
																		},
																		"nativeSrc": "3305:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3277:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3277:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3286:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3273:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:1"
																		},
																		"nativeSrc": "3273:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3273:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3298:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3298:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3269:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:1"
																},
																"nativeSrc": "3269:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3269:33:1"
															},
															"nativeSrc": "3266:120:1",
															"nodeType": "YulIf",
															"src": "3266:120:1"
														},
														{
															"nativeSrc": "3396:128:1",
															"nodeType": "YulBlock",
															"src": "3396:128:1",
															"statements": [
																{
																	"nativeSrc": "3411:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3411:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3425:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3415:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3415:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3440:74:1",
																	"nodeType": "YulAssignment",
																	"src": "3440:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3486:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3486:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3497:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3497:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3482:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3482:3:1"
																				},
																				"nativeSrc": "3482:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3482:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3506:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3506:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "3450:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "3450:31:1"
																		},
																		"nativeSrc": "3450:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3450:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3440:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3440:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3534:127:1",
															"nodeType": "YulBlock",
															"src": "3534:127:1",
															"statements": [
																{
																	"nativeSrc": "3549:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3549:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3563:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3553:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3553:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3579:72:1",
																	"nodeType": "YulAssignment",
																	"src": "3579:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:1"
																				},
																				"nativeSrc": "3619:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "3589:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "3589:29:1"
																		},
																		"nativeSrc": "3589:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3579:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3579:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3671:128:1",
															"nodeType": "YulBlock",
															"src": "3671:128:1",
															"statements": [
																{
																	"nativeSrc": "3686:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3686:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3700:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3700:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3690:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3690:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3716:73:1",
																	"nodeType": "YulAssignment",
																	"src": "3716:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3761:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3761:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3772:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3757:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3757:3:1"
																				},
																				"nativeSrc": "3757:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3781:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "3726:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "3726:30:1"
																		},
																		"nativeSrc": "3726:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3726:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3716:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3716:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3809:128:1",
															"nodeType": "YulBlock",
															"src": "3809:128:1",
															"statements": [
																{
																	"nativeSrc": "3824:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3824:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3838:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3838:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3828:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3854:73:1",
																	"nodeType": "YulAssignment",
																	"src": "3854:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3899:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3899:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3910:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3910:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3895:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3895:3:1"
																				},
																				"nativeSrc": "3895:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3895:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "3864:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "3864:30:1"
																		},
																		"nativeSrc": "3864:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3864:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3854:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3854:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3947:129:1",
															"nodeType": "YulBlock",
															"src": "3947:129:1",
															"statements": [
																{
																	"nativeSrc": "3962:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3962:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3976:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3976:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3966:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3966:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3993:73:1",
																	"nodeType": "YulAssignment",
																	"src": "3993:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4038:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4038:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4049:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4049:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4034:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4034:3:1"
																				},
																				"nativeSrc": "4034:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4034:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4058:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4058:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "4003:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "4003:30:1"
																		},
																		"nativeSrc": "4003:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4003:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3993:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3993:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4086:128:1",
															"nodeType": "YulBlock",
															"src": "4086:128:1",
															"statements": [
																{
																	"nativeSrc": "4101:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4101:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4115:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4115:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4105:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4105:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4132:72:1",
																	"nodeType": "YulAssignment",
																	"src": "4132:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4176:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4176:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4187:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4187:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4172:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4172:3:1"
																				},
																				"nativeSrc": "4172:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4172:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4196:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4196:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4142:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "4142:29:1"
																		},
																		"nativeSrc": "4142:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4142:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "4132:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4132:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4224:127:1",
															"nodeType": "YulBlock",
															"src": "4224:127:1",
															"statements": [
																{
																	"nativeSrc": "4239:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4239:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4253:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4253:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4243:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4243:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4270:71:1",
																	"nodeType": "YulAssignment",
																	"src": "4270:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4313:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4313:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4324:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4324:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4309:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4309:3:1"
																				},
																				"nativeSrc": "4309:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4309:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4333:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4333:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4280:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4280:28:1"
																		},
																		"nativeSrc": "4280:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4280:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "4270:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4270:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "3087:1271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3178:9:1",
														"nodeType": "YulTypedName",
														"src": "3178:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3189:7:1",
														"nodeType": "YulTypedName",
														"src": "3189:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3201:6:1",
														"nodeType": "YulTypedName",
														"src": "3201:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3209:6:1",
														"nodeType": "YulTypedName",
														"src": "3209:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3217:6:1",
														"nodeType": "YulTypedName",
														"src": "3217:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3225:6:1",
														"nodeType": "YulTypedName",
														"src": "3225:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3233:6:1",
														"nodeType": "YulTypedName",
														"src": "3233:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3241:6:1",
														"nodeType": "YulTypedName",
														"src": "3241:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3249:6:1",
														"nodeType": "YulTypedName",
														"src": "3249:6:1",
														"type": ""
													}
												],
												"src": "3087:1271:1"
											},
											{
												"body": {
													"nativeSrc": "4392:152:1",
													"nodeType": "YulBlock",
													"src": "4392:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4409:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4409:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4412:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4412:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4402:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:1"
																},
																"nativeSrc": "4402:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4402:88:1"
															},
															"nativeSrc": "4402:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4402:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4506:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4506:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4509:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4509:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4499:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4499:6:1"
																},
																"nativeSrc": "4499:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4499:15:1"
															},
															"nativeSrc": "4499:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4499:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4530:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4530:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4533:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4523:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:1"
																},
																"nativeSrc": "4523:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4523:15:1"
															},
															"nativeSrc": "4523:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4523:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4364:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4364:180:1"
											},
											{
												"body": {
													"nativeSrc": "4601:51:1",
													"nodeType": "YulBlock",
													"src": "4601:51:1",
													"statements": [
														{
															"nativeSrc": "4611:34:1",
															"nodeType": "YulAssignment",
															"src": "4611:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4636:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4636:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4639:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4639:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4632:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:1"
																},
																"nativeSrc": "4632:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4632:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4611:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4611:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "4550:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4582:5:1",
														"nodeType": "YulTypedName",
														"src": "4582:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4592:8:1",
														"nodeType": "YulTypedName",
														"src": "4592:8:1",
														"type": ""
													}
												],
												"src": "4550:102:1"
											},
											{
												"body": {
													"nativeSrc": "4731:775:1",
													"nodeType": "YulBlock",
													"src": "4731:775:1",
													"statements": [
														{
															"nativeSrc": "4741:15:1",
															"nodeType": "YulAssignment",
															"src": "4741:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "4750:6:1",
																"nodeType": "YulIdentifier",
																"src": "4750:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4741:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4741:5:1"
																}
															]
														},
														{
															"nativeSrc": "4765:14:1",
															"nodeType": "YulAssignment",
															"src": "4765:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "4774:5:1",
																"nodeType": "YulIdentifier",
																"src": "4774:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4765:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4823:677:1",
																"nodeType": "YulBlock",
																"src": "4823:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4911:22:1",
																			"nodeType": "YulBlock",
																			"src": "4911:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4913:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "4913:16:1"
																						},
																						"nativeSrc": "4913:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4913:18:1"
																					},
																					"nativeSrc": "4913:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "4913:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4889:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4889:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4899:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4899:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4904:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4904:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4895:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4895:3:1"
																					},
																					"nativeSrc": "4895:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4895:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4886:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4886:2:1"
																			},
																			"nativeSrc": "4886:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4886:24:1"
																		},
																		"nativeSrc": "4883:50:1",
																		"nodeType": "YulIf",
																		"src": "4883:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "4978:419:1",
																			"nodeType": "YulBlock",
																			"src": "4978:419:1",
																			"statements": [
																				{
																					"nativeSrc": "5358:25:1",
																					"nodeType": "YulAssignment",
																					"src": "5358:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "5371:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "5371:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "5378:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "5378:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "5367:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5367:3:1"
																						},
																						"nativeSrc": "5367:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5367:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5358:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "5358:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4953:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4953:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4963:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4963:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4949:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4949:3:1"
																			},
																			"nativeSrc": "4949:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4949:16:1"
																		},
																		"nativeSrc": "4946:451:1",
																		"nodeType": "YulIf",
																		"src": "4946:451:1"
																	},
																	{
																		"nativeSrc": "5410:23:1",
																		"nodeType": "YulAssignment",
																		"src": "5410:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5422:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5422:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "5428:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5428:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "5418:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5418:3:1"
																			},
																			"nativeSrc": "5418:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5418:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "5410:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5410:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5446:44:1",
																		"nodeType": "YulAssignment",
																		"src": "5446:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5481:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "5481:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "5458:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "5458:22:1"
																			},
																			"nativeSrc": "5458:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5458:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5446:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5446:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4799:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4799:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4809:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4809:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4796:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4796:2:1"
																},
																"nativeSrc": "4796:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4796:15:1"
															},
															"nativeSrc": "4788:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4812:2:1",
																"nodeType": "YulBlock",
																"src": "4812:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4792:3:1",
																"nodeType": "YulBlock",
																"src": "4792:3:1",
																"statements": []
															},
															"src": "4788:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4658:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "4686:6:1",
														"nodeType": "YulTypedName",
														"src": "4686:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "4694:5:1",
														"nodeType": "YulTypedName",
														"src": "4694:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4701:8:1",
														"nodeType": "YulTypedName",
														"src": "4701:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "4711:3:1",
														"nodeType": "YulTypedName",
														"src": "4711:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4719:5:1",
														"nodeType": "YulTypedName",
														"src": "4719:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4726:4:1",
														"nodeType": "YulTypedName",
														"src": "4726:4:1",
														"type": ""
													}
												],
												"src": "4658:848:1"
											},
											{
												"body": {
													"nativeSrc": "5572:1013:1",
													"nodeType": "YulBlock",
													"src": "5572:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5767:20:1",
																"nodeType": "YulBlock",
																"src": "5767:20:1",
																"statements": [
																	{
																		"nativeSrc": "5769:10:1",
																		"nodeType": "YulAssignment",
																		"src": "5769:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5778:1:1",
																			"nodeType": "YulLiteral",
																			"src": "5778:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5769:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5769:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5780:5:1",
																		"nodeType": "YulLeave",
																		"src": "5780:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5757:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5757:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5750:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5750:6:1"
																},
																"nativeSrc": "5750:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5750:16:1"
															},
															"nativeSrc": "5747:40:1",
															"nodeType": "YulIf",
															"src": "5747:40:1"
														},
														{
															"body": {
																"nativeSrc": "5812:20:1",
																"nodeType": "YulBlock",
																"src": "5812:20:1",
																"statements": [
																	{
																		"nativeSrc": "5814:10:1",
																		"nodeType": "YulAssignment",
																		"src": "5814:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5823:1:1",
																			"nodeType": "YulLiteral",
																			"src": "5823:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5814:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5814:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5825:5:1",
																		"nodeType": "YulLeave",
																		"src": "5825:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5806:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5806:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5799:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5799:6:1"
																},
																"nativeSrc": "5799:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5799:12:1"
															},
															"nativeSrc": "5796:36:1",
															"nodeType": "YulIf",
															"src": "5796:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5942:20:1",
																		"nodeType": "YulBlock",
																		"src": "5942:20:1",
																		"statements": [
																			{
																				"nativeSrc": "5944:10:1",
																				"nodeType": "YulAssignment",
																				"src": "5944:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5953:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5953:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5944:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5944:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5955:5:1",
																				"nodeType": "YulLeave",
																				"src": "5955:5:1"
																			}
																		]
																	},
																	"nativeSrc": "5935:27:1",
																	"nodeType": "YulCase",
																	"src": "5935:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5940:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5940:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5986:176:1",
																		"nodeType": "YulBlock",
																		"src": "5986:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6021:22:1",
																					"nodeType": "YulBlock",
																					"src": "6021:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6023:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6023:16:1"
																								},
																								"nativeSrc": "6023:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6023:18:1"
																							},
																							"nativeSrc": "6023:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6023:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6006:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6006:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6016:3:1",
																							"nodeType": "YulLiteral",
																							"src": "6016:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6003:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6003:2:1"
																					},
																					"nativeSrc": "6003:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6003:17:1"
																				},
																				"nativeSrc": "6000:43:1",
																				"nodeType": "YulIf",
																				"src": "6000:43:1"
																			},
																			{
																				"nativeSrc": "6056:25:1",
																				"nodeType": "YulAssignment",
																				"src": "6056:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6069:1:1",
																							"nodeType": "YulLiteral",
																							"src": "6069:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6072:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6072:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6065:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6065:3:1"
																					},
																					"nativeSrc": "6065:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6065:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6056:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6056:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6112:22:1",
																					"nodeType": "YulBlock",
																					"src": "6112:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6114:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "6114:16:1"
																								},
																								"nativeSrc": "6114:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6114:18:1"
																							},
																							"nativeSrc": "6114:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6114:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6100:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "6100:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6107:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6107:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6097:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "6097:2:1"
																					},
																					"nativeSrc": "6097:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6097:14:1"
																				},
																				"nativeSrc": "6094:40:1",
																				"nodeType": "YulIf",
																				"src": "6094:40:1"
																			},
																			{
																				"nativeSrc": "6147:5:1",
																				"nodeType": "YulLeave",
																				"src": "6147:5:1"
																			}
																		]
																	},
																	"nativeSrc": "5971:191:1",
																	"nodeType": "YulCase",
																	"src": "5971:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5976:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5976:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "5892:4:1",
																"nodeType": "YulIdentifier",
																"src": "5892:4:1"
															},
															"nativeSrc": "5885:277:1",
															"nodeType": "YulSwitch",
															"src": "5885:277:1"
														},
														{
															"body": {
																"nativeSrc": "6294:123:1",
																"nodeType": "YulBlock",
																"src": "6294:123:1",
																"statements": [
																	{
																		"nativeSrc": "6308:28:1",
																		"nodeType": "YulAssignment",
																		"src": "6308:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6321:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "6321:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6327:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6327:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "6317:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6317:3:1"
																			},
																			"nativeSrc": "6317:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6317:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6308:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6367:22:1",
																			"nodeType": "YulBlock",
																			"src": "6367:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6369:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "6369:16:1"
																						},
																						"nativeSrc": "6369:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6369:18:1"
																					},
																					"nativeSrc": "6369:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "6369:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "6355:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6355:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "6362:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6362:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6352:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6352:2:1"
																			},
																			"nativeSrc": "6352:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6352:14:1"
																		},
																		"nativeSrc": "6349:40:1",
																		"nodeType": "YulIf",
																		"src": "6349:40:1"
																	},
																	{
																		"nativeSrc": "6402:5:1",
																		"nodeType": "YulLeave",
																		"src": "6402:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6197:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6197:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6203:2:1",
																						"nodeType": "YulLiteral",
																						"src": "6203:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6194:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6194:2:1"
																				},
																				"nativeSrc": "6194:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6194:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6211:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6211:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6221:2:1",
																						"nodeType": "YulLiteral",
																						"src": "6221:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6208:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6208:2:1"
																				},
																				"nativeSrc": "6208:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6208:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6190:3:1"
																		},
																		"nativeSrc": "6190:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6190:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6246:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6246:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6252:3:1",
																						"nodeType": "YulLiteral",
																						"src": "6252:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6243:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6243:2:1"
																				},
																				"nativeSrc": "6243:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6243:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6261:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6261:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6271:2:1",
																						"nodeType": "YulLiteral",
																						"src": "6271:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6258:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6258:2:1"
																				},
																				"nativeSrc": "6258:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6258:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6239:3:1"
																		},
																		"nativeSrc": "6239:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6174:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6174:2:1"
																},
																"nativeSrc": "6174:111:1",
																"nodeType": "YulFunctionCall",
																"src": "6174:111:1"
															},
															"nativeSrc": "6171:246:1",
															"nodeType": "YulIf",
															"src": "6171:246:1"
														},
														{
															"nativeSrc": "6427:57:1",
															"nodeType": "YulAssignment",
															"src": "6427:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6461:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6461:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6464:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6464:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6470:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6470:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "6480:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6480:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "6442:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "6442:18:1"
																},
																"nativeSrc": "6442:42:1",
																"nodeType": "YulFunctionCall",
																"src": "6442:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6427:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6427:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "6434:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6434:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6523:22:1",
																"nodeType": "YulBlock",
																"src": "6523:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6525:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6525:16:1"
																			},
																			"nativeSrc": "6525:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6525:18:1"
																		},
																		"nativeSrc": "6525:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6525:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "6500:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6500:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "6511:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6511:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "6516:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6516:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6507:3:1"
																		},
																		"nativeSrc": "6507:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6507:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6497:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6497:2:1"
																},
																"nativeSrc": "6497:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6497:25:1"
															},
															"nativeSrc": "6494:51:1",
															"nodeType": "YulIf",
															"src": "6494:51:1"
														},
														{
															"nativeSrc": "6554:25:1",
															"nodeType": "YulAssignment",
															"src": "6554:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "6567:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6567:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6574:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6574:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6563:3:1"
																},
																"nativeSrc": "6563:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6563:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6554:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6554:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "5512:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5542:4:1",
														"nodeType": "YulTypedName",
														"src": "5542:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5548:8:1",
														"nodeType": "YulTypedName",
														"src": "5548:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5558:3:1",
														"nodeType": "YulTypedName",
														"src": "5558:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5566:5:1",
														"nodeType": "YulTypedName",
														"src": "5566:5:1",
														"type": ""
													}
												],
												"src": "5512:1073:1"
											},
											{
												"body": {
													"nativeSrc": "6655:217:1",
													"nodeType": "YulBlock",
													"src": "6655:217:1",
													"statements": [
														{
															"nativeSrc": "6665:31:1",
															"nodeType": "YulAssignment",
															"src": "6665:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6691:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6691:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6673:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6673:17:1"
																},
																"nativeSrc": "6673:23:1",
																"nodeType": "YulFunctionCall",
																"src": "6673:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6665:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6665:4:1"
																}
															]
														},
														{
															"nativeSrc": "6705:37:1",
															"nodeType": "YulAssignment",
															"src": "6705:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6733:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6733:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6717:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "6717:15:1"
																},
																"nativeSrc": "6717:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6717:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "6705:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "6705:8:1"
																}
															]
														},
														{
															"nativeSrc": "6752:113:1",
															"nodeType": "YulAssignment",
															"src": "6752:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6782:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6782:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6788:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "6788:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6798:66:1",
																		"nodeType": "YulLiteral",
																		"src": "6798:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "6761:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "6761:20:1"
																},
																"nativeSrc": "6761:104:1",
																"nodeType": "YulFunctionCall",
																"src": "6761:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6752:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6752:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6591:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6630:4:1",
														"nodeType": "YulTypedName",
														"src": "6630:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6636:8:1",
														"nodeType": "YulTypedName",
														"src": "6636:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6649:5:1",
														"nodeType": "YulTypedName",
														"src": "6649:5:1",
														"type": ""
													}
												],
												"src": "6591:281:1"
											},
											{
												"body": {
													"nativeSrc": "6906:152:1",
													"nodeType": "YulBlock",
													"src": "6906:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:88:1"
															},
															"nativeSrc": "6916:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7020:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7020:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7023:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7023:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:1"
																},
																"nativeSrc": "7013:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7013:15:1"
															},
															"nativeSrc": "7013:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7013:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7044:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7044:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7047:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7047:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7037:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7037:6:1"
																},
																"nativeSrc": "7037:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7037:15:1"
															},
															"nativeSrc": "7037:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7037:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6878:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6878:180:1"
											},
											{
												"body": {
													"nativeSrc": "7106:143:1",
													"nodeType": "YulBlock",
													"src": "7106:143:1",
													"statements": [
														{
															"nativeSrc": "7116:25:1",
															"nodeType": "YulAssignment",
															"src": "7116:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7139:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7139:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7121:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7121:17:1"
																},
																"nativeSrc": "7121:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7121:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7116:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7116:1:1"
																}
															]
														},
														{
															"nativeSrc": "7150:25:1",
															"nodeType": "YulAssignment",
															"src": "7150:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7173:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7173:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7155:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7155:17:1"
																},
																"nativeSrc": "7155:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7155:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7150:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7150:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7197:22:1",
																"nodeType": "YulBlock",
																"src": "7197:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7199:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7199:16:1"
																			},
																			"nativeSrc": "7199:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7199:18:1"
																		},
																		"nativeSrc": "7199:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7199:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7194:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7194:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7187:6:1"
																},
																"nativeSrc": "7187:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7187:9:1"
															},
															"nativeSrc": "7184:35:1",
															"nodeType": "YulIf",
															"src": "7184:35:1"
														},
														{
															"nativeSrc": "7229:14:1",
															"nodeType": "YulAssignment",
															"src": "7229:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7238:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7238:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7241:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7241:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7234:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7234:3:1"
																},
																"nativeSrc": "7234:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7234:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7229:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7229:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7064:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7095:1:1",
														"nodeType": "YulTypedName",
														"src": "7095:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7098:1:1",
														"nodeType": "YulTypedName",
														"src": "7098:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7104:1:1",
														"nodeType": "YulTypedName",
														"src": "7104:1:1",
														"type": ""
													}
												],
												"src": "7064:185:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c8063bdd3d82514610038578063eb91d37e14610056575b5f5ffd5b610040610074565b60405161004d91906101c5565b60405180910390f35b61005e610098565b60405161006b91906101f6565b60405180910390f35b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610107573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061012b9190610315565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff16610171919061050e565b61017b9190610585565b905080935050505090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101af82610186565b9050919050565b6101bf816101a5565b82525050565b5f6020820190506101d85f8301846101b6565b92915050565b5f819050919050565b6101f0816101de565b82525050565b5f6020820190506102095f8301846101e7565b92915050565b5f5ffd5b61021c81610186565b8114610226575f5ffd5b50565b5f8151905061023781610213565b92915050565b5f8160020b9050919050565b6102528161023d565b811461025c575f5ffd5b50565b5f8151905061026d81610249565b92915050565b5f61ffff82169050919050565b61028981610273565b8114610293575f5ffd5b50565b5f815190506102a481610280565b92915050565b5f60ff82169050919050565b6102bf816102aa565b81146102c9575f5ffd5b50565b5f815190506102da816102b6565b92915050565b5f8115159050919050565b6102f4816102e0565b81146102fe575f5ffd5b50565b5f8151905061030f816102eb565b92915050565b5f5f5f5f5f5f5f60e0888a0312156103305761032f61020f565b5b5f61033d8a828b01610229565b975050602061034e8a828b0161025f565b965050604061035f8a828b01610296565b95505060606103708a828b01610296565b94505060806103818a828b01610296565b93505060a06103928a828b016102cc565b92505060c06103a38a828b01610301565b91505092959891949750929550565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610434578086048111156104105761040f6103b2565b5b600185161561041f5780820291505b808102905061042d856103df565b94506103f4565b94509492505050565b5f8261044c5760019050610507565b81610459575f9050610507565b816001811461046f5760028114610479576104a8565b6001915050610507565b60ff84111561048b5761048a6103b2565b5b8360020a9150848211156104a2576104a16103b2565b5b50610507565b5060208310610133831016604e8410600b84101617156104dd5782820a9050838111156104d8576104d76103b2565b5b610507565b6104ea84848460016103eb565b92509050818404811115610501576105006103b2565b5b81810290505b9392505050565b5f610518826101de565b9150610523836102aa565b92506105507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461043d565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61058f826101de565b915061059a836101de565b9250826105aa576105a9610558565b5b82820490509291505056fea26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x585 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF DUP3 PUSH2 0x186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x1A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0 DUP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x209 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x21C DUP2 PUSH2 0x186 JUMP JUMPDEST DUP2 EQ PUSH2 0x226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x237 DUP2 PUSH2 0x213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x23D JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x26D DUP2 PUSH2 0x249 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x289 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP2 EQ PUSH2 0x293 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A4 DUP2 PUSH2 0x280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF DUP2 PUSH2 0x2AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DA DUP2 PUSH2 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x330 JUMPI PUSH2 0x32F PUSH2 0x20F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x33D DUP11 DUP3 DUP12 ADD PUSH2 0x229 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x34E DUP11 DUP3 DUP12 ADD PUSH2 0x25F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x35F DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x370 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x381 DUP11 DUP3 DUP12 ADD PUSH2 0x296 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x392 DUP11 DUP3 DUP12 ADD PUSH2 0x2CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3A3 DUP11 DUP3 DUP12 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x434 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x41F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x42D DUP6 PUSH2 0x3DF JUMP JUMPDEST SWAP5 POP PUSH2 0x3F4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x44C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH2 0x459 JUMPI PUSH0 SWAP1 POP PUSH2 0x507 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x46F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x479 JUMPI PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x507 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x4A2 JUMPI PUSH2 0x4A1 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x507 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x4DD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x4EA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3EB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x500 PUSH2 0x3B2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x518 DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x523 DUP4 PUSH2 0x2AA JUMP JUMPDEST SWAP3 POP PUSH2 0x550 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x58F DUP3 PUSH2 0x1DE JUMP JUMPDEST SWAP2 POP PUSH2 0x59A DUP4 PUSH2 0x1DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5AA JUMPI PUSH2 0x5A9 PUSH2 0x558 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D EXTCODEHASH 0xE8 SWAP3 EXTCODECOPY 0xC7 CALLDATALOAD 0xCA 0x2A 0xC3 0xBB RETURNDATASIZE 0x2F 0xEB 0xFC CALLER PUSH21 0x7247ED18E8B191A596DBD301F92E164736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "52272:801:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52299:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52779:292;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;52299:26;;;;;;;;;;;;;:::o;52779:292::-;52829:7;52848:19;52885:11;;;;;;;;;;;52848:49;;52908:20;52944:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;52907:49;;;;;;;;52966:13;53012:8;53007:1;52990:12;52982:21;;:26;;;;:::i;:::-;:39;;;;:::i;:::-;52966:55;;53059:5;53052:12;;;;;52779:292;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:143::-;1540:5;1571:6;1565:13;1556:22;;1587:33;1614:5;1587:33;:::i;:::-;1483:143;;;;:::o;1632:90::-;1667:7;1710:5;1707:1;1696:20;1685:31;;1632:90;;;:::o;1728:118::-;1799:22;1815:5;1799:22;:::i;:::-;1792:5;1789:33;1779:61;;1836:1;1833;1826:12;1779:61;1728:118;:::o;1852:139::-;1907:5;1938:6;1932:13;1923:22;;1954:31;1979:5;1954:31;:::i;:::-;1852:139;;;;:::o;1997:89::-;2033:7;2073:6;2066:5;2062:18;2051:29;;1997:89;;;:::o;2092:120::-;2164:23;2181:5;2164:23;:::i;:::-;2157:5;2154:34;2144:62;;2202:1;2199;2192:12;2144:62;2092:120;:::o;2218:141::-;2274:5;2305:6;2299:13;2290:22;;2321:32;2347:5;2321:32;:::i;:::-;2218:141;;;;:::o;2365:86::-;2400:7;2440:4;2433:5;2429:16;2418:27;;2365:86;;;:::o;2457:118::-;2528:22;2544:5;2528:22;:::i;:::-;2521:5;2518:33;2508:61;;2565:1;2562;2555:12;2508:61;2457:118;:::o;2581:139::-;2636:5;2667:6;2661:13;2652:22;;2683:31;2708:5;2683:31;:::i;:::-;2581:139;;;;:::o;2726:90::-;2760:7;2803:5;2796:13;2789:21;2778:32;;2726:90;;;:::o;2822:116::-;2892:21;2907:5;2892:21;:::i;:::-;2885:5;2882:32;2872:60;;2928:1;2925;2918:12;2872:60;2822:116;:::o;2944:137::-;2998:5;3029:6;3023:13;3014:22;;3045:30;3069:5;3045:30;:::i;:::-;2944:137;;;;:::o;3087:1271::-;3201:6;3209;3217;3225;3233;3241;3249;3298:3;3286:9;3277:7;3273:23;3269:33;3266:120;;;3305:79;;:::i;:::-;3266:120;3425:1;3450:64;3506:7;3497:6;3486:9;3482:22;3450:64;:::i;:::-;3440:74;;3396:128;3563:2;3589:62;3643:7;3634:6;3623:9;3619:22;3589:62;:::i;:::-;3579:72;;3534:127;3700:2;3726:63;3781:7;3772:6;3761:9;3757:22;3726:63;:::i;:::-;3716:73;;3671:128;3838:2;3864:63;3919:7;3910:6;3899:9;3895:22;3864:63;:::i;:::-;3854:73;;3809:128;3976:3;4003:63;4058:7;4049:6;4038:9;4034:22;4003:63;:::i;:::-;3993:73;;3947:129;4115:3;4142:62;4196:7;4187:6;4176:9;4172:22;4142:62;:::i;:::-;4132:72;;4086:128;4253:3;4280:61;4333:7;4324:6;4313:9;4309:22;4280:61;:::i;:::-;4270:71;;4224:127;3087:1271;;;;;;;;;;:::o;4364:180::-;4412:77;4409:1;4402:88;4509:4;4506:1;4499:15;4533:4;4530:1;4523:15;4550:102;4592:8;4639:5;4636:1;4632:13;4611:34;;4550:102;;;:::o;4658:848::-;4719:5;4726:4;4750:6;4741:15;;4774:5;4765:14;;4788:712;4809:1;4799:8;4796:15;4788:712;;;4904:4;4899:3;4895:14;4889:4;4886:24;4883:50;;;4913:18;;:::i;:::-;4883:50;4963:1;4953:8;4949:16;4946:451;;;5378:4;5371:5;5367:16;5358:25;;4946:451;5428:4;5422;5418:15;5410:23;;5458:32;5481:8;5458:32;:::i;:::-;5446:44;;4788:712;;;4658:848;;;;;;;:::o;5512:1073::-;5566:5;5757:8;5747:40;;5778:1;5769:10;;5780:5;;5747:40;5806:4;5796:36;;5823:1;5814:10;;5825:5;;5796:36;5892:4;5940:1;5935:27;;;;5976:1;5971:191;;;;5885:277;;5935:27;5953:1;5944:10;;5955:5;;;5971:191;6016:3;6006:8;6003:17;6000:43;;;6023:18;;:::i;:::-;6000:43;6072:8;6069:1;6065:16;6056:25;;6107:3;6100:5;6097:14;6094:40;;;6114:18;;:::i;:::-;6094:40;6147:5;;;5885:277;;6271:2;6261:8;6258:16;6252:3;6246:4;6243:13;6239:36;6221:2;6211:8;6208:16;6203:2;6197:4;6194:12;6190:35;6174:111;6171:246;;;6327:8;6321:4;6317:19;6308:28;;6362:3;6355:5;6352:14;6349:40;;;6369:18;;:::i;:::-;6349:40;6402:5;;6171:246;6442:42;6480:3;6470:8;6464:4;6461:1;6442:42;:::i;:::-;6427:57;;;;6516:4;6511:3;6507:14;6500:5;6497:25;6494:51;;;6525:18;;:::i;:::-;6494:51;6574:4;6567:5;6563:16;6554:25;;5512:1073;;;;;;:::o;6591:281::-;6649:5;6673:23;6691:4;6673:23;:::i;:::-;6665:31;;6717:25;6733:8;6717:25;:::i;:::-;6705:37;;6761:104;6798:66;6788:8;6782:4;6761:104;:::i;:::-;6752:113;;6591:281;;;;:::o;6878:180::-;6926:77;6923:1;6916:88;7023:4;7020:1;7013:15;7047:4;7044:1;7037:15;7064:185;7104:1;7121:20;7139:1;7121:20;:::i;:::-;7116:25;;7155:20;7173:1;7155:20;:::i;:::-;7150:25;;7194:1;7184:35;;7199:18;;:::i;:::-;7184:35;7241:1;7238;7234:9;7229:14;;7064:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "303000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getCurrentPrice()": "infinite",
								"uniswapPool()": "2485"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 52532,
									"end": 52609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52590,
									"end": 52602,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52576,
									"end": 52587,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52576,
									"end": 52602,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52532,
									"end": 52609,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52272,
									"end": 53073,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d3fe8923cc735ca2ac3bb3d2febfc337407247ed18e8b191a596dbd301f92e164736f6c634300081e0033",
									".code": [
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "BDD3D825"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "EB91D37E"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52272,
											"end": 53073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52299,
											"end": 52325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52299,
											"end": 52325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52779,
											"end": 53071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 52779,
											"end": 53071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52299,
											"end": 52325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52829,
											"end": 52836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52848,
											"end": 52867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52885,
											"end": 52896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52848,
											"end": 52897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52848,
											"end": 52897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52908,
											"end": 52928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52944,
											"end": 52948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52944,
											"end": 52954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52954,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 52944,
											"end": 52956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 52944,
											"end": 52956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52907,
											"end": 52956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52966,
											"end": 52979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53012,
											"end": 53020,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53007,
											"end": 53008,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52990,
											"end": 53002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52982,
											"end": 53003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 52982,
											"end": 53008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 52982,
											"end": 53008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 52982,
											"end": 53021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52982,
											"end": 53021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52966,
											"end": 53021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52966,
											"end": 53021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53059,
											"end": 53064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53052,
											"end": 53064,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53052,
											"end": 53064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53052,
											"end": 53064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53052,
											"end": 53064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53052,
											"end": 53064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52779,
											"end": 53071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1614,
											"end": 1619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1587,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1587,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1632,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1708,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1696,
											"end": 1716,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1846,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1728,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1815,
											"end": 1820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1799,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1779,
											"end": 1840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1838,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1779,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1979,
											"end": 1984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1954,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1985,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1954,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1997,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 2066,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2212,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2092,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2164,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2164,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2188,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2206,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2321,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2451,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2445,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2575,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2457,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2528,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2551,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2508,
											"end": 2569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2567,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2508,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2708,
											"end": 2713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2683,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2714,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2683,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2816,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2726,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2938,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2822,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2907,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2892,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2913,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2892,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2914,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2872,
											"end": 2932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2872,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3069,
											"end": 3074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3045,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 3081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3302,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3266,
											"end": 3386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3305,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3305,
											"end": 3384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3384,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3305,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3386,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3266,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3495,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3450,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3514,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3450,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3514,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3589,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3651,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3781,
											"end": 3788,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3770,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3726,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3789,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3840,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3864,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3864,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3927,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4003,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4003,
											"end": 4066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4066,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4003,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4066,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4196,
											"end": 4203,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4142,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4204,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4280,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4333,
											"end": 4340,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4322,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4280,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4341,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4280,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3087,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4544,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4364,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4409,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4506,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4499,
											"end": 4514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4538,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4652,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4550,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4645,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4811,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4902,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4909,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4910,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4933,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4883,
											"end": 4933,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4913,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4933,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4883,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4953,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4946,
											"end": 5397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5383,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5397,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4946,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5432,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5433,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5481,
											"end": 5489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5458,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5458,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5490,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4788,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 5506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5747,
											"end": 5787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5769,
											"end": 5779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5780,
											"end": 5785,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5787,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5747,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5796,
											"end": 5832,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5825,
											"end": 5830,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5832,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5796,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5941,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5885,
											"end": 6162,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5935,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5954,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5944,
											"end": 5954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5971,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6006,
											"end": 6014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6020,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6043,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6000,
											"end": 6043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6023,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6043,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6000,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6070,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6065,
											"end": 6081,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6056,
											"end": 6081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6110,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6111,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6094,
											"end": 6134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6114,
											"end": 6132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6134,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6094,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 6162,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5885,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 6162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6261,
											"end": 6269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6246,
											"end": 6250,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6256,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6223,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 6211,
											"end": 6219,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6224,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6203,
											"end": 6205,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6206,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6285,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6366,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6349,
											"end": 6389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6369,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6389,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6349,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6402,
											"end": 6407,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6171,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6480,
											"end": 6483,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6478,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6442,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6442,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6497,
											"end": 6522,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6545,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6494,
											"end": 6545,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6525,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6545,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6494,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6563,
											"end": 6579,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 6585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6691,
											"end": 6695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6673,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6696,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6673,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6665,
											"end": 6696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6733,
											"end": 6741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6717,
											"end": 6742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6717,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6798,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6788,
											"end": 6796,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6761,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6865,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6761,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6752,
											"end": 6865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6752,
											"end": 6865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 7058,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6878,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 7003,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 7004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7027,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7013,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7044,
											"end": 7045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7139,
											"end": 7140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7121,
											"end": 7141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7141,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7121,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7155,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7155,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7150,
											"end": 7175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7184,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7199,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7184,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7229,
											"end": 7243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CCK/Token/CCKToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getCurrentPrice()": "eb91d37e",
							"uniswapPool()": "bdd3d825"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract for retrieving the current price from a Uniswap V3 pool.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to set the Uniswap V3 pool address.\",\"params\":{\"_uniswapPool\":\"Address of the Uniswap V3 pool to be used for price retrieval.\"}},\"getCurrentPrice()\":{\"details\":\"Retrieves the current price from the Uniswap V3 pool.\",\"returns\":{\"_0\":\"uint256 The current price calculated from the pool's sqrtPriceX96.\"}}},\"title\":\"PriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"PriceOracle\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1441,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:PriceOracle",
								"label": "uniswapPool",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Whitelist": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract that manages a whitelist of addresses.",
						"kind": "dev",
						"methods": {
							"addToWhitelist(address)": {
								"details": "Adds a member to the whitelist.",
								"params": {
									"member": "Address of the user to be added to the whitelist."
								}
							},
							"isWhitelisted(address)": {
								"details": "Checks if a member is in the whitelist.",
								"params": {
									"member": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is whitelisted."
								}
							},
							"removeFromWhitelist(address)": {
								"details": "Removes a member from the whitelist.",
								"params": {
									"member": "Address of the user to be removed from the whitelist."
								}
							}
						},
						"title": "Whitelist",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24980:25856  contract Whitelist {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":24980:25856  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3af32abf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25051:25092  mapping(address => bool) public whitelist */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n    tag_10:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25807:25811  bool */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25839  whitelist */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25847  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25840:25846  member */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25830:25847  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25823:25847  return whitelist[member] */\n      swap1\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25745:25854  function isWhitelisted(address member) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n    tag_15:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25550:25555  false */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25539  whitelist */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25547  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25540:25546  member */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25547  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25530:25555  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25466:25562  function removeFromWhitelist(address member) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25051:25092  mapping(address => bool) public whitelist */\n    tag_18:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n    tag_22:\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25309:25313  true */\n      0x01\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25298  whitelist */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25306  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25299:25305  member */\n      dup4\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25306  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25289:25313  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/Token/CCKToken_flattened.sol\":25230:25320  function addToWhitelist(address member) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_27:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_29:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_30:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_41\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_29\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_31:\n        /* \"#utility.yul\":641:665   */\n      tag_43\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_44:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_32:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_46\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_31\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_9:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_49\n      tag_27\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":917:1036   */\n    tag_48:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_50\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_33:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_34:\n        /* \"#utility.yul\":1353:1374   */\n      tag_53\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_12:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_55\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_34\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102f28061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80633af32abf1461004e5780638ab1d6811461007e5780639b19251a1461009a578063e43252d7146100ca575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b60405161007591906102a3565b60405180910390f35b6100986004803603810190610093919061025e565b610137565b005b6100b460048036038101906100af919061025e565b61018d565b6040516100c191906102a3565b60405180910390f35b6100e460048036038101906100df919061025e565b6101a9565b005b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH29 0xA57A84CC7C4601190DC4C1F111229EFAFB7710B6B5C7FD335271704493 CALL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "24980:876:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addToWhitelist_935": {
									"entryPoint": 425,
									"id": 935,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isWhitelisted_961": {
									"entryPoint": 230,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeFromWhitelist_948": {
									"entryPoint": 311,
									"id": 948,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelist_922": {
									"entryPoint": 397,
									"id": 922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1600:1",
										"nodeType": "YulBlock",
										"src": "0:1600:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80633af32abf1461004e5780638ab1d6811461007e5780639b19251a1461009a578063e43252d7146100ca575b5f5ffd5b6100686004803603810190610063919061025e565b6100e6565b60405161007591906102a3565b60405180910390f35b6100986004803603810190610093919061025e565b610137565b005b6100b460048036038101906100af919061025e565b61018d565b6040516100c191906102a3565b60405180910390f35b6100e460048036038101906100df919061025e565b6101a9565b005b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f602052805f5260405f205f915054906101000a900460ff1681565b60015f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022d82610204565b9050919050565b61023d81610223565b8114610247575f5ffd5b50565b5f8135905061025881610234565b92915050565b5f6020828403121561027357610272610200565b5b5f6102808482850161024a565b91505092915050565b5f8115159050919050565b61029d81610289565b82525050565b5f6020820190506102b65f830184610294565b9291505056fea2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0xCA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x68 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D DUP3 PUSH2 0x204 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x223 JUMP JUMPDEST DUP2 EQ PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258 DUP2 PUSH2 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x200 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP5 DUP3 DUP6 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D DUP2 PUSH2 0x289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH29 0xA57A84CC7C4601190DC4C1F111229EFAFB7710B6B5C7FD335271704493 CALL PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "24980:876:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25745:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25466:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25051:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25230:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25745:109;25807:4;25830:9;:17;25840:6;25830:17;;;;;;;;;;;;;;;;;;;;;;;;;25823:24;;25745:109;;;:::o;25466:96::-;25550:5;25530:9;:17;25540:6;25530:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;25466:96;:::o;25051:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;25230:90::-;25309:4;25289:9;:17;25299:6;25289:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;25230:90;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "150800",
								"executionCost": "194",
								"totalCost": "150994"
							},
							"external": {
								"addToWhitelist(address)": "24846",
								"isWhitelisted(address)": "2847",
								"removeFromWhitelist(address)": "24801",
								"whitelist(address)": "2854"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24980,
									"end": 25856,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220057ca57a84cc7c4601190dc4c1f111229efafb7710b6b5c7fd335271704493f164736f6c634300081e0033",
									".code": [
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "3AF32ABF"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "8AB1D681"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "9B19251A"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "E43252D7"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24980,
											"end": 25856,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25745,
											"end": 25854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25745,
											"end": 25854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25745,
											"end": 25854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25466,
											"end": 25562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25466,
											"end": 25562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25051,
											"end": 25092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25051,
											"end": 25092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25051,
											"end": 25092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25230,
											"end": 25320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25230,
											"end": 25320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25830,
											"end": 25839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25840,
											"end": 25846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25830,
											"end": 25847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25823,
											"end": 25847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25823,
											"end": 25847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25745,
											"end": 25854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25530,
											"end": 25539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25540,
											"end": 25546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25530,
											"end": 25555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25466,
											"end": 25562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25051,
											"end": 25092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25309,
											"end": 25313,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25289,
											"end": 25298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25299,
											"end": 25305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25289,
											"end": 25313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25230,
											"end": 25320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/CCK/Token/CCKToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToWhitelist(address)": "e43252d7",
							"isWhitelisted(address)": "3af32abf",
							"removeFromWhitelist(address)": "8ab1d681",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract that manages a whitelist of addresses.\",\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address)\":{\"details\":\"Adds a member to the whitelist.\",\"params\":{\"member\":\"Address of the user to be added to the whitelist.\"}},\"isWhitelisted(address)\":{\"details\":\"Checks if a member is in the whitelist.\",\"params\":{\"member\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is whitelisted.\"}},\"removeFromWhitelist(address)\":{\"details\":\"Removes a member from the whitelist.\",\"params\":{\"member\":\"Address of the user to be removed from the whitelist.\"}}},\"title\":\"Whitelist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":\"Whitelist\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/Token/CCKToken_flattened.sol\":{\"keccak256\":\"0x50a1d9669fdd29bf3e7780f8e22d49953d1a06dc553fb5bb2f0b5f89954e965e\",\"urls\":[\"bzz-raw://e5adb408a5be68145e1ebac41eece9c0c7c30a4d2710087481fc463e6f32946f\",\"dweb:/ipfs/QmUPpEprw1b7Z6wVFvyj941pz6FkV683K7k6mPh4pFEZqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 922,
								"contract": "contracts/CCK/Token/CCKToken_flattened.sol:Whitelist",
								"label": "whitelist",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/CCK/Token/CCKToken_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1511:30:\n     |\n1511 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n     |                              ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 59848,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 59829
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1469:5:\n     |\n1469 |     function version() external view override returns (string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 58556,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 58459
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1477:5:\n     |\n1477 |     function identityRegistry() external view override returns (address) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 58810,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 58707
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1485:5:\n     |\n1485 |     function compliance() external view override returns (address) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 59044,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 58947
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1493:5:\n     |\n1493 |     function paused() external view override returns (bool) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 59279,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 59193
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n    --> contracts/CCK/Token/CCKToken_flattened.sol:1511:5:\n     |\n1511 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 59916,
					"file": "contracts/CCK/Token/CCKToken_flattened.sol",
					"start": 59804
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CCK/Token/CCKToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/Token/CCKToken_flattened.sol",
					"exportedSymbols": {
						"CCKToken": [
							1881
						],
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"Freezable": [
							1008
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC3643": [
							1538
						],
						"IERC721Errors": [
							218
						],
						"IUniswapV3Pool": [
							1437
						],
						"IUniswapV3PoolActions": [
							1279
						],
						"IUniswapV3PoolDerivedState": [
							1184
						],
						"IUniswapV3PoolEvents": [
							1422
						],
						"IUniswapV3PoolImmutables": [
							1047
						],
						"IUniswapV3PoolOwnerActions": [
							1304
						],
						"IUniswapV3PoolState": [
							1154
						],
						"Ownable": [
							916
						],
						"PriceOracle": [
							1489
						],
						"Whitelist": [
							962
						]
					},
					"id": 1882,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "133:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "159:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "241:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "254:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "423:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "432:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "470:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "454:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:57:0"
									},
									"src": "417:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "495:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "654:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "679:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "663:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "719:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "711:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:63:0"
									},
									"src": "648:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "732:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "811:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:0"
									},
									"scope": 77,
									"src": "802:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "966:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:9:0"
									},
									"scope": 77,
									"src": "939:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1013:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1240:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:6:0"
									},
									"scope": 77,
									"src": "1231:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1306:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1584:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:9:0"
									},
									"scope": 77,
									"src": "1575:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1664:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2345:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2361:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2403:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2402:6:0"
									},
									"scope": 77,
									"src": "2336:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2415:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2726:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2747:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2739:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2761:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2753:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:6:0"
									},
									"scope": 77,
									"src": "2717:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "231:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2978:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3121:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3121:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3121:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3005:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3103:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3134:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3202:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3232:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:15:0"
									},
									"scope": 100,
									"src": "3193:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3253:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3323:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3329:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3355:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:15:0"
									},
									"scope": 100,
									"src": "3314:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3376:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3463:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3489:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:7:0"
									},
									"scope": 100,
									"src": "3446:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "3093:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3622:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3648:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4163:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4239:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4256:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4260:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4256:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4249:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4186:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4196:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4230:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:9:0"
									},
									"scope": 129,
									"src": "4177:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4346:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4363:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4367:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4363:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4356:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4288:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4330:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4330:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4329:16:0"
									},
									"scope": 129,
									"src": "4279:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4456:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4473:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4466:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4393:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:9:0"
									},
									"scope": 129,
									"src": "4384:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1882,
							"src": "4145:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4630:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4656:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4808:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4827:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5147:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5196:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5188:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5213:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5205:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:49:0"
									},
									"src": "5141:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5227:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5390:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:16:0"
									},
									"src": "5384:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5431:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5601:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5630:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5622:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:18:0"
									},
									"src": "5595:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5646:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6002:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6054:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6046:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6073:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6065:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6028:52:0"
									},
									"src": "5996:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6087:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6272:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:18:0"
									},
									"src": "6266:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6317:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6523:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6542:17:0"
									},
									"src": "6517:43:0"
								}
							],
							"scope": 1882,
							"src": "4798:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6564:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6718:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6738:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6968:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "6987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6986:15:0"
									},
									"src": "6962:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7008:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7151:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7182:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7173:17:0"
									},
									"src": "7145:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7197:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7497:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7542:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7534:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7559:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7551:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:48:0"
									},
									"src": "7491:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7572:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7735:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7763:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7755:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7754:16:0"
									},
									"src": "7729:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7777:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7947:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7977:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7969:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7968:18:0"
									},
									"src": "7941:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "7993:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8251:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8286:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8278:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8277:35:0"
									},
									"src": "8245:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8319:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8504:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8526:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8525:18:0"
									},
									"src": "8498:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8550:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8758:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8788:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8780:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8779:18:0"
									},
									"src": "8752:46:0"
								}
							],
							"scope": 1882,
							"src": "6708:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8802:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8958:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "8979:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9351:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9386:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9378:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9377:66:0"
									},
									"src": "9345:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9450:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9613:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9642:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9633:16:0"
									},
									"src": "9607:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9656:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9826:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9849:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9848:18:0"
									},
									"src": "9820:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9873:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10140:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10177:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10169:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10195:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10187:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:33:0"
									},
									"src": "10134:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10208:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10393:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10424:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10416:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10415:18:0"
									},
									"src": "10387:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10440:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10648:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10679:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10671:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:18:0"
									},
									"src": "10642:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10695:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10986:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11020:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11012:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11039:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11031:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11011:41:0"
									},
									"src": "10980:73:0"
								}
							],
							"scope": 1882,
							"src": "8948:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11187:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12002:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12002:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12002:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12011:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12011:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12011:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12019:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12019:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12019:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12035:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12035:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12035:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11217:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "11993:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12098:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12054:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12070:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12054:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12081:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12186:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12114:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12130:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12114:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12157:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12149:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12141:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12220:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12204:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12204:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12254:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12239:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12239:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12280:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12265:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12265:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12507:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12517:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12517:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12517:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12540:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12540:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12294:152:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12463:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12484:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12462:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12507:0:0"
									},
									"scope": 771,
									"src": "12451:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12689:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12699:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12570:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12638:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12642:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12674:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12673:15:0"
									},
									"scope": 771,
									"src": "12629:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12893:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12903:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12724:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12840:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12846:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12878:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12877:15:0"
									},
									"scope": 771,
									"src": "12831:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13613:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13630:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13623:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12930:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13566:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13574:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13606:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13605:7:0"
									},
									"scope": 771,
									"src": "13557:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13760:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13777:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13770:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13645:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13708:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13719:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13750:9:0"
									},
									"scope": 771,
									"src": "13699:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13928:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13945:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "13955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13945:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13938:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13802:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13863:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13881:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13873:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13872:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13919:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13918:9:0"
									},
									"scope": 771,
									"src": "13854:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14240:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14258:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14250:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14250:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14266:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14266:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14250:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14305:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14288:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14288:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14288:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14325:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "13976:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14174:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14191:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14183:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14203:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14195:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14234:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:6:0"
									},
									"scope": 771,
									"src": "14165:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14490:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14507:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14519:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14507:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14507:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14500:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14349:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14410:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14420:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14443:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14435:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14419:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14480:9:0"
									},
									"scope": 771,
									"src": "14401:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14927:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14945:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14937:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14937:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14953:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14953:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14937:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "14984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "14991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "14975:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14975:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "14975:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15016:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14547:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14857:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14890:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14882:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14864:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14920:6:0"
									},
									"scope": 771,
									"src": "14848:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15719:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15737:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15729:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15729:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15747:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15747:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15729:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15791:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15800:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15769:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15769:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15769:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15832:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15816:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15816:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15816:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15852:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15040:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15635:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15656:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15648:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15670:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15662:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15682:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15674:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15647:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15713:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15713:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15712:6:0"
									},
									"scope": 771,
									"src": "15626:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16312:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16326:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16342:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16334:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16334:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16326:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16322:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16346:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16394:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16386:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16386:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16386:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16367:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16367:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16360:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16421:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16427:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16427:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16421:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16417:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16439:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16481:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16481:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16481:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16460:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16460:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16453:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16526:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16530:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16512:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15876:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16252:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16284:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16276:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16288:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16261:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16312:0:0"
									},
									"scope": 771,
									"src": "16243:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16933:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16955:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16955:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16947:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17121:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17143:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17135:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17135:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17157:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17167:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17157:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17135:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17190:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17204:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17190:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17186:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17211:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17261:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17267:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17280:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17236:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17236:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17229:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17314:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17421:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17431:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17421:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17439:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17453:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17439:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17421:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17421:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16943:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "16967:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17083:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17083:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17083:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17497:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17503:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17503:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17497:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17712:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17726:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17871:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17881:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17871:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17888:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17871:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17871:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17493:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17515:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17529:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17660:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17676:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17660:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17660:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17942:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17948:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "17952:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17933:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17933:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17928:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16549:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16867:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16875:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16897:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16889:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16909:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16901:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16874:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16933:0:0"
									},
									"scope": 771,
									"src": "16858:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18364:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18397:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18389:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18389:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18378:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18374:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18401:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18451:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18443:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18443:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18443:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18422:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18422:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18415:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18482:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18482:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18482:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18494:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18474:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18474:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18474:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "17971:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18317:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18331:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18322:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18364:0:0"
									},
									"scope": 771,
									"src": "18308:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18890:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18915:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18915:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18904:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18900:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18927:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18975:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18967:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18967:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18967:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18948:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18948:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18941:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19015:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19015:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19027:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18998:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "18998:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18522:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18843:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18874:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18866:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18848:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18890:0:0"
									},
									"scope": 771,
									"src": "18834:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19650:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19692:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19660:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19660:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19660:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19046:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19585:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19602:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19617:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19609:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19593:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19650:0:0"
									},
									"scope": 771,
									"src": "19576:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20649:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20663:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20672:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20672:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20663:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20659:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20684:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20734:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20726:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20726:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20726:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20705:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20705:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20698:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20780:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20772:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20772:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20761:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20757:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20784:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20833:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20825:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20825:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20825:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20805:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20805:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20798:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20856:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20868:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20856:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20856:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20886:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20856:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20856:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20905:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20901:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20916:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20944:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "20951:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "20960:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20935:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20935:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20930:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19710:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20560:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20592:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20584:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20621:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20568:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20649:0:0"
									},
									"scope": 771,
									"src": "20551:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21354:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21372:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21364:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21401:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21391:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21391:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21364:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21430:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21454:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21454:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21449:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21449:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21463:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21449:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21430:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21426:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21468:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21486:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21486:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21482:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21512:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21564:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21573:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21591:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21537:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21537:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21530:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21625:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21662:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21669:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21678:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21697:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21678:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21704:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21653:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21653:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21653:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "20989:271:0",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21274:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21330:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21322:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21289:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21354:0:0"
									},
									"scope": 771,
									"src": "21265:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1882,
							"src": "11975:9768:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21869:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22413:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22413:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22413:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21896:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22402:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22443:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22427:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22427:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22456:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22552:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22587:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22579:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22578:17:0"
									},
									"src": "22546:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22602:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22695:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22723:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22715:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22714:15:0"
									},
									"src": "22689:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22742:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22779:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22763:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22794:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22762:57:0"
									},
									"src": "22736:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "22980:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "22994:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23018:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23010:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23010:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22994:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "22990:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23022:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23071:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23063:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23063:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23063:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23043:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23043:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23036:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23113:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23094:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23094:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23094:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22826:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "22966:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "22958:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22957:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22980:0:0"
									},
									"scope": 916,
									"src": "22946:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23242:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23252:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23252:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23252:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23275:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23139:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23230:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23239:2:0"
									},
									"src": "23221:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23414:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23431:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23424:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23289:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23368:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23373:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23405:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23404:9:0"
									},
									"scope": 916,
									"src": "23359:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23562:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23576:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23587:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23587:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23576:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23572:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23601:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23649:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23649:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23622:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23622:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23615:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23450:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23526:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23537:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23562:0:0"
									},
									"scope": 916,
									"src": "23517:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24068:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24105:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24097:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24097:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24078:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24078:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24078:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23685:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24058:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24058:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24058:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24040:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24068:0:0"
									},
									"scope": 916,
									"src": "24014:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24334:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24348:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24360:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24360:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24348:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24344:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24372:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24421:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24413:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24413:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24413:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24393:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24393:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24386:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24444:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24444:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24444:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24121:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24324:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24324:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24324:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24273:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24299:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24291:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24290:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24334:0:0"
									},
									"scope": 916,
									"src": "24264:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24696:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24714:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24706:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24706:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24706:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24741:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24750:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24741:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24741:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24794:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24804:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24773:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24773:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24768:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24485:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24642:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24669:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24661:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24660:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24696:0:0"
									},
									"scope": 916,
									"src": "24633:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1882,
							"src": "22384:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24869:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "24894:85:0",
								"text": " @title Whitelist\n @dev A contract that manages a whitelist of addresses."
							},
							"fullyImplemented": true,
							"id": 962,
							"linearizedBaseContracts": [
								962
							],
							"name": "Whitelist",
							"nameLocation": "24989:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 922,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "25083:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 962,
									"src": "25051:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 921,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 919,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25059:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25051:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 920,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "25070:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "25279:41:0",
										"statements": [
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 928,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "25289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 930,
														"indexExpression": {
															"id": 929,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "25299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25289:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25309:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25289:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "25289:24:0"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "25099:126:0",
										"text": " @dev Adds a member to the whitelist.\n @param member Address of the user to be added to the whitelist."
									},
									"functionSelector": "e43252d7",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToWhitelist",
									"nameLocation": "25239:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "25262:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "25254:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25253:16:0"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25279:0:0"
									},
									"scope": 962,
									"src": "25230:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "25520:42:0",
										"statements": [
											{
												"expression": {
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 941,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "25530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 943,
														"indexExpression": {
															"id": 942,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "25540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25530:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25550:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25530:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "25530:25:0"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "25326:135:0",
										"text": " @dev Removes a member from the whitelist.\n @param member Address of the user to be removed from the whitelist."
									},
									"functionSelector": "8ab1d681",
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromWhitelist",
									"nameLocation": "25475:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "25503:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "25495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25494:16:0"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25520:0:0"
									},
									"scope": 962,
									"src": "25466:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "25813:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 956,
														"name": "whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "25830:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 958,
													"indexExpression": {
														"id": 957,
														"name": "member",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "25840:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25830:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 955,
												"id": 959,
												"nodeType": "Return",
												"src": "25823:24:0"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "25568:172:0",
										"text": " @dev Checks if a member is in the whitelist.\n @param member Address of the user to check.\n @return bool Indicates if the user is whitelisted."
									},
									"functionSelector": "3af32abf",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "25754:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "25776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "25768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25767:16:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "25807:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25806:6:0"
									},
									"scope": 962,
									"src": "25745:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "24980:876:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 963,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25902:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Freezable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 964,
								"nodeType": "StructuredDocumentation",
								"src": "25927:98:0",
								"text": " @title Freezable\n @dev Contract that allows freezing and unfreezing of user accounts."
							},
							"fullyImplemented": true,
							"id": 1008,
							"linearizedBaseContracts": [
								1008
							],
							"name": "Freezable",
							"nameLocation": "26035:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d0516650",
									"id": 968,
									"mutability": "mutable",
									"name": "frozen",
									"nameLocation": "26138:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1008,
									"src": "26106:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 967,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 965,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26114:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26106:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 966,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "26125:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "26346:36:0",
										"statements": [
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 974,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "26356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 976,
														"indexExpression": {
															"id": 975,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "26363:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26356:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26371:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "26356:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "26356:19:0"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "26151:147:0",
										"text": " @dev Freezes a user account, preventing it from performing certain actions.\n @param user Address of the user to be frozen."
									},
									"functionSelector": "e08ba51a",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "freezeUser",
									"nameLocation": "26312:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "26331:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "26323:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26322:14:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26346:0:0"
									},
									"scope": 1008,
									"src": "26303:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "26580:37:0",
										"statements": [
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 987,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "26590:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 989,
														"indexExpression": {
															"id": 988,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "26597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26590:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26605:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "26590:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "26590:20:0"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "26388:142:0",
										"text": " @dev Unfreezes a user account, allowing it to perform actions again.\n @param user Address of the user to be unfrozen."
									},
									"functionSelector": "cb4b73ab",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unfreezeUser",
									"nameLocation": "26544:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "26565:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "26557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26556:14:0"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26580:0:0"
									},
									"scope": 1008,
									"src": "26535:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "26872:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1002,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "26889:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1004,
													"indexExpression": {
														"id": 1003,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "26896:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26889:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1005,
												"nodeType": "Return",
												"src": "26882:26:0"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "26623:176:0",
										"text": " @dev Checks if a user account is frozen.\n @param userAddress Address of the user to check.\n @return bool Indicates if the user account is frozen."
									},
									"functionSelector": "e5839836",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "26813:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "26830:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "26822:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26821:21:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "26866:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26866:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26865:6:0"
									},
									"scope": 1008,
									"src": "26804:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "26026:891:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1009,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27001:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1010,
								"nodeType": "StructuredDocumentation",
								"src": "27027:153:0",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "27190:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "27221:138:0",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "27373:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27380:2:0"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "27406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27405:9:0"
									},
									"scope": 1047,
									"src": "27364:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "27421:113:0",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1022,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "27548:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27554:2:0"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "27580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27579:9:0"
									},
									"scope": 1047,
									"src": "27539:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "27595:114:0",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "27723:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27729:2:0"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "27755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27754:9:0"
									},
									"scope": 1047,
									"src": "27714:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "27770:84:0",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "27868:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27871:2:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "27897:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1031,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27897:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27896:8:0"
									},
									"scope": 1047,
									"src": "27859:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "27911:358:0",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "28283:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28294:2:0"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "28320:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1037,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "28320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28319:7:0"
									},
									"scope": 1047,
									"src": "28274:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "28333:363:0",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "28710:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28729:2:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "28755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1043,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28754:9:0"
									},
									"scope": 1047,
									"src": "28701:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "27180:1586:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1048,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28846:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1049,
								"nodeType": "StructuredDocumentation",
								"src": "28872:169:0",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1154,
							"linearizedBaseContracts": [
								1154
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "29051:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "29077:1140:0",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "30231:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30236:2:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "30307:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30299:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1052,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "30299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "30339:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30333:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1054,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "30333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "30364:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30357:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1056,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "30357:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "30401:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30394:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1058,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "30394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "30444:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30437:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1060,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "30437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "30490:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30484:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1062,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "30520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "30515:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30285:253:0"
									},
									"scope": 1154,
									"src": "30222:317:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "30545:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "30727:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30747:2:0"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "30773:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30772:9:0"
									},
									"scope": 1154,
									"src": "30718:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "30788:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "30970:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30990:2:0"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "31016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31015:9:0"
									},
									"scope": 1154,
									"src": "30961:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "31031:147:0",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "31192:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31204:2:0"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "31238:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "31230:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1082,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "31254:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "31246:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1084,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31229:32:0"
									},
									"scope": 1154,
									"src": "31183:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "31268:150:0",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "31432:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31441:2:0"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "31467:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1090,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31466:9:0"
									},
									"scope": 1154,
									"src": "31423:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "31482:1244:0",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "32740:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "32752:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32746:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1095,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32746:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32745:12:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "32826:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32818:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1098,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "32818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "32861:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32854:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1100,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "32854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "32895:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32887:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "32938:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32930:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "32979:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "32973:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1106,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "32973:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "33022:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "33014:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1108,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "33014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "33073:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "33066:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1110,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "33066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "33106:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "33101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32804:323:0"
									},
									"scope": 1154,
									"src": "32731:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "33134:99:0",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "33247:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "33264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "33258:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1117,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33257:20:0"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "33301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33300:9:0"
									},
									"scope": 1154,
									"src": "33238:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "33316:700:0",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "34030:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "34048:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34040:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34039:13:0"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "34121:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34113:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1128,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "34153:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34145:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "34199:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34191:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "34245:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34237:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1134,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "34278:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "34270:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1136,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34099:200:0"
									},
									"scope": 1154,
									"src": "34021:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "34306:749:0",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "35069:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "35090:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "35082:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35081:15:0"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "35164:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "35157:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1144,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "35157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "35198:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "35192:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1146,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "35192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "35234:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "35226:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1148,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "35226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "35286:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "35281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35281:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35143:164:0"
									},
									"scope": 1154,
									"src": "35060:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "29041:6269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1155,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35397:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1156,
								"nodeType": "StructuredDocumentation",
								"src": "35423:222:0",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1184,
							"linearizedBaseContracts": [
								1184
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "35655:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "35688:1045:0",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "36747:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "36773:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "36755:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1158,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "36755:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1159,
													"nodeType": "ArrayTypeName",
													"src": "36755:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36754:31:0"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "36848:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "36833:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1162,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "36833:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1163,
													"nodeType": "ArrayTypeName",
													"src": "36833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "36882:34:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "36865:51:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "36865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "36865:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36832:85:0"
									},
									"scope": 1184,
									"src": "36738:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "36924:771:0",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "37709:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "37741:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "37735:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1171,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "37735:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "37758:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "37752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1173,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "37752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37734:34:0"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "37835:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "37829:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1176,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "37829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "37877:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "37869:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1178,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "37869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "37927:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "37920:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1180,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "37920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37815:135:0"
									},
									"scope": 1184,
									"src": "37700:251:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "35645:2308:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1185,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38035:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1186,
								"nodeType": "StructuredDocumentation",
								"src": "38061:102:0",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1279,
							"linearizedBaseContracts": [
								1279
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "38173:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "38201:206:0",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "38421:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "38440:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "38432:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1188,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "38432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38431:22:0"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38462:0:0"
									},
									"scope": 1279,
									"src": "38412:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "38469:1029:0",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "39512:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "39534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "39559:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1196,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "39553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "39584:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1198,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "39578:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39611:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39603:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1200,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "39603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39642:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39627:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39627:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39516:136:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "39679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "39696:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "39688:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39670:34:0"
									},
									"scope": 1279,
									"src": "39503:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "39711:1053:0",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "40778:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "40803:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40795:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "40828:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1214,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "40822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "40853:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1216,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "40847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "40880:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40872:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1218,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "40872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "40914:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40906:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1220,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "40906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40785:151:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "40963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1223,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "40955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "40980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "40972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1225,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "40972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40954:34:0"
									},
									"scope": 1279,
									"src": "40769:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "40995:631:0",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "41640:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "41660:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "41654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1230,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "41654:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "41685:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "41679:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1232,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "41679:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41712:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "41704:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1234,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "41704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41644:80:0"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "41751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "41743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "41768:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "41760:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41742:34:0"
									},
									"scope": 1279,
									"src": "41631:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "41783:1015:0",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "42812:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "42834:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42826:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "42858:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42853:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "42885:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42878:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1248,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "42878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "42918:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42910:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1250,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "42910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42960:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42945:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42945:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42816:154:0"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "42996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "42989:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1255,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "42989:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "43012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "43005:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "43005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42988:32:0"
									},
									"scope": 1279,
									"src": "42803:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "43027:657:0",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "43698:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "43721:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "43713:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "43748:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "43740:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "43773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "43765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43805:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "43790:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43703:112:0"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43824:0:0"
									},
									"scope": 1279,
									"src": "43689:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "43831:367:0",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "44212:34:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "44254:26:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "44247:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1274,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "44247:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44246:35:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44290:0:0"
									},
									"scope": 1279,
									"src": "44203:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "38163:6130:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1280,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "44380:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1281,
								"nodeType": "StructuredDocumentation",
								"src": "44406:116:0",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1304,
							"linearizedBaseContracts": [
								1304
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "44532:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "44565:205:0",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "44784:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "44805:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "44799:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1283,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "44799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "44825:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "44819:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1285,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "44819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44798:40:0"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44847:0:0"
									},
									"scope": 1304,
									"src": "44775:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "44854:483:0",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "45351:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "45384:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "45376:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "45411:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "45403:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1293,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "45403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "45445:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "45437:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1295,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "45437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45366:101:0"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "45494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "45486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1298,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "45486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "45511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "45503:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1300,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "45503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45485:34:0"
									},
									"scope": 1304,
									"src": "45342:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "44522:1000:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1305,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45603:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1306,
								"nodeType": "StructuredDocumentation",
								"src": "45629:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1422,
							"linearizedBaseContracts": [
								1422
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "45727:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "45754:344:0",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 1313,
									"name": "Initialize",
									"nameLocation": "46109:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "46128:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "46120:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1308,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "46120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "46148:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "46142:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1310,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "46142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46119:34:0"
									},
									"src": "46103:51:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "46160:551:0",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 1330,
									"name": "Mint",
									"nameLocation": "46722:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "46744:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46736:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46760:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "46805:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46791:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1319,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "46791:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "46838:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46824:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1321,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "46824:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "46865:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46857:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1323,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "46857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "46889:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "46914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "46906:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46726:201:0"
									},
									"src": "46716:212:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "46934:493:0",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1345,
									"name": "Collect",
									"nameLocation": "47438:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "47471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47455:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "47494:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47486:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "47527:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47513:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1336,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "47513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "47560:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47546:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1338,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "47546:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "47587:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47579:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1340,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "47579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "47612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "47604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1342,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "47604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47445:180:0"
									},
									"src": "47432:194:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "47632:523:0",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1360,
									"name": "Burn",
									"nameLocation": "48166:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48180:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "48225:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48211:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1349,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "48211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "48258:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48244:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1351,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "48244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "48285:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48277:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1353,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "48277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "48309:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48301:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "48334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "48326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48170:177:0"
									},
									"src": "48160:188:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "48354:600:0",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1377,
									"name": "Swap",
									"nameLocation": "48965:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "48995:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "48979:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "49027:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49011:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "49053:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49046:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1366,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "49046:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "49077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1368,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "49070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "49102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49094:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1370,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "49094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "49132:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49124:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1372,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "49124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "49157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "49151:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1374,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "49151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48969:198:0"
									},
									"src": "48959:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "49174:562:0",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1392,
									"name": "Flash",
									"nameLocation": "49747:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "49778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49762:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "49810:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49794:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "49837:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49829:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "49862:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49854:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "49887:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "49910:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "49902:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49752:169:0"
									},
									"src": "49741:181:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "49928:451:0",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1399,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "50390:34:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "50441:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "50434:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1394,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "50434:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "50487:29:0",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "50480:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1396,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "50480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50424:98:0"
									},
									"src": "50384:139:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "50529:370:0",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1410,
									"name": "SetFeeProtocol",
									"nameLocation": "50910:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "50931:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "50925:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1401,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "50925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "50954:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "50948:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1403,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "50948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "50977:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "50971:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1405,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "50971:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "51000:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "50994:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1407,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "50994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50924:92:0"
									},
									"src": "50904:113:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "51023:384:0",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1421,
									"name": "CollectProtocol",
									"nameLocation": "51418:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "51450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "51434:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "51474:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "51458:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "51493:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "51485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1416,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "51485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "51510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "51502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1418,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "51502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51433:85:0"
									},
									"src": "51412:107:0"
								}
							],
							"scope": 1882,
							"src": "45717:5804:0",
							"usedErrors": [],
							"usedEvents": [
								1313,
								1330,
								1345,
								1360,
								1377,
								1392,
								1399,
								1410,
								1421
							]
						},
						{
							"id": 1423,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51591:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1425,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"51920:24:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1047,
										"src": "51920:24:0"
									},
									"id": 1426,
									"nodeType": "InheritanceSpecifier",
									"src": "51920:24:0"
								},
								{
									"baseName": {
										"id": 1427,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"51950:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "51950:19:0"
									},
									"id": 1428,
									"nodeType": "InheritanceSpecifier",
									"src": "51950:19:0"
								},
								{
									"baseName": {
										"id": 1429,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"51975:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1184,
										"src": "51975:26:0"
									},
									"id": 1430,
									"nodeType": "InheritanceSpecifier",
									"src": "51975:26:0"
								},
								{
									"baseName": {
										"id": 1431,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"52007:21:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1279,
										"src": "52007:21:0"
									},
									"id": 1432,
									"nodeType": "InheritanceSpecifier",
									"src": "52007:21:0"
								},
								{
									"baseName": {
										"id": 1433,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"52034:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1304,
										"src": "52034:26:0"
									},
									"id": 1434,
									"nodeType": "InheritanceSpecifier",
									"src": "52034:26:0"
								},
								{
									"baseName": {
										"id": 1435,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"52066:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1422,
										"src": "52066:20:0"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "52066:20:0"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "51623:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1437,
							"linearizedBaseContracts": [
								1437,
								1422,
								1304,
								1279,
								1184,
								1154,
								1047
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "51898:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1882,
							"src": "51888:203:0",
							"usedErrors": [],
							"usedEvents": [
								1313,
								1330,
								1345,
								1360,
								1377,
								1392,
								1399,
								1410,
								1421
							]
						},
						{
							"id": 1438,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "52140:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1439,
								"nodeType": "StructuredDocumentation",
								"src": "52166:105:0",
								"text": " @title PriceOracle\n @dev A contract for retrieving the current price from a Uniswap V3 pool."
							},
							"fullyImplemented": true,
							"id": 1489,
							"linearizedBaseContracts": [
								1489
							],
							"name": "PriceOracle",
							"nameLocation": "52281:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bdd3d825",
									"id": 1441,
									"mutability": "mutable",
									"name": "uniswapPool",
									"nameLocation": "52314:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1489,
									"src": "52299:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1440,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52299:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "52566:43:0",
										"statements": [
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1447,
														"name": "uniswapPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "52576:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1448,
														"name": "_uniswapPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "52590:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52576:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "52576:26:0"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "52366:161:0",
										"text": " @dev Constructor to set the Uniswap V3 pool address.\n @param _uniswapPool Address of the Uniswap V3 pool to be used for price retrieval."
									},
									"id": 1452,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_uniswapPool",
												"nameLocation": "52552:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "52544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52543:22:0"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52566:0:0"
									},
									"scope": 1489,
									"src": "52532:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "52838:233:0",
										"statements": [
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "52863:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "52848:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$1437",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1459,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1458,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"52848:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1437,
																"src": "52848:14:0"
															},
															"referencedDeclaration": 1437,
															"src": "52848:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1437",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"arguments": [
														{
															"id": 1462,
															"name": "uniswapPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "52885:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1461,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "52870:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$1437_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52870:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$1437",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52848:49:0"
											},
											{
												"assignments": [
													1466,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "52916:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "52908:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1465,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "52908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1470,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1467,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "52944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$1437",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52949:5:0",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1067,
														"src": "52944:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52944:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52907:49:0"
											},
											{
												"assignments": [
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "52974:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "52966:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1484,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1475,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "52990:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "52982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "52982:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52982:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53007:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "52982:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53012:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "313932",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53017:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_192_by_1",
																		"typeString": "int_const 192"
																	},
																	"value": "192"
																},
																"src": "53012:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																}
															}
														],
														"id": 1482,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "53011:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
															"typeString": "int_const 6277...(50 digits omitted)...2896"
														}
													},
													"src": "52982:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52966:55:0"
											},
											{
												"expression": {
													"id": 1485,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1472,
													"src": "53059:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1457,
												"id": 1486,
												"nodeType": "Return",
												"src": "53052:12:0"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "52615:159:0",
										"text": " @dev Retrieves the current price from the Uniswap V3 pool.\n @return uint256 The current price calculated from the pool's sqrtPriceX96."
									},
									"functionSelector": "eb91d37e",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "52788:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52803:2:0"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "52829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52828:9:0"
									},
									"scope": 1489,
									"src": "52779:292:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "52272:801:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "53111:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3643",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1491,
								"nodeType": "StructuredDocumentation",
								"src": "53136:93:0",
								"text": " @title IERC3643\n @dev Interface for on-chain identity management and compliance."
							},
							"fullyImplemented": false,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "IERC3643",
							"nameLocation": "53240:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "53255:116:0",
										"text": " @dev Returns the on-chain ID of the contract.\n @return address The address of the contract."
									},
									"functionSelector": "aba63705",
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "53385:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53394:2:0"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "53420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53419:9:0"
									},
									"scope": 1538,
									"src": "53376:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "53439:102:0",
										"text": " @dev Returns the version of the contract.\n @return string The version string."
									},
									"functionSelector": "54fd4d50",
									"id": 1503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "53555:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53562:2:0"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "53588:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "53588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53587:15:0"
									},
									"scope": 1538,
									"src": "53546:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "53613:116:0",
										"text": " @dev Returns the identity registry address.\n @return address The identity registry address."
									},
									"functionSelector": "134e18f4",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "53743:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53759:2:0"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "53785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53784:9:0"
									},
									"scope": 1538,
									"src": "53734:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "53804:102:0",
										"text": " @dev Returns the compliance address.\n @return address The compliance address."
									},
									"functionSelector": "6290865d",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "53920:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53930:2:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "53956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53955:9:0"
									},
									"scope": 1538,
									"src": "53911:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "53975:114:0",
										"text": " @dev Checks if the contract is paused.\n @return bool Indicates if the contract is paused."
									},
									"functionSelector": "5c975abb",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "54103:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54109:2:0"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "54135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54134:6:0"
									},
									"scope": 1538,
									"src": "54094:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "54151:160:0",
										"text": " @dev Checks if a user is frozen.\n @param userAddress Address of the user to check.\n @return bool Indicates if the user is frozen."
									},
									"functionSelector": "e5839836",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "54325:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "54342:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "54334:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54333:21:0"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "54378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54377:6:0"
									},
									"scope": 1538,
									"src": "54316:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "54394:175:0",
										"text": " @dev Returns the number of frozen tokens for a user.\n @param userAddress Address of the user to check.\n @return uint256 Amount of frozen tokens."
									},
									"functionSelector": "158b1a57",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "54583:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "54607:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "54599:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54598:21:0"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "54643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54642:9:0"
									},
									"scope": 1538,
									"src": "54574:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "53230:1424:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1539,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "54699:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1541,
										"name": "ERC20",
										"nameLocations": [
											"54919:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "54919:5:0"
									},
									"id": 1542,
									"nodeType": "InheritanceSpecifier",
									"src": "54919:5:0"
								},
								{
									"baseName": {
										"id": 1543,
										"name": "Ownable",
										"nameLocations": [
											"54926:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "54926:7:0"
									},
									"id": 1544,
									"nodeType": "InheritanceSpecifier",
									"src": "54926:7:0"
								},
								{
									"baseName": {
										"id": 1545,
										"name": "IERC3643",
										"nameLocations": [
											"54935:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1538,
										"src": "54935:8:0"
									},
									"id": 1546,
									"nodeType": "InheritanceSpecifier",
									"src": "54935:8:0"
								}
							],
							"canonicalName": "CCKToken",
							"contractDependencies": [
								962,
								1008,
								1489
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1540,
								"nodeType": "StructuredDocumentation",
								"src": "54730:167:0",
								"text": " @title CCKToken\n @dev ERC20 token implementation with additional features such as whitelisting,\n freezing accounts, and price retrieval from Uniswap V3."
							},
							"fullyImplemented": true,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								1538,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "CCKToken",
							"nameLocation": "54907:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1553,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "54974:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "54950:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1547,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "54950:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 1552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530305f303030",
											"id": 1548,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "54989:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1551,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1549,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "54999:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1550,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "55003:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "54999:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "54989:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d380242",
									"id": 1555,
									"mutability": "mutable",
									"name": "mintedAmount",
									"nameLocation": "55052:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "55037:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1554,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "55037:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84900b04",
									"id": 1558,
									"mutability": "mutable",
									"name": "whitelistContract",
									"nameLocation": "55127:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "55110:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Whitelist_$962",
										"typeString": "contract Whitelist"
									},
									"typeName": {
										"id": 1557,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1556,
											"name": "Whitelist",
											"nameLocations": [
												"55110:9:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 962,
											"src": "55110:9:0"
										},
										"referencedDeclaration": 962,
										"src": "55110:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Whitelist_$962",
											"typeString": "contract Whitelist"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56dd475a",
									"id": 1561,
									"mutability": "mutable",
									"name": "freezableContract",
									"nameLocation": "55205:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "55188:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Freezable_$1008",
										"typeString": "contract Freezable"
									},
									"typeName": {
										"id": 1560,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1559,
											"name": "Freezable",
											"nameLocations": [
												"55188:9:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1008,
											"src": "55188:9:0"
										},
										"referencedDeclaration": 1008,
										"src": "55188:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Freezable_$1008",
											"typeString": "contract Freezable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2630c12f",
									"id": 1564,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "55285:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "55266:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PriceOracle_$1489",
										"typeString": "contract PriceOracle"
									},
									"typeName": {
										"id": 1563,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1562,
											"name": "PriceOracle",
											"nameLocations": [
												"55266:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1489,
											"src": "55266:11:0"
										},
										"referencedDeclaration": 1489,
										"src": "55266:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PriceOracle_$1489",
											"typeString": "contract PriceOracle"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "55715:453:0",
										"statements": [
											{
												"expression": {
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1581,
														"name": "whitelistContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "55725:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Whitelist_$962",
															"typeString": "contract Whitelist"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "55745:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Whitelist_$962_$",
																"typeString": "function () returns (contract Whitelist)"
															},
															"typeName": {
																"id": 1583,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1582,
																	"name": "Whitelist",
																	"nameLocations": [
																		"55749:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 962,
																	"src": "55749:9:0"
																},
																"referencedDeclaration": 962,
																"src": "55749:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Whitelist_$962",
																	"typeString": "contract Whitelist"
																}
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55745:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Whitelist_$962",
															"typeString": "contract Whitelist"
														}
													},
													"src": "55725:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Whitelist_$962",
														"typeString": "contract Whitelist"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "55725:35:0"
											},
											{
												"expression": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1588,
														"name": "freezableContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "55770:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Freezable_$1008",
															"typeString": "contract Freezable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "55790:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Freezable_$1008_$",
																"typeString": "function () returns (contract Freezable)"
															},
															"typeName": {
																"id": 1590,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1589,
																	"name": "Freezable",
																	"nameLocations": [
																		"55794:9:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1008,
																	"src": "55794:9:0"
																},
																"referencedDeclaration": 1008,
																"src": "55794:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Freezable_$1008",
																	"typeString": "contract Freezable"
																}
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55790:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Freezable_$1008",
															"typeString": "contract Freezable"
														}
													},
													"src": "55770:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Freezable_$1008",
														"typeString": "contract Freezable"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "55770:35:0"
											},
											{
												"expression": {
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1595,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "55815:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracle_$1489",
															"typeString": "contract PriceOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1599,
																"name": "_uniswapPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "55845:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "55829:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_PriceOracle_$1489_$",
																"typeString": "function (address) returns (contract PriceOracle)"
															},
															"typeName": {
																"id": 1597,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1596,
																	"name": "PriceOracle",
																	"nameLocations": [
																		"55833:11:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1489,
																	"src": "55833:11:0"
																},
																"referencedDeclaration": 1489,
																"src": "55833:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PriceOracle_$1489",
																	"typeString": "contract PriceOracle"
																}
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55829:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PriceOracle_$1489",
															"typeString": "contract PriceOracle"
														}
													},
													"src": "55815:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PriceOracle_$1489",
														"typeString": "contract PriceOracle"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "55815:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1604,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "55877:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55888:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "55877:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55897:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "55877:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373207265717569726564",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55900:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															},
															"value": "At least one whitelisted address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															}
														],
														"id": 1603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55869:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "55869:75:0"
											},
											{
												"body": {
													"id": 1630,
													"nodeType": "Block",
													"src": "56002:72:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1625,
																			"name": "_whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "56049:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1627,
																		"indexExpression": {
																			"id": 1626,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "56060:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "56049:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1622,
																		"name": "whitelistContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "56016:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Whitelist_$962",
																			"typeString": "contract Whitelist"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56034:14:0",
																	"memberName": "addToWhitelist",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 935,
																	"src": "56016:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address) external"
																	}
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56016:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1629,
															"nodeType": "ExpressionStatement",
															"src": "56016:47:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "55974:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1616,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "55978:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55989:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55978:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55974:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1631,
												"initializationExpression": {
													"assignments": [
														1612
													],
													"declarations": [
														{
															"constant": false,
															"id": 1612,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "55967:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1631,
															"src": "55959:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1611,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55959:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1614,
													"initialValue": {
														"hexValue": "30",
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55971:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55959:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "55997:3:0",
														"subExpression": {
															"id": 1619,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "55997:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1621,
													"nodeType": "ExpressionStatement",
													"src": "55997:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55954:120:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1633,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56090:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56094:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56090:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "56102:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1632,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "56084:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56084:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "56084:31:0"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "55344:240:0",
										"text": " @dev Constructor to initialize the token and its associated contracts.\n @param _whitelist Array of addresses to be added to the whitelist\n @param _uniswapPool Address of the Uniswap V3 pool for price retrieval"
									},
									"id": 1639,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43434b",
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55667:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												},
												{
													"hexValue": "43434b",
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55674:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												}
											],
											"id": 1575,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1572,
												"name": "ERC20",
												"nameLocations": [
													"55661:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "55661:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55661:19:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1577,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "55698:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "55702:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "55698:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1579,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1576,
												"name": "Ownable",
												"nameLocations": [
													"55690:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "55690:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55690:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "55618:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "55601:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1566,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "55601:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1567,
													"nodeType": "ArrayTypeName",
													"src": "55601:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_uniswapPool",
												"nameLocation": "55638:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "55630:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55600:51:0"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55715:0:0"
									},
									"scope": 1881,
									"src": "55589:579:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "56435:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1652,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "56485:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1650,
																	"name": "whitelistContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "56453:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Whitelist_$962",
																		"typeString": "contract Whitelist"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "56471:13:0",
																"memberName": "isWhitelisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 961,
																"src": "56453:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56453:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077686974656c6973746564",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56490:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															},
															"value": "Not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72830cd2e69a452b3989df2d6c124f1de4827fe8ed6c5116814e4b49c3fcbdd0",
																"typeString": "literal_string \"Not whitelisted\""
															}
														],
														"id": 1649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56445:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "56445:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1658,
																	"name": "mintedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "56526:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1659,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "56541:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56526:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1661,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "56551:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "56526:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206578636565646564",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56565:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															},
															"value": "Total supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															}
														],
														"id": 1657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56518:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "56518:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1667,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "56605:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1668,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "56609:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1666,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "56599:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56599:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "56599:17:0"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "56626:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1672,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "56642:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "56626:22:0"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "56174:195:0",
										"text": " @dev Mints new tokens to a specified address, if the address is whitelisted.\n @param to Address to receive the minted tokens\n @param amount Amount of tokens to mint"
									},
									"functionSelector": "40c10f19",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1646,
												"name": "onlyOwner",
												"nameLocations": [
													"56425:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "56425:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56425:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "56383:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56396:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "56388:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "56408:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "56400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56387:28:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56435:0:0"
									},
									"scope": 1881,
									"src": "56374:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "56982:217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "57000:39:0",
															"subExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1690,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "57028:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "57032:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "57028:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1688,
																		"name": "freezableContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "57001:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Freezable_$1008",
																			"typeString": "contract Freezable"
																		}
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57019:8:0",
																	"memberName": "isFrozen",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1007,
																	"src": "57001:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57001:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57041:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "56992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56992:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "56992:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "57078:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1703,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1681,
																				"src": "57104:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57096:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1701,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "57096:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57096:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "57088:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1699,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57088:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57088:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57078:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57114:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57070:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "57070:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "57174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "57185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1710,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "57159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1881_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57165:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 381,
														"src": "57159:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57159:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1715,
												"nodeType": "Return",
												"src": "57152:40:0"
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "56661:232:0",
										"text": " @dev Transfers tokens to a specified address.\n @param recipient Address to receive the tokens\n @param amount Amount of tokens to transfer\n @return success Indicates if the transfer was successful"
									},
									"functionSelector": "a9059cbb",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "56907:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "56958:8:0"
									},
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "56924:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "56916:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "56943:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "56935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56915:35:0"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "56976:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56975:6:0"
									},
									"scope": 1881,
									"src": "56898:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										454
									],
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "57600:225:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "57618:35:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1733,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "57646:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1731,
																		"name": "freezableContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "57619:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Freezable_$1008",
																			"typeString": "contract Freezable"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57637:8:0",
																	"memberName": "isFrozen",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1007,
																	"src": "57619:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57619:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6465722069732066726f7a656e",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57655:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															},
															"value": "Sender is frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6e8cce1b874b4d4bf9fc86d85368f6ca55eaf9a69434084ec66b929b72cfd14",
																"typeString": "literal_string \"Sender is frozen\""
															}
														],
														"id": 1730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57610:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "57610:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "57692:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1745,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1724,
																				"src": "57718:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57710:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1743,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "57710:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57710:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "57702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "57702:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57702:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57692:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57728:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57684:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57684:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "57684:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "57792:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "57800:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "57811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1752,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "57773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1881_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57779:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 454,
														"src": "57773:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57773:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1729,
												"id": 1758,
												"nodeType": "Return",
												"src": "57766:52:0"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "57205:286:0",
										"text": " @dev Transfers tokens from one address to another.\n @param sender Address to send tokens from\n @param recipient Address to receive the tokens\n @param amount Amount of tokens to transfer\n @return success Indicates if the transfer was successful"
									},
									"functionSelector": "23b872dd",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "57505:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1726,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57576:8:0"
									},
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "57526:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "57518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "57542:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "57534:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "57561:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "57553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57517:51:0"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "57594:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57593:6:0"
									},
									"scope": 1881,
									"src": "57496:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "58082:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1769,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "58109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1768,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "58099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58099:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1771,
												"nodeType": "Return",
												"src": "58092:22:0"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "57831:177:0",
										"text": " @dev Returns the balance of a specified user.\n @param user Address of the user to check balance\n @return balance Amount of tokens held by the user"
									},
									"functionSelector": "12cae7af",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUser",
									"nameLocation": "58022:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "58044:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "58036:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58035:14:0"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "58073:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58072:9:0"
									},
									"scope": 1881,
									"src": "58013:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1497
									],
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "58309:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1782,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "58334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CCKToken_$1881",
																"typeString": "contract CCKToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_CCKToken_$1881",
																"typeString": "contract CCKToken"
															}
														],
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "58326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1780,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "58326:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58326:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1779,
												"id": 1784,
												"nodeType": "Return",
												"src": "58319:20:0"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "58127:115:0",
										"text": " @dev Returns the on-chain ID of the contract.\n @return address The address of the contract"
									},
									"functionSelector": "aba63705",
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "58256:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58282:8:0"
									},
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58265:2:0"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "58300:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58299:9:0"
									},
									"scope": 1881,
									"src": "58247:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1503
									],
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "58525:31:0",
										"statements": [
											{
												"expression": {
													"hexValue": "312e302e30",
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
														"typeString": "literal_string \"1.0.0\""
													},
													"value": "1.0.0"
												},
												"functionReturnParameters": 1792,
												"id": 1794,
												"nodeType": "Return",
												"src": "58535:14:0"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "58352:102:0",
										"text": " @dev Returns the version of the contract.\n @return version The version string"
									},
									"functionSelector": "54fd4d50",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "58468:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1789,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58492:8:0"
									},
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58475:2:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "58510:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "58510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58509:15:0"
									},
									"scope": 1881,
									"src": "58459:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "58776:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58801:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "58793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1803,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "58793:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58793:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1807,
												"nodeType": "Return",
												"src": "58786:17:0"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "58562:140:0",
										"text": " @dev Returns the identity registry address.\n @return address The identity registry address (currently returns zero)"
									},
									"functionSelector": "134e18f4",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "58716:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1799,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58749:8:0"
									},
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58732:2:0"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "58767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58766:9:0"
									},
									"scope": 1881,
									"src": "58707:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "59010:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59035:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "59027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59027:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59027:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1820,
												"nodeType": "Return",
												"src": "59020:17:0"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "58816:126:0",
										"text": " @dev Returns the compliance address.\n @return address The compliance address (currently returns zero)"
									},
									"functionSelector": "6290865d",
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "58956:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1812,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58983:8:0"
									},
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58966:2:0"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "59001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59000:9:0"
									},
									"scope": 1881,
									"src": "58947:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "59249:30:0",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "59266:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1828,
												"id": 1830,
												"nodeType": "Return",
												"src": "59259:12:0"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "59050:138:0",
										"text": " @dev Checks if the contract is paused.\n @return paused Indicates if the contract is paused (always returns false)"
									},
									"functionSelector": "5c975abb",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "59202:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1825,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59225:8:0"
									},
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59208:2:0"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "59243:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59242:6:0"
									},
									"scope": 1881,
									"src": "59193:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1529
									],
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "59527:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1843,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "59571:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1841,
															"name": "freezableContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "59544:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Freezable_$1008",
																"typeString": "contract Freezable"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59562:8:0",
														"memberName": "isFrozen",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1007,
														"src": "59544:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59544:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1845,
												"nodeType": "Return",
												"src": "59537:46:0"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "59285:160:0",
										"text": " @dev Checks if a user is frozen.\n @param userAddress Address of the user to check\n @return frozen Indicates if the user is frozen"
									},
									"functionSelector": "e5839836",
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "59459:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1837,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59503:8:0"
									},
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "59476:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "59468:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59467:21:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "59521:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59520:6:0"
									},
									"scope": 1881,
									"src": "59450:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1537
									],
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "59891:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "59908:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1855,
												"id": 1857,
												"nodeType": "Return",
												"src": "59901:8:0"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "59596:203:0",
										"text": " @dev Returns the number of frozen tokens for a user.\n @param userAddress Address of the user to check\n @return frozenTokens Amount of frozen tokens (currently returns zero)"
									},
									"functionSelector": "158b1a57",
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "59813:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1852,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59864:8:0"
									},
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "59837:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "59829:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59828:21:0"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "59882:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59881:9:0"
									},
									"scope": 1881,
									"src": "59804:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "60108:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1865,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "60125:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PriceOracle_$1489",
																"typeString": "contract PriceOracle"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60137:15:0",
														"memberName": "getCurrentPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1488,
														"src": "60125:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60125:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1864,
												"id": 1868,
												"nodeType": "Return",
												"src": "60118:36:0"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "59922:122:0",
										"text": " @dev Retrieves the current price from the price oracle.\n @return price Current price of the token"
									},
									"functionSelector": "eb91d37e",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "60058:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60073:2:0"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "60099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60098:9:0"
									},
									"scope": 1881,
									"src": "60049:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										335
									],
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "60403:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "60420:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1876,
												"id": 1878,
												"nodeType": "Return",
												"src": "60413:8:0"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "60169:164:0",
										"text": " @dev Returns the number of decimal places used by the token.\n @return uint8 The number of decimal places (always returns 0 for this token)."
									},
									"functionSelector": "313ce567",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "60347:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1873,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "60378:8:0"
									},
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60355:2:0"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "60396:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1874,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "60396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60395:7:0"
									},
									"scope": 1881,
									"src": "60338:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1882,
							"src": "54898:5532:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "133:60297:0"
				},
				"id": 0
			}
		}
	}
}