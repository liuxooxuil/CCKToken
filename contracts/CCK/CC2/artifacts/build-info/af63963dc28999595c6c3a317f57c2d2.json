{
	"id": "af63963dc28999595c6c3a317f57c2d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/CC2/b.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\"; \r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"contracts/CCK/ERC3643.sol\";\r\n\r\ncontract CCKToken is ERC20, Ownable, IERC3643 {\r\n    uint256 public constant TOTAL_SUPPLY = 100_000_000_000; // 总供应量调整为100亿 // 总供应量\r\n    mapping(address => bool) public whitelist; // 白名单\r\n    mapping(address => bool) public frozen; // 冻结状态\r\n    address public uniswapPool; // Uniswap V3 池地址\r\n    uint256 public mintedAmount; // 已发行的代币数量\r\n    address public immutable transferReceiver; // 固定接收地址\r\n    address public immutable tokenAddress; // 固定的 ERC20 代币地址\r\n    uint256 public constant MINT_RATIO = 20; // 1:20 铸币比例\r\n\r\n    constructor(\r\n        address[] memory _whitelist,\r\n        address _transferReceiver,\r\n        address _tokenAddress\r\n    ) ERC20(\"CCK\", \"CCKToken\") Ownable(msg.sender) {\r\n        require(_whitelist.length > 0, \"At least one whitelisted address required\");\r\n        require(_transferReceiver != address(0), \"Invalid receiver address\");\r\n        require(_tokenAddress != address(0), \"Invalid token address\");\r\n\r\n        // 批量添加白名单成员\r\n        for (uint256 i = 0; i < _whitelist.length; i++) {\r\n            whitelist[_whitelist[i]] = true;\r\n        }\r\n\r\n        // 设置固定接收地址和代币地址\r\n        transferReceiver = _transferReceiver;\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n\r\n    // 添加白名单成员\r\n    function addToWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = true;\r\n    }\r\n\r\n    // 移除白名单成员\r\n    function removeFromWhitelist(address member) external onlyOwner {\r\n        whitelist[member] = false;\r\n    }\r\n\r\n    // 冻结用户\r\n    function freezeUser(address user) external onlyOwner {\r\n        frozen[user] = true;\r\n    }\r\n\r\n    // 解冻用户\r\n    function unfreezeUser(address user) external onlyOwner {\r\n        frozen[user] = false;\r\n    }\r\n\r\n    // 返回可铸造的剩余代币数量\r\n    function remainingSupply() external view returns (uint256) {\r\n        return TOTAL_SUPPLY - mintedAmount;\r\n    }\r\n\r\n    // ERC-3643协议方法实现\r\n    function onchainID() external view override returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    function version() external view override returns (string memory) {\r\n        return \"1.0.0\";\r\n    }\r\n\r\n    function identityRegistry() external view override returns (address) {\r\n        return address(0);\r\n    }\r\n\r\n    function compliance() external view override returns (address) {\r\n        return address(0);\r\n    }\r\n\r\n    function paused() external view override returns (bool) {\r\n        return false;\r\n    }\r\n\r\n    function isFrozen(address userAddress) external view override returns (bool) {\r\n        return frozen[userAddress];\r\n    }\r\n\r\n    function getFrozenTokens(address userAddress) external view override returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    // 重写转账函数，确保转账金额为整数且不被冻结\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        // require(!frozen[msg.sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transfer(recipient, amount);\r\n    }\r\n\r\n    // 重写转账授权函数\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        // require(!frozen[sender], \"Sender is frozen\");\r\n        require(amount == uint256(uint128(amount)), \"Amount must be an integer\");\r\n        return super.transferFrom(sender, recipient, amount);\r\n    }\r\n\r\n    // 发行代币，需在白名单内\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        // require(whitelist[to], \"Not whitelisted\");\r\n        require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\");\r\n        _mint(to, amount);\r\n        mintedAmount += amount;\r\n    }\r\n\r\n    // 重写 ERC20 的 decimals 方法，设置为 0，表示没有小数点\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 0;\r\n    }\r\n\r\n    // 查看用户持有的代币数量\r\n    function balanceOfUser(address user) external view returns (uint256) {\r\n        return balanceOf(user);\r\n    }\r\n\r\n    // 获取当前价格\r\n    function getCurrentPrice() external view returns (uint256) {\r\n        IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool);\r\n        (uint160 sqrtPriceX96, , , , , , ) = pool.slot0();\r\n        uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** 192);\r\n        return price;\r\n    }\r\n\r\n    // 转账并铸造 CCK 代币\r\n    function transferAndMint(uint256 amount) external {\r\n        // require(!frozen[msg.sender], \"Sender is frozen\");\r\n        require(amount > 0, \"Amount must be greater than 0\");\r\n        // require(whitelist[msg.sender], \"Sender not whitelisted\");\r\n        // require(mintedAmount + (amount * MINT_RATIO) <= TOTAL_SUPPLY, \"Total supply exceeded\");\r\n\r\n        // 创建 ERC20 代币合约实例\r\n        IERC20 token = IERC20(tokenAddress);\r\n\r\n        // 检查余额和授权\r\n        // require(token.balanceOf(msg.sender) >= amount, \"Insufficient token balance\");\r\n        require(token.allowance(msg.sender, address(this)) >= amount, \"Insufficient allowance\");\r\n\r\n        // 执行转账到固定接收地址\r\n        bool success = token.transferFrom(msg.sender, transferReceiver, amount);\r\n        require(success, \"Token transfer failed\");\r\n\r\n        // 按 1:20 比例铸造 CCK 代币\r\n        uint256 cckAmount = amount * MINT_RATIO;\r\n        _mint(msg.sender, cckAmount);\r\n        mintedAmount += cckAmount;\r\n\r\n        // 触发事件\r\n        emit TransferExecuted(tokenAddress, transferReceiver, amount);\r\n    }\r\n\r\n    // 事件声明\r\n    event TransferExecuted(address indexed token, address indexed to, uint256 amount);\r\n}"
			},
			"contracts/CCK/ERC3643.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IERC3643\r\n * @dev Interface for on-chain identity management and compliance.\r\n */\r\ninterface IERC3643 {\r\n    /**\r\n     * @dev Returns the on-chain ID of the contract.\r\n     * @return address The address of the contract.\r\n     */\r\n    function onchainID() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return string The version string.\r\n     */\r\n    function version() external view returns (string memory);\r\n    \r\n    /**\r\n     * @dev Returns the identity registry address.\r\n     * @return address The identity registry address.\r\n     */\r\n    function identityRegistry() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Returns the compliance address.\r\n     * @return address The compliance address.\r\n     */\r\n    function compliance() external view returns (address);\r\n    \r\n    /**\r\n     * @dev Checks if the contract is paused.\r\n     * @return bool Indicates if the contract is paused.\r\n     */\r\n    function paused() external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Checks if a user is frozen.\r\n     * @param userAddress Address of the user to check.\r\n     * @return bool Indicates if the user is frozen.\r\n     */\r\n    function isFrozen(address userAddress) external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Returns the number of frozen tokens for a user.\r\n     * @param userAddress Address of the user to check.\r\n     * @return uint256 Amount of frozen tokens.\r\n     */\r\n    function getFrozenTokens(address userAddress) external view returns (uint256);\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/CCK/CC2/b.sol": {
				"CCKToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_whitelist",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "_transferReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransferExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINT_RATIO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOfUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "freezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "frozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferAndMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "unfreezeUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/CC2/b.sol\":337:6150  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/CCK/CC2/b.sol\":954:1667  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CCK/CC2/b.sol\":1112:1122  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x43434b546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1163:1164  0 */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1143:1153  _whitelist */\n  dup4\n    /* \"contracts/CCK/CC2/b.sol\":1143:1160  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CC2/b.sol\":1143:1164  _whitelist.length > 0 */\n  gt\n    /* \"contracts/CCK/CC2/b.sol\":1135:1210  require(_whitelist.length > 0, \"At least one whitelisted address required\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/CCK/CC2/b.sol\":1258:1259  0 */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1229:1260  _transferReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CC2/b.sol\":1229:1246  _transferReceiver */\n  dup3\n    /* \"contracts/CCK/CC2/b.sol\":1229:1260  _transferReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CC2/b.sol\":1221:1289  require(_transferReceiver != address(0), \"Invalid receiver address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"contracts/CCK/CC2/b.sol\":1333:1334  0 */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1308:1335  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CC2/b.sol\":1308:1321  _tokenAddress */\n  dup2\n    /* \"contracts/CCK/CC2/b.sol\":1308:1335  _tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/CCK/CC2/b.sol\":1300:1361  require(_tokenAddress != address(0), \"Invalid token address\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"contracts/CCK/CC2/b.sol\":1419:1428  uint256 i */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1431:1432  0 */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1419:1432  uint256 i = 0 */\n  swap1\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1414:1520  for (uint256 i = 0; i < _whitelist.length; i++) {... */\ntag_27:\n    /* \"contracts/CCK/CC2/b.sol\":1438:1448  _whitelist */\n  dup4\n    /* \"contracts/CCK/CC2/b.sol\":1438:1455  _whitelist.length */\n  mload\n    /* \"contracts/CCK/CC2/b.sol\":1434:1435  i */\n  dup2\n    /* \"contracts/CCK/CC2/b.sol\":1434:1455  i < _whitelist.length */\n  lt\n    /* \"contracts/CCK/CC2/b.sol\":1414:1520  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"contracts/CCK/CC2/b.sol\":1504:1508  true */\n  0x01\n    /* \"contracts/CCK/CC2/b.sol\":1477:1486  whitelist */\n  0x06\n    /* \"contracts/CCK/CC2/b.sol\":1477:1501  whitelist[_whitelist[i]] */\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1487:1497  _whitelist */\n  dup7\n    /* \"contracts/CCK/CC2/b.sol\":1498:1499  i */\n  dup5\n    /* \"contracts/CCK/CC2/b.sol\":1487:1500  _whitelist[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_30\n  jumpi\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\ntag_30:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/CCK/CC2/b.sol\":1477:1501  whitelist[_whitelist[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/CCK/CC2/b.sol\":1477:1508  whitelist[_whitelist[i]] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1457:1460  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1414:1520  for (uint256 i = 0; i < _whitelist.length; i++) {... */\n  jump(tag_27)\ntag_28:\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1603:1620  _transferReceiver */\n  dup2\n    /* \"contracts/CCK/CC2/b.sol\":1584:1620  transferReceiver = _transferReceiver */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":1646:1659  _tokenAddress */\n  dup1\n    /* \"contracts/CCK/CC2/b.sol\":1631:1659  tokenAddress = _tokenAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":954:1667  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/CCK/CC2/b.sol\":337:6150  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_35:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_36:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_37:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_38:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_39:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_40:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_41:\n    /* \"#utility.yul\":834:861   */\n  tag_86\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_39\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_88\n  tag_40\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":907:995   */\ntag_87:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_42:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_90\n  tag_35\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_91\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_43:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_94\n  tag_40\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1326:1382   */\ntag_93:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_44:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  0x00\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_45:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_46:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_98\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_45\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_47:\n    /* \"#utility.yul\":1920:1944   */\n  tag_100\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_46\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  0x00\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_101:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_48:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_103\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_47\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_49:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_105\n    /* \"#utility.yul\":2289:2353   */\n  tag_106\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_43\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2273:2354   */\n  tag_42\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_108\n  tag_44\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2505:2627   */\ntag_107:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_109:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_112\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_48\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_50:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_115\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2994:3116   */\ntag_114:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_116\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_49\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:4153   */\ntag_3:\n    /* \"#utility.yul\":3400:3406   */\n  0x00\n    /* \"#utility.yul\":3408:3414   */\n  0x00\n    /* \"#utility.yul\":3416:3422   */\n  0x00\n    /* \"#utility.yul\":3465:3467   */\n  0x60\n    /* \"#utility.yul\":3453:3462   */\n  dup5\n    /* \"#utility.yul\":3444:3451   */\n  dup7\n    /* \"#utility.yul\":3440:3463   */\n  sub\n    /* \"#utility.yul\":3436:3468   */\n  slt\n    /* \"#utility.yul\":3433:3552   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3471:3550   */\n  tag_119\n  tag_36\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3433:3552   */\ntag_118:\n    /* \"#utility.yul\":3612:3613   */\n  0x00\n    /* \"#utility.yul\":3601:3610   */\n  dup5\n    /* \"#utility.yul\":3597:3614   */\n  add\n    /* \"#utility.yul\":3591:3615   */\n  mload\n    /* \"#utility.yul\":3642:3660   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3634:3640   */\n  dup2\n    /* \"#utility.yul\":3631:3661   */\n  gt\n    /* \"#utility.yul\":3628:3745   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3664:3743   */\n  tag_121\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3628:3745   */\ntag_120:\n    /* \"#utility.yul\":3769:3858   */\n  tag_122\n    /* \"#utility.yul\":3850:3857   */\n  dup7\n    /* \"#utility.yul\":3841:3847   */\n  dup3\n    /* \"#utility.yul\":3830:3839   */\n  dup8\n    /* \"#utility.yul\":3826:3848   */\n  add\n    /* \"#utility.yul\":3769:3858   */\n  tag_50\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3759:3858   */\n  swap4\n  pop\n    /* \"#utility.yul\":3562:3868   */\n  pop\n    /* \"#utility.yul\":3907:3909   */\n  0x20\n    /* \"#utility.yul\":3933:3997   */\n  tag_123\n    /* \"#utility.yul\":3989:3996   */\n  dup7\n    /* \"#utility.yul\":3980:3986   */\n  dup3\n    /* \"#utility.yul\":3969:3978   */\n  dup8\n    /* \"#utility.yul\":3965:3987   */\n  add\n    /* \"#utility.yul\":3933:3997   */\n  tag_48\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3923:3997   */\n  swap3\n  pop\n    /* \"#utility.yul\":3878:4007   */\n  pop\n    /* \"#utility.yul\":4046:4048   */\n  0x40\n    /* \"#utility.yul\":4072:4136   */\n  tag_124\n    /* \"#utility.yul\":4128:4135   */\n  dup7\n    /* \"#utility.yul\":4119:4125   */\n  dup3\n    /* \"#utility.yul\":4108:4117   */\n  dup8\n    /* \"#utility.yul\":4104:4126   */\n  add\n    /* \"#utility.yul\":4072:4136   */\n  tag_48\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4062:4136   */\n  swap2\n  pop\n    /* \"#utility.yul\":4017:4146   */\n  pop\n    /* \"#utility.yul\":3287:4153   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4159:4258   */\ntag_51:\n    /* \"#utility.yul\":4211:4217   */\n  0x00\n    /* \"#utility.yul\":4245:4250   */\n  dup2\n    /* \"#utility.yul\":4239:4251   */\n  mload\n    /* \"#utility.yul\":4229:4251   */\n  swap1\n  pop\n    /* \"#utility.yul\":4159:4258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4264:4444   */\ntag_52:\n    /* \"#utility.yul\":4312:4389   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4309:4310   */\n  0x00\n    /* \"#utility.yul\":4302:4390   */\n  mstore\n    /* \"#utility.yul\":4409:4413   */\n  0x22\n    /* \"#utility.yul\":4406:4407   */\n  0x04\n    /* \"#utility.yul\":4399:4414   */\n  mstore\n    /* \"#utility.yul\":4433:4437   */\n  0x24\n    /* \"#utility.yul\":4430:4431   */\n  0x00\n    /* \"#utility.yul\":4423:4438   */\n  revert\n    /* \"#utility.yul\":4450:4770   */\ntag_53:\n    /* \"#utility.yul\":4494:4500   */\n  0x00\n    /* \"#utility.yul\":4531:4532   */\n  0x02\n    /* \"#utility.yul\":4525:4529   */\n  dup3\n    /* \"#utility.yul\":4521:4533   */\n  div\n    /* \"#utility.yul\":4511:4533   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4579   */\n  0x01\n    /* \"#utility.yul\":4572:4576   */\n  dup3\n    /* \"#utility.yul\":4568:4580   */\n  and\n    /* \"#utility.yul\":4599:4617   */\n  dup1\n    /* \"#utility.yul\":4589:4670   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4655:4659   */\n  0x7f\n    /* \"#utility.yul\":4647:4653   */\n  dup3\n    /* \"#utility.yul\":4643:4660   */\n  and\n    /* \"#utility.yul\":4633:4660   */\n  swap2\n  pop\n    /* \"#utility.yul\":4589:4670   */\ntag_128:\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4709:4715   */\n  dup3\n    /* \"#utility.yul\":4706:4720   */\n  lt\n    /* \"#utility.yul\":4686:4704   */\n  dup2\n    /* \"#utility.yul\":4683:4721   */\n  sub\n    /* \"#utility.yul\":4680:4764   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":4736:4754   */\n  tag_130\n  tag_52\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4680:4764   */\ntag_129:\n    /* \"#utility.yul\":4501:4770   */\n  pop\n    /* \"#utility.yul\":4450:4770   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4776:4917   */\ntag_54:\n    /* \"#utility.yul\":4825:4829   */\n  0x00\n    /* \"#utility.yul\":4848:4851   */\n  dup2\n    /* \"#utility.yul\":4840:4851   */\n  swap1\n  pop\n    /* \"#utility.yul\":4871:4874   */\n  dup2\n    /* \"#utility.yul\":4868:4869   */\n  0x00\n    /* \"#utility.yul\":4861:4875   */\n  mstore\n    /* \"#utility.yul\":4905:4909   */\n  0x20\n    /* \"#utility.yul\":4902:4903   */\n  0x00\n    /* \"#utility.yul\":4892:4910   */\n  keccak256\n    /* \"#utility.yul\":4884:4910   */\n  swap1\n  pop\n    /* \"#utility.yul\":4776:4917   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4923:5016   */\ntag_55:\n    /* \"#utility.yul\":4960:4966   */\n  0x00\n    /* \"#utility.yul\":5007:5009   */\n  0x20\n    /* \"#utility.yul\":5002:5004   */\n  0x1f\n    /* \"#utility.yul\":4995:5000   */\n  dup4\n    /* \"#utility.yul\":4991:5005   */\n  add\n    /* \"#utility.yul\":4987:5010   */\n  div\n    /* \"#utility.yul\":4977:5010   */\n  swap1\n  pop\n    /* \"#utility.yul\":4923:5016   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5022:5129   */\ntag_56:\n    /* \"#utility.yul\":5066:5074   */\n  0x00\n    /* \"#utility.yul\":5116:5121   */\n  dup3\n    /* \"#utility.yul\":5110:5114   */\n  dup3\n    /* \"#utility.yul\":5106:5122   */\n  shl\n    /* \"#utility.yul\":5085:5122   */\n  swap1\n  pop\n    /* \"#utility.yul\":5022:5129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5135:5528   */\ntag_57:\n    /* \"#utility.yul\":5204:5210   */\n  0x00\n    /* \"#utility.yul\":5254:5255   */\n  0x08\n    /* \"#utility.yul\":5242:5252   */\n  dup4\n    /* \"#utility.yul\":5238:5256   */\n  mul\n    /* \"#utility.yul\":5277:5374   */\n  tag_135\n    /* \"#utility.yul\":5307:5373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5296:5305   */\n  dup3\n    /* \"#utility.yul\":5277:5374   */\n  tag_56\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5395:5434   */\n  tag_136\n    /* \"#utility.yul\":5425:5433   */\n  dup7\n    /* \"#utility.yul\":5414:5423   */\n  dup4\n    /* \"#utility.yul\":5395:5434   */\n  tag_56\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5383:5434   */\n  swap6\n  pop\n    /* \"#utility.yul\":5467:5471   */\n  dup1\n    /* \"#utility.yul\":5463:5472   */\n  not\n    /* \"#utility.yul\":5456:5461   */\n  dup5\n    /* \"#utility.yul\":5452:5473   */\n  and\n    /* \"#utility.yul\":5443:5473   */\n  swap4\n  pop\n    /* \"#utility.yul\":5516:5520   */\n  dup1\n    /* \"#utility.yul\":5506:5514   */\n  dup7\n    /* \"#utility.yul\":5502:5521   */\n  and\n    /* \"#utility.yul\":5495:5500   */\n  dup5\n    /* \"#utility.yul\":5492:5522   */\n  or\n    /* \"#utility.yul\":5482:5522   */\n  swap3\n  pop\n    /* \"#utility.yul\":5211:5528   */\n  pop\n  pop\n    /* \"#utility.yul\":5135:5528   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5611   */\ntag_58:\n    /* \"#utility.yul\":5571:5578   */\n  0x00\n    /* \"#utility.yul\":5600:5605   */\n  dup2\n    /* \"#utility.yul\":5589:5605   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5611   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5617:5677   */\ntag_59:\n    /* \"#utility.yul\":5645:5648   */\n  0x00\n    /* \"#utility.yul\":5666:5671   */\n  dup2\n    /* \"#utility.yul\":5659:5671   */\n  swap1\n  pop\n    /* \"#utility.yul\":5617:5677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5683:5825   */\ntag_60:\n    /* \"#utility.yul\":5733:5742   */\n  0x00\n    /* \"#utility.yul\":5766:5819   */\n  tag_140\n    /* \"#utility.yul\":5784:5818   */\n  tag_141\n    /* \"#utility.yul\":5793:5817   */\n  tag_142\n    /* \"#utility.yul\":5811:5816   */\n  dup5\n    /* \"#utility.yul\":5793:5817   */\n  tag_58\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5784:5818   */\n  tag_59\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5766:5819   */\n  tag_58\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5753:5819   */\n  swap1\n  pop\n    /* \"#utility.yul\":5683:5825   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5831:5906   */\ntag_61:\n    /* \"#utility.yul\":5874:5877   */\n  0x00\n    /* \"#utility.yul\":5895:5900   */\n  dup2\n    /* \"#utility.yul\":5888:5900   */\n  swap1\n  pop\n    /* \"#utility.yul\":5831:5906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5912:6181   */\ntag_62:\n    /* \"#utility.yul\":6022:6061   */\n  tag_145\n    /* \"#utility.yul\":6053:6060   */\n  dup4\n    /* \"#utility.yul\":6022:6061   */\n  tag_60\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6083:6174   */\n  tag_146\n    /* \"#utility.yul\":6132:6173   */\n  tag_147\n    /* \"#utility.yul\":6156:6172   */\n  dup3\n    /* \"#utility.yul\":6132:6173   */\n  tag_61\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6124:6130   */\n  dup5\n    /* \"#utility.yul\":6117:6121   */\n  dup5\n    /* \"#utility.yul\":6111:6122   */\n  sload\n    /* \"#utility.yul\":6083:6174   */\n  tag_57\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6077:6081   */\n  dup3\n    /* \"#utility.yul\":6070:6175   */\n  sstore\n    /* \"#utility.yul\":5988:6181   */\n  pop\n    /* \"#utility.yul\":5912:6181   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6187:6260   */\ntag_63:\n    /* \"#utility.yul\":6232:6235   */\n  0x00\n    /* \"#utility.yul\":6253:6254   */\n  0x00\n    /* \"#utility.yul\":6246:6254   */\n  swap1\n  pop\n    /* \"#utility.yul\":6187:6260   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6266:6455   */\ntag_64:\n    /* \"#utility.yul\":6343:6375   */\n  tag_150\n  tag_63\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6384:6449   */\n  tag_151\n    /* \"#utility.yul\":6442:6448   */\n  dup2\n    /* \"#utility.yul\":6434:6440   */\n  dup5\n    /* \"#utility.yul\":6428:6432   */\n  dup5\n    /* \"#utility.yul\":6384:6449   */\n  tag_62\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6319:6455   */\n  pop\n    /* \"#utility.yul\":6266:6455   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6461:6647   */\ntag_65:\n    /* \"#utility.yul\":6521:6641   */\ntag_153:\n    /* \"#utility.yul\":6538:6541   */\n  dup2\n    /* \"#utility.yul\":6531:6536   */\n  dup2\n    /* \"#utility.yul\":6528:6542   */\n  lt\n    /* \"#utility.yul\":6521:6641   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6592:6631   */\n  tag_156\n    /* \"#utility.yul\":6629:6630   */\n  0x00\n    /* \"#utility.yul\":6622:6627   */\n  dup3\n    /* \"#utility.yul\":6592:6631   */\n  tag_64\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6565:6566   */\n  0x01\n    /* \"#utility.yul\":6558:6563   */\n  dup2\n    /* \"#utility.yul\":6554:6567   */\n  add\n    /* \"#utility.yul\":6545:6567   */\n  swap1\n  pop\n    /* \"#utility.yul\":6521:6641   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6461:6647   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6653:7196   */\ntag_66:\n    /* \"#utility.yul\":6754:6756   */\n  0x1f\n    /* \"#utility.yul\":6749:6752   */\n  dup3\n    /* \"#utility.yul\":6746:6757   */\n  gt\n    /* \"#utility.yul\":6743:7189   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6788:6826   */\n  tag_159\n    /* \"#utility.yul\":6820:6825   */\n  dup2\n    /* \"#utility.yul\":6788:6826   */\n  tag_54\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6872:6901   */\n  tag_160\n    /* \"#utility.yul\":6890:6900   */\n  dup5\n    /* \"#utility.yul\":6872:6901   */\n  tag_55\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6862:6870   */\n  dup2\n    /* \"#utility.yul\":6858:6902   */\n  add\n    /* \"#utility.yul\":7055:7057   */\n  0x20\n    /* \"#utility.yul\":7043:7053   */\n  dup6\n    /* \"#utility.yul\":7040:7058   */\n  lt\n    /* \"#utility.yul\":7037:7086   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7076:7084   */\n  dup2\n    /* \"#utility.yul\":7061:7084   */\n  swap1\n  pop\n    /* \"#utility.yul\":7037:7086   */\ntag_161:\n    /* \"#utility.yul\":7099:7179   */\n  tag_162\n    /* \"#utility.yul\":7155:7177   */\n  tag_163\n    /* \"#utility.yul\":7173:7176   */\n  dup6\n    /* \"#utility.yul\":7155:7177   */\n  tag_55\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7145:7153   */\n  dup4\n    /* \"#utility.yul\":7141:7178   */\n  add\n    /* \"#utility.yul\":7128:7139   */\n  dup3\n    /* \"#utility.yul\":7099:7179   */\n  tag_65\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6758:7189   */\n  pop\n  pop\n    /* \"#utility.yul\":6743:7189   */\ntag_158:\n    /* \"#utility.yul\":6653:7196   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7202:7319   */\ntag_67:\n    /* \"#utility.yul\":7256:7264   */\n  0x00\n    /* \"#utility.yul\":7306:7311   */\n  dup3\n    /* \"#utility.yul\":7300:7304   */\n  dup3\n    /* \"#utility.yul\":7296:7312   */\n  shr\n    /* \"#utility.yul\":7275:7312   */\n  swap1\n  pop\n    /* \"#utility.yul\":7202:7319   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7325:7494   */\ntag_68:\n    /* \"#utility.yul\":7369:7375   */\n  0x00\n    /* \"#utility.yul\":7402:7453   */\n  tag_166\n    /* \"#utility.yul\":7450:7451   */\n  0x00\n    /* \"#utility.yul\":7446:7452   */\n  not\n    /* \"#utility.yul\":7438:7443   */\n  dup5\n    /* \"#utility.yul\":7435:7436   */\n  0x08\n    /* \"#utility.yul\":7431:7444   */\n  mul\n    /* \"#utility.yul\":7402:7453   */\n  tag_67\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7398:7454   */\n  not\n    /* \"#utility.yul\":7483:7487   */\n  dup1\n    /* \"#utility.yul\":7477:7481   */\n  dup4\n    /* \"#utility.yul\":7473:7488   */\n  and\n    /* \"#utility.yul\":7463:7488   */\n  swap2\n  pop\n    /* \"#utility.yul\":7376:7494   */\n  pop\n    /* \"#utility.yul\":7325:7494   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7499:7794   */\ntag_69:\n    /* \"#utility.yul\":7575:7579   */\n  0x00\n    /* \"#utility.yul\":7721:7750   */\n  tag_168\n    /* \"#utility.yul\":7746:7749   */\n  dup4\n    /* \"#utility.yul\":7740:7744   */\n  dup4\n    /* \"#utility.yul\":7721:7750   */\n  tag_68\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7713:7750   */\n  swap2\n  pop\n    /* \"#utility.yul\":7783:7786   */\n  dup3\n    /* \"#utility.yul\":7780:7781   */\n  0x02\n    /* \"#utility.yul\":7776:7787   */\n  mul\n    /* \"#utility.yul\":7770:7774   */\n  dup3\n    /* \"#utility.yul\":7767:7788   */\n  or\n    /* \"#utility.yul\":7759:7788   */\n  swap1\n  pop\n    /* \"#utility.yul\":7499:7794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7799:9194   */\ntag_9:\n    /* \"#utility.yul\":7916:7953   */\n  tag_170\n    /* \"#utility.yul\":7949:7952   */\n  dup3\n    /* \"#utility.yul\":7916:7953   */\n  tag_51\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8018:8036   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8010:8016   */\n  dup2\n    /* \"#utility.yul\":8007:8037   */\n  gt\n    /* \"#utility.yul\":8004:8060   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8040:8058   */\n  tag_172\n  tag_40\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8004:8060   */\ntag_171:\n    /* \"#utility.yul\":8084:8122   */\n  tag_173\n    /* \"#utility.yul\":8116:8120   */\n  dup3\n    /* \"#utility.yul\":8110:8121   */\n  sload\n    /* \"#utility.yul\":8084:8122   */\n  tag_53\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8169:8236   */\n  tag_174\n    /* \"#utility.yul\":8229:8235   */\n  dup3\n    /* \"#utility.yul\":8221:8227   */\n  dup3\n    /* \"#utility.yul\":8215:8219   */\n  dup6\n    /* \"#utility.yul\":8169:8236   */\n  tag_66\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8287:8291   */\n  0x20\n    /* \"#utility.yul\":8274:8291   */\n  swap1\n  pop\n    /* \"#utility.yul\":8319:8321   */\n  0x1f\n    /* \"#utility.yul\":8311:8317   */\n  dup4\n    /* \"#utility.yul\":8308:8322   */\n  gt\n    /* \"#utility.yul\":8336:8337   */\n  0x01\n    /* \"#utility.yul\":8331:8949   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8993:8994   */\n  0x00\n    /* \"#utility.yul\":9010:9016   */\n  dup5\n    /* \"#utility.yul\":9007:9084   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":9059:9068   */\n  dup3\n    /* \"#utility.yul\":9054:9057   */\n  dup8\n    /* \"#utility.yul\":9050:9069   */\n  add\n    /* \"#utility.yul\":9044:9070   */\n  mload\n    /* \"#utility.yul\":9035:9070   */\n  swap1\n  pop\n    /* \"#utility.yul\":9007:9084   */\ntag_177:\n    /* \"#utility.yul\":9110:9177   */\n  tag_178\n    /* \"#utility.yul\":9170:9176   */\n  dup6\n    /* \"#utility.yul\":9163:9168   */\n  dup3\n    /* \"#utility.yul\":9110:9177   */\n  tag_69\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9104:9108   */\n  dup7\n    /* \"#utility.yul\":9097:9178   */\n  sstore\n    /* \"#utility.yul\":8966:9188   */\n  pop\n    /* \"#utility.yul\":8301:9188   */\n  jump(tag_175)\n    /* \"#utility.yul\":8331:8949   */\ntag_176:\n    /* \"#utility.yul\":8383:8387   */\n  0x1f\n    /* \"#utility.yul\":8379:8388   */\n  not\n    /* \"#utility.yul\":8371:8377   */\n  dup5\n    /* \"#utility.yul\":8367:8389   */\n  and\n    /* \"#utility.yul\":8417:8454   */\n  tag_179\n    /* \"#utility.yul\":8449:8453   */\n  dup7\n    /* \"#utility.yul\":8417:8454   */\n  tag_54\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8476:8477   */\n  0x00\n    /* \"#utility.yul\":8490:8698   */\ntag_180:\n    /* \"#utility.yul\":8504:8511   */\n  dup3\n    /* \"#utility.yul\":8501:8502   */\n  dup2\n    /* \"#utility.yul\":8498:8512   */\n  lt\n    /* \"#utility.yul\":8490:8698   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8583:8592   */\n  dup5\n    /* \"#utility.yul\":8578:8581   */\n  dup10\n    /* \"#utility.yul\":8574:8593   */\n  add\n    /* \"#utility.yul\":8568:8594   */\n  mload\n    /* \"#utility.yul\":8560:8566   */\n  dup3\n    /* \"#utility.yul\":8553:8595   */\n  sstore\n    /* \"#utility.yul\":8634:8635   */\n  0x01\n    /* \"#utility.yul\":8626:8632   */\n  dup3\n    /* \"#utility.yul\":8622:8636   */\n  add\n    /* \"#utility.yul\":8612:8636   */\n  swap2\n  pop\n    /* \"#utility.yul\":8681:8683   */\n  0x20\n    /* \"#utility.yul\":8670:8679   */\n  dup6\n    /* \"#utility.yul\":8666:8684   */\n  add\n    /* \"#utility.yul\":8653:8684   */\n  swap5\n  pop\n    /* \"#utility.yul\":8527:8531   */\n  0x20\n    /* \"#utility.yul\":8524:8525   */\n  dup2\n    /* \"#utility.yul\":8520:8532   */\n  add\n    /* \"#utility.yul\":8515:8532   */\n  swap1\n  pop\n    /* \"#utility.yul\":8490:8698   */\n  jump(tag_180)\ntag_182:\n    /* \"#utility.yul\":8726:8732   */\n  dup7\n    /* \"#utility.yul\":8717:8724   */\n  dup4\n    /* \"#utility.yul\":8714:8733   */\n  lt\n    /* \"#utility.yul\":8711:8890   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8784:8793   */\n  dup5\n    /* \"#utility.yul\":8779:8782   */\n  dup10\n    /* \"#utility.yul\":8775:8794   */\n  add\n    /* \"#utility.yul\":8769:8795   */\n  mload\n    /* \"#utility.yul\":8827:8875   */\n  tag_184\n    /* \"#utility.yul\":8869:8873   */\n  0x1f\n    /* \"#utility.yul\":8861:8867   */\n  dup10\n    /* \"#utility.yul\":8857:8874   */\n  and\n    /* \"#utility.yul\":8846:8855   */\n  dup3\n    /* \"#utility.yul\":8827:8875   */\n  tag_68\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8819:8825   */\n  dup4\n    /* \"#utility.yul\":8812:8876   */\n  sstore\n    /* \"#utility.yul\":8734:8890   */\n  pop\n    /* \"#utility.yul\":8711:8890   */\ntag_183:\n    /* \"#utility.yul\":8936:8937   */\n  0x01\n    /* \"#utility.yul\":8932:8933   */\n  0x02\n    /* \"#utility.yul\":8924:8930   */\n  dup9\n    /* \"#utility.yul\":8920:8934   */\n  mul\n    /* \"#utility.yul\":8916:8938   */\n  add\n    /* \"#utility.yul\":8910:8914   */\n  dup9\n    /* \"#utility.yul\":8903:8939   */\n  sstore\n    /* \"#utility.yul\":8338:8949   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8301:9188   */\ntag_175:\n  pop\n    /* \"#utility.yul\":7891:9194   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7799:9194   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9200:9318   */\ntag_70:\n    /* \"#utility.yul\":9287:9311   */\n  tag_186\n    /* \"#utility.yul\":9305:9310   */\n  dup2\n    /* \"#utility.yul\":9287:9311   */\n  tag_46\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9282:9285   */\n  dup3\n    /* \"#utility.yul\":9275:9312   */\n  mstore\n    /* \"#utility.yul\":9200:9318   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9324:9546   */\ntag_14:\n    /* \"#utility.yul\":9417:9421   */\n  0x00\n    /* \"#utility.yul\":9455:9457   */\n  0x20\n    /* \"#utility.yul\":9444:9453   */\n  dup3\n    /* \"#utility.yul\":9440:9458   */\n  add\n    /* \"#utility.yul\":9432:9458   */\n  swap1\n  pop\n    /* \"#utility.yul\":9468:9539   */\n  tag_188\n    /* \"#utility.yul\":9536:9537   */\n  0x00\n    /* \"#utility.yul\":9525:9534   */\n  dup4\n    /* \"#utility.yul\":9521:9538   */\n  add\n    /* \"#utility.yul\":9512:9518   */\n  dup5\n    /* \"#utility.yul\":9468:9539   */\n  tag_70\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9324:9546   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9552:9721   */\ntag_71:\n    /* \"#utility.yul\":9636:9647   */\n  0x00\n    /* \"#utility.yul\":9670:9676   */\n  dup3\n    /* \"#utility.yul\":9665:9668   */\n  dup3\n    /* \"#utility.yul\":9658:9677   */\n  mstore\n    /* \"#utility.yul\":9710:9714   */\n  0x20\n    /* \"#utility.yul\":9705:9708   */\n  dup3\n    /* \"#utility.yul\":9701:9715   */\n  add\n    /* \"#utility.yul\":9686:9715   */\n  swap1\n  pop\n    /* \"#utility.yul\":9552:9721   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9727:9955   */\ntag_72:\n    /* \"#utility.yul\":9867:9901   */\n  0x4174206c65617374206f6e652077686974656c69737465642061646472657373\n    /* \"#utility.yul\":9863:9864   */\n  0x00\n    /* \"#utility.yul\":9855:9861   */\n  dup3\n    /* \"#utility.yul\":9851:9865   */\n  add\n    /* \"#utility.yul\":9844:9902   */\n  mstore\n    /* \"#utility.yul\":9936:9947   */\n  0x2072657175697265640000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9931:9933   */\n  0x20\n    /* \"#utility.yul\":9923:9929   */\n  dup3\n    /* \"#utility.yul\":9919:9934   */\n  add\n    /* \"#utility.yul\":9912:9948   */\n  mstore\n    /* \"#utility.yul\":9727:9955   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9961:10327   */\ntag_73:\n    /* \"#utility.yul\":10103:10106   */\n  0x00\n    /* \"#utility.yul\":10124:10191   */\n  tag_192\n    /* \"#utility.yul\":10188:10190   */\n  0x29\n    /* \"#utility.yul\":10183:10186   */\n  dup4\n    /* \"#utility.yul\":10124:10191   */\n  tag_71\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":10117:10191   */\n  swap2\n  pop\n    /* \"#utility.yul\":10200:10293   */\n  tag_193\n    /* \"#utility.yul\":10289:10292   */\n  dup3\n    /* \"#utility.yul\":10200:10293   */\n  tag_72\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10318:10320   */\n  0x40\n    /* \"#utility.yul\":10313:10316   */\n  dup3\n    /* \"#utility.yul\":10309:10321   */\n  add\n    /* \"#utility.yul\":10302:10321   */\n  swap1\n  pop\n    /* \"#utility.yul\":9961:10327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10333:10752   */\ntag_20:\n    /* \"#utility.yul\":10499:10503   */\n  0x00\n    /* \"#utility.yul\":10537:10539   */\n  0x20\n    /* \"#utility.yul\":10526:10535   */\n  dup3\n    /* \"#utility.yul\":10522:10540   */\n  add\n    /* \"#utility.yul\":10514:10540   */\n  swap1\n  pop\n    /* \"#utility.yul\":10586:10595   */\n  dup2\n    /* \"#utility.yul\":10580:10584   */\n  dup2\n    /* \"#utility.yul\":10576:10596   */\n  sub\n    /* \"#utility.yul\":10572:10573   */\n  0x00\n    /* \"#utility.yul\":10561:10570   */\n  dup4\n    /* \"#utility.yul\":10557:10574   */\n  add\n    /* \"#utility.yul\":10550:10597   */\n  mstore\n    /* \"#utility.yul\":10614:10745   */\n  tag_195\n    /* \"#utility.yul\":10740:10744   */\n  dup2\n    /* \"#utility.yul\":10614:10745   */\n  tag_73\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":10606:10745   */\n  swap1\n  pop\n    /* \"#utility.yul\":10333:10752   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10758:10932   */\ntag_74:\n    /* \"#utility.yul\":10898:10924   */\n  0x496e76616c696420726563656976657220616464726573730000000000000000\n    /* \"#utility.yul\":10894:10895   */\n  0x00\n    /* \"#utility.yul\":10886:10892   */\n  dup3\n    /* \"#utility.yul\":10882:10896   */\n  add\n    /* \"#utility.yul\":10875:10925   */\n  mstore\n    /* \"#utility.yul\":10758:10932   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10938:11304   */\ntag_75:\n    /* \"#utility.yul\":11080:11083   */\n  0x00\n    /* \"#utility.yul\":11101:11168   */\n  tag_198\n    /* \"#utility.yul\":11165:11167   */\n  0x18\n    /* \"#utility.yul\":11160:11163   */\n  dup4\n    /* \"#utility.yul\":11101:11168   */\n  tag_71\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":11094:11168   */\n  swap2\n  pop\n    /* \"#utility.yul\":11177:11270   */\n  tag_199\n    /* \"#utility.yul\":11266:11269   */\n  dup3\n    /* \"#utility.yul\":11177:11270   */\n  tag_74\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":11295:11297   */\n  0x20\n    /* \"#utility.yul\":11290:11293   */\n  dup3\n    /* \"#utility.yul\":11286:11298   */\n  add\n    /* \"#utility.yul\":11279:11298   */\n  swap1\n  pop\n    /* \"#utility.yul\":10938:11304   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11310:11729   */\ntag_23:\n    /* \"#utility.yul\":11476:11480   */\n  0x00\n    /* \"#utility.yul\":11514:11516   */\n  0x20\n    /* \"#utility.yul\":11503:11512   */\n  dup3\n    /* \"#utility.yul\":11499:11517   */\n  add\n    /* \"#utility.yul\":11491:11517   */\n  swap1\n  pop\n    /* \"#utility.yul\":11563:11572   */\n  dup2\n    /* \"#utility.yul\":11557:11561   */\n  dup2\n    /* \"#utility.yul\":11553:11573   */\n  sub\n    /* \"#utility.yul\":11549:11550   */\n  0x00\n    /* \"#utility.yul\":11538:11547   */\n  dup4\n    /* \"#utility.yul\":11534:11551   */\n  add\n    /* \"#utility.yul\":11527:11574   */\n  mstore\n    /* \"#utility.yul\":11591:11722   */\n  tag_201\n    /* \"#utility.yul\":11717:11721   */\n  dup2\n    /* \"#utility.yul\":11591:11722   */\n  tag_75\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":11583:11722   */\n  swap1\n  pop\n    /* \"#utility.yul\":11310:11729   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11735:11906   */\ntag_76:\n    /* \"#utility.yul\":11875:11898   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":11871:11872   */\n  0x00\n    /* \"#utility.yul\":11863:11869   */\n  dup3\n    /* \"#utility.yul\":11859:11873   */\n  add\n    /* \"#utility.yul\":11852:11899   */\n  mstore\n    /* \"#utility.yul\":11735:11906   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11912:12278   */\ntag_77:\n    /* \"#utility.yul\":12054:12057   */\n  0x00\n    /* \"#utility.yul\":12075:12142   */\n  tag_204\n    /* \"#utility.yul\":12139:12141   */\n  0x15\n    /* \"#utility.yul\":12134:12137   */\n  dup4\n    /* \"#utility.yul\":12075:12142   */\n  tag_71\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":12068:12142   */\n  swap2\n  pop\n    /* \"#utility.yul\":12151:12244   */\n  tag_205\n    /* \"#utility.yul\":12240:12243   */\n  dup3\n    /* \"#utility.yul\":12151:12244   */\n  tag_76\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":12269:12271   */\n  0x20\n    /* \"#utility.yul\":12264:12267   */\n  dup3\n    /* \"#utility.yul\":12260:12272   */\n  add\n    /* \"#utility.yul\":12253:12272   */\n  swap1\n  pop\n    /* \"#utility.yul\":11912:12278   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12284:12703   */\ntag_26:\n    /* \"#utility.yul\":12450:12454   */\n  0x00\n    /* \"#utility.yul\":12488:12490   */\n  0x20\n    /* \"#utility.yul\":12477:12486   */\n  dup3\n    /* \"#utility.yul\":12473:12491   */\n  add\n    /* \"#utility.yul\":12465:12491   */\n  swap1\n  pop\n    /* \"#utility.yul\":12537:12546   */\n  dup2\n    /* \"#utility.yul\":12531:12535   */\n  dup2\n    /* \"#utility.yul\":12527:12547   */\n  sub\n    /* \"#utility.yul\":12523:12524   */\n  0x00\n    /* \"#utility.yul\":12512:12521   */\n  dup4\n    /* \"#utility.yul\":12508:12525   */\n  add\n    /* \"#utility.yul\":12501:12548   */\n  mstore\n    /* \"#utility.yul\":12565:12696   */\n  tag_207\n    /* \"#utility.yul\":12691:12695   */\n  dup2\n    /* \"#utility.yul\":12565:12696   */\n  tag_77\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":12557:12696   */\n  swap1\n  pop\n    /* \"#utility.yul\":12284:12703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12709:12889   */\ntag_32:\n    /* \"#utility.yul\":12757:12834   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12754:12755   */\n  0x00\n    /* \"#utility.yul\":12747:12835   */\n  mstore\n    /* \"#utility.yul\":12854:12858   */\n  0x32\n    /* \"#utility.yul\":12851:12852   */\n  0x04\n    /* \"#utility.yul\":12844:12859   */\n  mstore\n    /* \"#utility.yul\":12878:12882   */\n  0x24\n    /* \"#utility.yul\":12875:12876   */\n  0x00\n    /* \"#utility.yul\":12868:12883   */\n  revert\n    /* \"contracts/CCK/CC2/b.sol\":337:6150  contract CCKToken is ERC20, Ownable, IERC3643 {... */\ntag_33:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x373ab5f6f5686eaf15420a778a209383e0ee0196a782fa3fd3ec96f326a92e6e\")\n  0x00\n  assignImmutable(\"0xa994c5983b61d271d018471a2bc76635c06f7e086ea7f835b905117f9d684d96\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/CC2/b.sol\":337:6150  contract CCKToken is ERC20, Ownable, IERC3643 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xcefaaff6\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xe08ba51a\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xe08ba51a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xeb91d37e\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xcefaaff6\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd0516650\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xa9059cbb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaba63705\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbdd3d825\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc802e3cd\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcb4b73ab\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9dc341d0\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x40c10f19\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6290865d\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x158b1a57\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x158b1a57\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2d380242\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12cae7af\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x134e18f4\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":4450:4560  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_5:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2620:2725  function identityRegistry() external view override returns (address) {... */\n    tag_6:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":3065:3179  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_7:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":3588:3904  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_9:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":677:704  uint256 public mintedAmount */\n    tag_10:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":4308:4400  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":3954:4221  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_12:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":2513:2612  function version() external view override returns (string memory) {... */\n    tag_13:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2840:2927  function paused() external view override returns (bool) {... */\n    tag_14:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2733:2832  function compliance() external view override returns (address) {... */\n    tag_15:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":1845:1953  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_18:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":390:444  uint256 public constant TOTAL_SUPPLY = 100_000_000_000 */\n    tag_20:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":498:539  mapping(address => bool) public whitelist */\n    tag_22:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":809:846  address public immutable tokenAddress */\n    tag_23:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":739:780  address public immutable transferReceiver */\n    tag_24:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":3259:3547  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2404:2505  function onchainID() external view override returns (address) {... */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":620:646  address public uniswapPool */\n    tag_27:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":885:924  uint256 public constant MINT_RATIO = 20 */\n    tag_28:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2102:2196  function unfreezeUser(address user) external onlyOwner {... */\n    tag_29:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":4914:6036  function transferAndMint(uint256 amount) external {... */\n    tag_30:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":559:597  mapping(address => bool) public frozen */\n    tag_31:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":2249:2361  function remainingSupply() external view returns (uint256) {... */\n    tag_32:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":1982:2073  function freezeUser(address user) external onlyOwner {... */\n    tag_34:\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":1705:1807  function addToWhitelist(address member) external onlyOwner {... */\n    tag_35:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \"contracts/CCK/CC2/b.sol\":2935:3057  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_36:\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/b.sol\":4595:4871  function getCurrentPrice() external view returns (uint256) {... */\n    tag_37:\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":4450:4560  function balanceOfUser(address user) external view returns (uint256) {... */\n    tag_59:\n        /* \"contracts/CCK/CC2/b.sol\":4510:4517  uint256 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4537:4552  balanceOf(user) */\n      tag_186\n        /* \"contracts/CCK/CC2/b.sol\":4547:4551  user */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":4537:4546  balanceOf */\n      tag_99\n        /* \"contracts/CCK/CC2/b.sol\":4537:4552  balanceOf(user) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/CCK/CC2/b.sol\":4530:4552  return balanceOf(user) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4450:4560  function balanceOfUser(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2620:2725  function identityRegistry() external view override returns (address) {... */\n    tag_63:\n        /* \"contracts/CCK/CC2/b.sol\":2680:2687  address */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2715:2716  0 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2700:2717  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2620:2725  function identityRegistry() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":3065:3179  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n    tag_68:\n        /* \"contracts/CCK/CC2/b.sol\":3143:3150  uint256 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3170:3171  0 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3163:3171  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":3065:3179  function getFrozenTokens(address userAddress) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":3588:3904  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_76:\n        /* \"contracts/CCK/CC2/b.sol\":3686:3690  bool */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3795:3801  amount */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":3779:3803  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":3769:3775  amount */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":3769:3803  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CC2/b.sol\":3761:3833  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/CCK/CC2/b.sol\":3851:3896  super.transferFrom(sender, recipient, amount) */\n      tag_194\n        /* \"contracts/CCK/CC2/b.sol\":3870:3876  sender */\n      dup5\n        /* \"contracts/CCK/CC2/b.sol\":3878:3887  recipient */\n      dup5\n        /* \"contracts/CCK/CC2/b.sol\":3889:3895  amount */\n      dup5\n        /* \"contracts/CCK/CC2/b.sol\":3851:3869  super.transferFrom */\n      tag_195\n        /* \"contracts/CCK/CC2/b.sol\":3851:3896  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/CCK/CC2/b.sol\":3844:3896  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":3588:3904  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":677:704  uint256 public mintedAmount */\n    tag_79:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":4308:4400  function decimals() public view virtual override returns (uint8) {... */\n    tag_82:\n        /* \"contracts/CCK/CC2/b.sol\":4366:4371  uint8 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4391:4392  0 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4384:4392  return 0 */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4308:4400  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":3954:4221  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/CCK/CC2/b.sol\":429:444  100_000_000_000 */\n      0x174876e800\n        /* \"contracts/CCK/CC2/b.sol\":4104:4110  amount */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":4089:4101  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CC2/b.sol\":4089:4110  mintedAmount + amount */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/CCK/CC2/b.sol\":4089:4126  mintedAmount + amount <= TOTAL_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/CCK/CC2/b.sol\":4081:4152  require(mintedAmount + amount <= TOTAL_SUPPLY, \"Total supply exceeded\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/CCK/CC2/b.sol\":4163:4180  _mint(to, amount) */\n      tag_206\n        /* \"contracts/CCK/CC2/b.sol\":4169:4171  to */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":4173:4179  amount */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":4163:4168  _mint */\n      tag_207\n        /* \"contracts/CCK/CC2/b.sol\":4163:4180  _mint(to, amount) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/CCK/CC2/b.sol\":4207:4213  amount */\n      dup1\n        /* \"contracts/CCK/CC2/b.sol\":4191:4203  mintedAmount */\n      0x09\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4191:4213  mintedAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":3954:4221  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2513:2612  function version() external view override returns (string memory) {... */\n    tag_89:\n        /* \"contracts/CCK/CC2/b.sol\":2564:2577  string memory */\n      0x60\n        /* \"contracts/CCK/CC2/b.sol\":2590:2604  return \"1.0.0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x312e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2513:2612  function version() external view override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2840:2927  function paused() external view override returns (bool) {... */\n    tag_92:\n        /* \"contracts/CCK/CC2/b.sol\":2890:2894  bool */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2914:2919  false */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2907:2919  return false */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2840:2927  function paused() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2733:2832  function compliance() external view override returns (address) {... */\n    tag_95:\n        /* \"contracts/CCK/CC2/b.sol\":2787:2794  address */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2822:2823  0 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2807:2824  return address(0) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2733:2832  function compliance() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":1845:1953  function removeFromWhitelist(address member) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/CCK/CC2/b.sol\":1940:1945  false */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":1920:1929  whitelist */\n      0x06\n        /* \"contracts/CCK/CC2/b.sol\":1920:1937  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":1930:1936  member */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":1920:1937  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":1920:1945  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":1845:1953  function removeFromWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":390:444  uint256 public constant TOTAL_SUPPLY = 100_000_000_000 */\n    tag_110:\n        /* \"contracts/CCK/CC2/b.sol\":429:444  100_000_000_000 */\n      0x174876e800\n        /* \"contracts/CCK/CC2/b.sol\":390:444  uint256 public constant TOTAL_SUPPLY = 100_000_000_000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_175\n      jump\t// in\n    tag_223:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_224\n      swap1\n      tag_175\n      jump\t// in\n    tag_224:\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_226\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_225)\n    tag_226:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_227:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_227\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":498:539  mapping(address => bool) public whitelist */\n    tag_117:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":809:846  address public immutable tokenAddress */\n    tag_120:\n      immutable(\"0x373ab5f6f5686eaf15420a778a209383e0ee0196a782fa3fd3ec96f326a92e6e\")\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":739:780  address public immutable transferReceiver */\n    tag_123:\n      immutable(\"0xa994c5983b61d271d018471a2bc76635c06f7e086ea7f835b905117f9d684d96\")\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":3259:3547  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_127:\n        /* \"contracts/CCK/CC2/b.sol\":3337:3341  bool */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3450:3456  amount */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":3434:3458  uint256(uint128(amount)) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":3424:3430  amount */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":3424:3458  amount == uint256(uint128(amount)) */\n      eq\n        /* \"contracts/CCK/CC2/b.sol\":3416:3488  require(amount == uint256(uint128(amount)), \"Amount must be an integer\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_193\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/CCK/CC2/b.sol\":3506:3539  super.transfer(recipient, amount) */\n      tag_231\n        /* \"contracts/CCK/CC2/b.sol\":3521:3530  recipient */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":3532:3538  amount */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":3506:3520  super.transfer */\n      tag_232\n        /* \"contracts/CCK/CC2/b.sol\":3506:3539  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/CCK/CC2/b.sol\":3499:3539  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":3259:3547  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2404:2505  function onchainID() external view override returns (address) {... */\n    tag_130:\n        /* \"contracts/CCK/CC2/b.sol\":2457:2464  address */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2492:2496  this */\n      address\n        /* \"contracts/CCK/CC2/b.sol\":2477:2497  return address(this) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2404:2505  function onchainID() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":620:646  address public uniswapPool */\n    tag_133:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":885:924  uint256 public constant MINT_RATIO = 20 */\n    tag_136:\n        /* \"contracts/CCK/CC2/b.sol\":922:924  20 */\n      0x14\n        /* \"contracts/CCK/CC2/b.sol\":885:924  uint256 public constant MINT_RATIO = 20 */\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2102:2196  function unfreezeUser(address user) external onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/CCK/CC2/b.sol\":2183:2188  false */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2168:2174  frozen */\n      0x07\n        /* \"contracts/CCK/CC2/b.sol\":2168:2180  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2175:2179  user */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":2168:2180  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2168:2188  frozen[user] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2102:2196  function unfreezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":4914:6036  function transferAndMint(uint256 amount) external {... */\n    tag_144:\n        /* \"contracts/CCK/CC2/b.sol\":5054:5055  0 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":5045:5051  amount */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":5045:5055  amount > 0 */\n      gt\n        /* \"contracts/CCK/CC2/b.sol\":5037:5089  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_238:\n        /* \"contracts/CCK/CC2/b.sol\":5316:5328  IERC20 token */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":5338:5350  tokenAddress */\n      immutable(\"0x373ab5f6f5686eaf15420a778a209383e0ee0196a782fa3fd3ec96f326a92e6e\")\n        /* \"contracts/CCK/CC2/b.sol\":5316:5351  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":5542:5548  amount */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":5496:5501  token */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":5496:5511  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/CCK/CC2/b.sol\":5512:5522  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/b.sol\":5532:5536  this */\n      address\n        /* \"contracts/CCK/CC2/b.sol\":5496:5538  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"contracts/CCK/CC2/b.sol\":5496:5548  token.allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/CCK/CC2/b.sol\":5488:5575  require(token.allowance(msg.sender, address(this)) >= amount, \"Insufficient allowance\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/CCK/CC2/b.sol\":5634:5646  bool success */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":5649:5654  token */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":5649:5667  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/CCK/CC2/b.sol\":5668:5678  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/b.sol\":5680:5696  transferReceiver */\n      immutable(\"0xa994c5983b61d271d018471a2bc76635c06f7e086ea7f835b905117f9d684d96\")\n        /* \"contracts/CCK/CC2/b.sol\":5698:5704  amount */\n      dup7\n        /* \"contracts/CCK/CC2/b.sol\":5649:5705  token.transferFrom(msg.sender, transferReceiver, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/CCK/CC2/b.sol\":5634:5705  bool success = token.transferFrom(msg.sender, transferReceiver, amount) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":5724:5731  success */\n      dup1\n        /* \"contracts/CCK/CC2/b.sol\":5716:5757  require(success, \"Token transfer failed\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/CCK/CC2/b.sol\":5815:5832  uint256 cckAmount */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":922:924  20 */\n      0x14\n        /* \"contracts/CCK/CC2/b.sol\":5835:5841  amount */\n      dup5\n        /* \"contracts/CCK/CC2/b.sol\":5835:5854  amount * MINT_RATIO */\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"contracts/CCK/CC2/b.sol\":5815:5854  uint256 cckAmount = amount * MINT_RATIO */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":5865:5893  _mint(msg.sender, cckAmount) */\n      tag_261\n        /* \"contracts/CCK/CC2/b.sol\":5871:5881  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/b.sol\":5883:5892  cckAmount */\n      dup3\n        /* \"contracts/CCK/CC2/b.sol\":5865:5870  _mint */\n      tag_207\n        /* \"contracts/CCK/CC2/b.sol\":5865:5893  _mint(msg.sender, cckAmount) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/CCK/CC2/b.sol\":5920:5929  cckAmount */\n      dup1\n        /* \"contracts/CCK/CC2/b.sol\":5904:5916  mintedAmount */\n      0x09\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":5904:5929  mintedAmount += cckAmount */\n      dup3\n      dup3\n      sload\n      tag_262\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_262:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":6003:6019  transferReceiver */\n      immutable(\"0xa994c5983b61d271d018471a2bc76635c06f7e086ea7f835b905117f9d684d96\")\n        /* \"contracts/CCK/CC2/b.sol\":5972:6028  TransferExecuted(tokenAddress, transferReceiver, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":5989:6001  tokenAddress */\n      immutable(\"0x373ab5f6f5686eaf15420a778a209383e0ee0196a782fa3fd3ec96f326a92e6e\")\n        /* \"contracts/CCK/CC2/b.sol\":5972:6028  TransferExecuted(tokenAddress, transferReceiver, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd\n        /* \"contracts/CCK/CC2/b.sol\":6021:6027  amount */\n      dup7\n        /* \"contracts/CCK/CC2/b.sol\":5972:6028  TransferExecuted(tokenAddress, transferReceiver, amount) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CC2/b.sol\":4964:6036  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4914:6036  function transferAndMint(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":559:597  mapping(address => bool) public frozen */\n    tag_147:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2249:2361  function remainingSupply() external view returns (uint256) {... */\n    tag_150:\n        /* \"contracts/CCK/CC2/b.sol\":2299:2306  uint256 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2341:2353  mintedAmount */\n      sload(0x09)\n        /* \"contracts/CCK/CC2/b.sol\":429:444  100_000_000_000 */\n      0x174876e800\n        /* \"contracts/CCK/CC2/b.sol\":2326:2353  TOTAL_SUPPLY - mintedAmount */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"contracts/CCK/CC2/b.sol\":2319:2353  return TOTAL_SUPPLY - mintedAmount */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2249:2361  function remainingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":1982:2073  function freezeUser(address user) external onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/CCK/CC2/b.sol\":2061:2065  true */\n      0x01\n        /* \"contracts/CCK/CC2/b.sol\":2046:2052  frozen */\n      0x07\n        /* \"contracts/CCK/CC2/b.sol\":2046:2058  frozen[user] */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2053:2057  user */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":2046:2058  frozen[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":2046:2065  frozen[user] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":1982:2073  function freezeUser(address user) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":1705:1807  function addToWhitelist(address member) external onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/CCK/CC2/b.sol\":1795:1799  true */\n      0x01\n        /* \"contracts/CCK/CC2/b.sol\":1775:1784  whitelist */\n      0x06\n        /* \"contracts/CCK/CC2/b.sol\":1775:1792  whitelist[member] */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":1785:1791  member */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":1775:1792  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":1775:1799  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":1705:1807  function addToWhitelist(address member) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":2935:3057  function isFrozen(address userAddress) external view override returns (bool) {... */\n    tag_165:\n        /* \"contracts/CCK/CC2/b.sol\":3006:3010  bool */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3030:3036  frozen */\n      0x07\n        /* \"contracts/CCK/CC2/b.sol\":3030:3049  frozen[userAddress] */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":3037:3048  userAddress */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":3030:3049  frozen[userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":3023:3049  return frozen[userAddress] */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":2935:3057  function isFrozen(address userAddress) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/b.sol\":4595:4871  function getCurrentPrice() external view returns (uint256) {... */\n    tag_168:\n        /* \"contracts/CCK/CC2/b.sol\":4645:4652  uint256 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4665:4684  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4702:4713  uniswapPool */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":4665:4714  IUniswapV3Pool pool = IUniswapV3Pool(uniswapPool) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4726:4746  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4762:4766  pool */\n      dup2\n        /* \"contracts/CCK/CC2/b.sol\":4762:4772  pool.slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/CCK/CC2/b.sol\":4762:4774  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/CCK/CC2/b.sol\":4725:4774  (uint160 sqrtPriceX96, , , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4785:4798  uint256 price */\n      0x00\n        /* \"contracts/CCK/CC2/b.sol\":4831:4839  2 ** 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/CCK/CC2/b.sol\":4826:4827  2 */\n      0x02\n        /* \"contracts/CCK/CC2/b.sol\":4809:4821  sqrtPriceX96 */\n      dup4\n        /* \"contracts/CCK/CC2/b.sol\":4801:4822  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/b.sol\":4801:4827  uint256(sqrtPriceX96) ** 2 */\n      tag_280\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"contracts/CCK/CC2/b.sol\":4801:4840  uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"contracts/CCK/CC2/b.sol\":4785:4840  uint256 price = uint256(sqrtPriceX96) ** 2 / (2 ** 192) */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4858:4863  price */\n      dup1\n        /* \"contracts/CCK/CC2/b.sol\":4851:4863  return price */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CCK/CC2/b.sol\":4595:4871  function getCurrentPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_292\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_337\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_337:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_338)\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_342)\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_343\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_344:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_345:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_346:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_347:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_348:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_400\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_344\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":711:782   */\n      tag_401\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_345\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_402\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_346\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":881:910   */\n      tag_403\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_347\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_49:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_405\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_348\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_350:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_352:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_353:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_411\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_352\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_354:\n        /* \"#utility.yul\":1876:1900   */\n      tag_413\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_353\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_414:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_355:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_416\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_354\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_356:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_357:\n        /* \"#utility.yul\":2232:2256   */\n      tag_419\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_356\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_420:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_358:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_422\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_357\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_52:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_425\n      tag_350\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2525:2644   */\n    tag_424:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_426\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_355\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_427\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_358\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_359:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_360:\n        /* \"#utility.yul\":3089:3110   */\n      tag_430\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_359\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_55:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_432\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_360\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_58:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_435\n      tag_350\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3415:3534   */\n    tag_434:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_436\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_355\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_361:\n        /* \"#utility.yul\":3761:3785   */\n      tag_438\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_356\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_61:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_440\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_361\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4144   */\n    tag_362:\n        /* \"#utility.yul\":4113:4137   */\n      tag_442\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4113:4137   */\n      tag_353\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4101:4138   */\n      mstore\n        /* \"#utility.yul\":4026:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4150:4372   */\n    tag_65:\n        /* \"#utility.yul\":4243:4247   */\n      0x00\n        /* \"#utility.yul\":4281:4283   */\n      0x20\n        /* \"#utility.yul\":4270:4279   */\n      dup3\n        /* \"#utility.yul\":4266:4284   */\n      add\n        /* \"#utility.yul\":4258:4284   */\n      swap1\n      pop\n        /* \"#utility.yul\":4294:4365   */\n      tag_444\n        /* \"#utility.yul\":4362:4363   */\n      0x00\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4364   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4365   */\n      tag_362\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4150:4372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4378:4997   */\n    tag_75:\n        /* \"#utility.yul\":4455:4461   */\n      0x00\n        /* \"#utility.yul\":4463:4469   */\n      0x00\n        /* \"#utility.yul\":4471:4477   */\n      0x00\n        /* \"#utility.yul\":4520:4522   */\n      0x60\n        /* \"#utility.yul\":4508:4517   */\n      dup5\n        /* \"#utility.yul\":4499:4506   */\n      dup7\n        /* \"#utility.yul\":4495:4518   */\n      sub\n        /* \"#utility.yul\":4491:4523   */\n      slt\n        /* \"#utility.yul\":4488:4607   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4526:4605   */\n      tag_447\n      tag_350\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4488:4607   */\n    tag_446:\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4671:4724   */\n      tag_448\n        /* \"#utility.yul\":4716:4723   */\n      dup7\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup8\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4671:4724   */\n      tag_355\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4661:4724   */\n      swap4\n      pop\n        /* \"#utility.yul\":4617:4734   */\n      pop\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4799:4852   */\n      tag_449\n        /* \"#utility.yul\":4844:4851   */\n      dup7\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      dup8\n        /* \"#utility.yul\":4820:4842   */\n      add\n        /* \"#utility.yul\":4799:4852   */\n      tag_355\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4789:4852   */\n      swap3\n      pop\n        /* \"#utility.yul\":4744:4862   */\n      pop\n        /* \"#utility.yul\":4901:4903   */\n      0x40\n        /* \"#utility.yul\":4927:4980   */\n      tag_450\n        /* \"#utility.yul\":4972:4979   */\n      dup7\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup8\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_358\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4917:4980   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4990   */\n      pop\n        /* \"#utility.yul\":4378:4997   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5003:5089   */\n    tag_363:\n        /* \"#utility.yul\":5038:5045   */\n      0x00\n        /* \"#utility.yul\":5078:5082   */\n      0xff\n        /* \"#utility.yul\":5071:5076   */\n      dup3\n        /* \"#utility.yul\":5067:5083   */\n      and\n        /* \"#utility.yul\":5056:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5003:5089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5095:5207   */\n    tag_364:\n        /* \"#utility.yul\":5178:5200   */\n      tag_453\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5178:5200   */\n      tag_363\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5173:5176   */\n      dup3\n        /* \"#utility.yul\":5166:5201   */\n      mstore\n        /* \"#utility.yul\":5095:5207   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5427   */\n    tag_84:\n        /* \"#utility.yul\":5302:5306   */\n      0x00\n        /* \"#utility.yul\":5340:5342   */\n      0x20\n        /* \"#utility.yul\":5329:5338   */\n      dup3\n        /* \"#utility.yul\":5325:5343   */\n      add\n        /* \"#utility.yul\":5317:5343   */\n      swap1\n      pop\n        /* \"#utility.yul\":5353:5420   */\n      tag_455\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5353:5420   */\n      tag_364\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5213:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_143:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_458\n      tag_350\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5509:5628   */\n    tag_457:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_459\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_358\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_154:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_462\n      tag_350\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5861:5980   */\n    tag_461:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_463\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_355\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_464\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_355\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_365:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_175:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_467:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_469\n      tag_365\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6664:6748   */\n    tag_468:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6935   */\n    tag_366:\n        /* \"#utility.yul\":6900:6927   */\n      0x416d6f756e74206d75737420626520616e20696e746567657200000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6928   */\n      mstore\n        /* \"#utility.yul\":6760:6935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7307   */\n    tag_367:\n        /* \"#utility.yul\":7083:7086   */\n      0x00\n        /* \"#utility.yul\":7104:7171   */\n      tag_472\n        /* \"#utility.yul\":7168:7170   */\n      0x19\n        /* \"#utility.yul\":7163:7166   */\n      dup4\n        /* \"#utility.yul\":7104:7171   */\n      tag_345\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7097:7171   */\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7273   */\n      tag_473\n        /* \"#utility.yul\":7269:7272   */\n      dup3\n        /* \"#utility.yul\":7180:7273   */\n      tag_366\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7298:7300   */\n      0x20\n        /* \"#utility.yul\":7293:7296   */\n      dup3\n        /* \"#utility.yul\":7289:7301   */\n      add\n        /* \"#utility.yul\":7282:7301   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:7307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7313:7732   */\n    tag_193:\n        /* \"#utility.yul\":7479:7483   */\n      0x00\n        /* \"#utility.yul\":7517:7519   */\n      0x20\n        /* \"#utility.yul\":7506:7515   */\n      dup3\n        /* \"#utility.yul\":7502:7520   */\n      add\n        /* \"#utility.yul\":7494:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7566:7575   */\n      dup2\n        /* \"#utility.yul\":7560:7564   */\n      dup2\n        /* \"#utility.yul\":7556:7576   */\n      sub\n        /* \"#utility.yul\":7552:7553   */\n      0x00\n        /* \"#utility.yul\":7541:7550   */\n      dup4\n        /* \"#utility.yul\":7537:7554   */\n      add\n        /* \"#utility.yul\":7530:7577   */\n      mstore\n        /* \"#utility.yul\":7594:7725   */\n      tag_475\n        /* \"#utility.yul\":7720:7724   */\n      dup2\n        /* \"#utility.yul\":7594:7725   */\n      tag_367\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7586:7725   */\n      swap1\n      pop\n        /* \"#utility.yul\":7313:7732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:7918   */\n    tag_368:\n        /* \"#utility.yul\":7786:7863   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7783:7784   */\n      0x00\n        /* \"#utility.yul\":7776:7864   */\n      mstore\n        /* \"#utility.yul\":7883:7887   */\n      0x11\n        /* \"#utility.yul\":7880:7881   */\n      0x04\n        /* \"#utility.yul\":7873:7888   */\n      mstore\n        /* \"#utility.yul\":7907:7911   */\n      0x24\n        /* \"#utility.yul\":7904:7905   */\n      0x00\n        /* \"#utility.yul\":7897:7912   */\n      revert\n        /* \"#utility.yul\":7924:8115   */\n    tag_202:\n        /* \"#utility.yul\":7964:7967   */\n      0x00\n        /* \"#utility.yul\":7983:8003   */\n      tag_478\n        /* \"#utility.yul\":8001:8002   */\n      dup3\n        /* \"#utility.yul\":7983:8003   */\n      tag_356\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7978:8003   */\n      swap2\n      pop\n        /* \"#utility.yul\":8017:8037   */\n      tag_479\n        /* \"#utility.yul\":8035:8036   */\n      dup4\n        /* \"#utility.yul\":8017:8037   */\n      tag_356\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8012:8037   */\n      swap3\n      pop\n        /* \"#utility.yul\":8060:8061   */\n      dup3\n        /* \"#utility.yul\":8057:8058   */\n      dup3\n        /* \"#utility.yul\":8053:8062   */\n      add\n        /* \"#utility.yul\":8046:8062   */\n      swap1\n      pop\n        /* \"#utility.yul\":8081:8084   */\n      dup1\n        /* \"#utility.yul\":8078:8079   */\n      dup3\n        /* \"#utility.yul\":8075:8085   */\n      gt\n        /* \"#utility.yul\":8072:8108   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8088:8106   */\n      tag_481\n      tag_368\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8072:8108   */\n    tag_480:\n        /* \"#utility.yul\":7924:8115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8121:8292   */\n    tag_369:\n        /* \"#utility.yul\":8261:8284   */\n      0x546f74616c20737570706c792065786365656465640000000000000000000000\n        /* \"#utility.yul\":8257:8258   */\n      0x00\n        /* \"#utility.yul\":8249:8255   */\n      dup3\n        /* \"#utility.yul\":8245:8259   */\n      add\n        /* \"#utility.yul\":8238:8285   */\n      mstore\n        /* \"#utility.yul\":8121:8292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8298:8664   */\n    tag_370:\n        /* \"#utility.yul\":8440:8443   */\n      0x00\n        /* \"#utility.yul\":8461:8528   */\n      tag_484\n        /* \"#utility.yul\":8525:8527   */\n      0x15\n        /* \"#utility.yul\":8520:8523   */\n      dup4\n        /* \"#utility.yul\":8461:8528   */\n      tag_345\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8454:8528   */\n      swap2\n      pop\n        /* \"#utility.yul\":8537:8630   */\n      tag_485\n        /* \"#utility.yul\":8626:8629   */\n      dup3\n        /* \"#utility.yul\":8537:8630   */\n      tag_369\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8655:8657   */\n      0x20\n        /* \"#utility.yul\":8650:8653   */\n      dup3\n        /* \"#utility.yul\":8646:8658   */\n      add\n        /* \"#utility.yul\":8639:8658   */\n      swap1\n      pop\n        /* \"#utility.yul\":8298:8664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8670:9089   */\n    tag_205:\n        /* \"#utility.yul\":8836:8840   */\n      0x00\n        /* \"#utility.yul\":8874:8876   */\n      0x20\n        /* \"#utility.yul\":8863:8872   */\n      dup3\n        /* \"#utility.yul\":8859:8877   */\n      add\n        /* \"#utility.yul\":8851:8877   */\n      swap1\n      pop\n        /* \"#utility.yul\":8923:8932   */\n      dup2\n        /* \"#utility.yul\":8917:8921   */\n      dup2\n        /* \"#utility.yul\":8913:8933   */\n      sub\n        /* \"#utility.yul\":8909:8910   */\n      0x00\n        /* \"#utility.yul\":8898:8907   */\n      dup4\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8887:8934   */\n      mstore\n        /* \"#utility.yul\":8951:9082   */\n      tag_487\n        /* \"#utility.yul\":9077:9081   */\n      dup2\n        /* \"#utility.yul\":8951:9082   */\n      tag_370\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":8943:9082   */\n      swap1\n      pop\n        /* \"#utility.yul\":8670:9089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9095:9274   */\n    tag_371:\n        /* \"#utility.yul\":9235:9266   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":9231:9232   */\n      0x00\n        /* \"#utility.yul\":9223:9229   */\n      dup3\n        /* \"#utility.yul\":9219:9233   */\n      add\n        /* \"#utility.yul\":9212:9267   */\n      mstore\n        /* \"#utility.yul\":9095:9274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9280:9646   */\n    tag_372:\n        /* \"#utility.yul\":9422:9425   */\n      0x00\n        /* \"#utility.yul\":9443:9510   */\n      tag_490\n        /* \"#utility.yul\":9507:9509   */\n      0x1d\n        /* \"#utility.yul\":9502:9505   */\n      dup4\n        /* \"#utility.yul\":9443:9510   */\n      tag_345\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9436:9510   */\n      swap2\n      pop\n        /* \"#utility.yul\":9519:9612   */\n      tag_491\n        /* \"#utility.yul\":9608:9611   */\n      dup3\n        /* \"#utility.yul\":9519:9612   */\n      tag_371\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9637:9639   */\n      0x20\n        /* \"#utility.yul\":9632:9635   */\n      dup3\n        /* \"#utility.yul\":9628:9640   */\n      add\n        /* \"#utility.yul\":9621:9640   */\n      swap1\n      pop\n        /* \"#utility.yul\":9280:9646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9652:10071   */\n    tag_240:\n        /* \"#utility.yul\":9818:9822   */\n      0x00\n        /* \"#utility.yul\":9856:9858   */\n      0x20\n        /* \"#utility.yul\":9845:9854   */\n      dup3\n        /* \"#utility.yul\":9841:9859   */\n      add\n        /* \"#utility.yul\":9833:9859   */\n      swap1\n      pop\n        /* \"#utility.yul\":9905:9914   */\n      dup2\n        /* \"#utility.yul\":9899:9903   */\n      dup2\n        /* \"#utility.yul\":9895:9915   */\n      sub\n        /* \"#utility.yul\":9891:9892   */\n      0x00\n        /* \"#utility.yul\":9880:9889   */\n      dup4\n        /* \"#utility.yul\":9876:9893   */\n      add\n        /* \"#utility.yul\":9869:9916   */\n      mstore\n        /* \"#utility.yul\":9933:10064   */\n      tag_493\n        /* \"#utility.yul\":10059:10063   */\n      dup2\n        /* \"#utility.yul\":9933:10064   */\n      tag_372\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9925:10064   */\n      swap1\n      pop\n        /* \"#utility.yul\":9652:10071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10077:10409   */\n    tag_242:\n        /* \"#utility.yul\":10198:10202   */\n      0x00\n        /* \"#utility.yul\":10236:10238   */\n      0x40\n        /* \"#utility.yul\":10225:10234   */\n      dup3\n        /* \"#utility.yul\":10221:10239   */\n      add\n        /* \"#utility.yul\":10213:10239   */\n      swap1\n      pop\n        /* \"#utility.yul\":10249:10320   */\n      tag_495\n        /* \"#utility.yul\":10317:10318   */\n      0x00\n        /* \"#utility.yul\":10306:10315   */\n      dup4\n        /* \"#utility.yul\":10302:10319   */\n      add\n        /* \"#utility.yul\":10293:10299   */\n      dup6\n        /* \"#utility.yul\":10249:10320   */\n      tag_362\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10330:10402   */\n      tag_496\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10387:10396   */\n      dup4\n        /* \"#utility.yul\":10383:10401   */\n      add\n        /* \"#utility.yul\":10374:10380   */\n      dup5\n        /* \"#utility.yul\":10330:10402   */\n      tag_362\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10077:10409   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10415:10558   */\n    tag_373:\n        /* \"#utility.yul\":10472:10477   */\n      0x00\n        /* \"#utility.yul\":10503:10509   */\n      dup2\n        /* \"#utility.yul\":10497:10510   */\n      mload\n        /* \"#utility.yul\":10488:10510   */\n      swap1\n      pop\n        /* \"#utility.yul\":10519:10552   */\n      tag_498\n        /* \"#utility.yul\":10546:10551   */\n      dup2\n        /* \"#utility.yul\":10519:10552   */\n      tag_357\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10415:10558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10564:10915   */\n    tag_246:\n        /* \"#utility.yul\":10634:10640   */\n      0x00\n        /* \"#utility.yul\":10683:10685   */\n      0x20\n        /* \"#utility.yul\":10671:10680   */\n      dup3\n        /* \"#utility.yul\":10662:10669   */\n      dup5\n        /* \"#utility.yul\":10658:10681   */\n      sub\n        /* \"#utility.yul\":10654:10686   */\n      slt\n        /* \"#utility.yul\":10651:10770   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":10689:10768   */\n      tag_501\n      tag_350\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":10651:10770   */\n    tag_500:\n        /* \"#utility.yul\":10809:10810   */\n      0x00\n        /* \"#utility.yul\":10834:10898   */\n      tag_502\n        /* \"#utility.yul\":10890:10897   */\n      dup5\n        /* \"#utility.yul\":10881:10887   */\n      dup3\n        /* \"#utility.yul\":10870:10879   */\n      dup6\n        /* \"#utility.yul\":10866:10888   */\n      add\n        /* \"#utility.yul\":10834:10898   */\n      tag_373\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10824:10898   */\n      swap2\n      pop\n        /* \"#utility.yul\":10780:10908   */\n      pop\n        /* \"#utility.yul\":10564:10915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10921:11093   */\n    tag_374:\n        /* \"#utility.yul\":11061:11085   */\n      0x496e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":11057:11058   */\n      0x00\n        /* \"#utility.yul\":11049:11055   */\n      dup3\n        /* \"#utility.yul\":11045:11059   */\n      add\n        /* \"#utility.yul\":11038:11086   */\n      mstore\n        /* \"#utility.yul\":10921:11093   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11099:11465   */\n    tag_375:\n        /* \"#utility.yul\":11241:11244   */\n      0x00\n        /* \"#utility.yul\":11262:11329   */\n      tag_505\n        /* \"#utility.yul\":11326:11328   */\n      0x16\n        /* \"#utility.yul\":11321:11324   */\n      dup4\n        /* \"#utility.yul\":11262:11329   */\n      tag_345\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11255:11329   */\n      swap2\n      pop\n        /* \"#utility.yul\":11338:11431   */\n      tag_506\n        /* \"#utility.yul\":11427:11430   */\n      dup3\n        /* \"#utility.yul\":11338:11431   */\n      tag_374\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11456:11458   */\n      0x20\n        /* \"#utility.yul\":11451:11454   */\n      dup3\n        /* \"#utility.yul\":11447:11459   */\n      add\n        /* \"#utility.yul\":11440:11459   */\n      swap1\n      pop\n        /* \"#utility.yul\":11099:11465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11471:11890   */\n    tag_249:\n        /* \"#utility.yul\":11637:11641   */\n      0x00\n        /* \"#utility.yul\":11675:11677   */\n      0x20\n        /* \"#utility.yul\":11664:11673   */\n      dup3\n        /* \"#utility.yul\":11660:11678   */\n      add\n        /* \"#utility.yul\":11652:11678   */\n      swap1\n      pop\n        /* \"#utility.yul\":11724:11733   */\n      dup2\n        /* \"#utility.yul\":11718:11722   */\n      dup2\n        /* \"#utility.yul\":11714:11734   */\n      sub\n        /* \"#utility.yul\":11710:11711   */\n      0x00\n        /* \"#utility.yul\":11699:11708   */\n      dup4\n        /* \"#utility.yul\":11695:11712   */\n      add\n        /* \"#utility.yul\":11688:11735   */\n      mstore\n        /* \"#utility.yul\":11752:11883   */\n      tag_508\n        /* \"#utility.yul\":11878:11882   */\n      dup2\n        /* \"#utility.yul\":11752:11883   */\n      tag_375\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11744:11883   */\n      swap1\n      pop\n        /* \"#utility.yul\":11471:11890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11896:12338   */\n    tag_251:\n        /* \"#utility.yul\":12045:12049   */\n      0x00\n        /* \"#utility.yul\":12083:12085   */\n      0x60\n        /* \"#utility.yul\":12072:12081   */\n      dup3\n        /* \"#utility.yul\":12068:12086   */\n      add\n        /* \"#utility.yul\":12060:12086   */\n      swap1\n      pop\n        /* \"#utility.yul\":12096:12167   */\n      tag_510\n        /* \"#utility.yul\":12164:12165   */\n      0x00\n        /* \"#utility.yul\":12153:12162   */\n      dup4\n        /* \"#utility.yul\":12149:12166   */\n      add\n        /* \"#utility.yul\":12140:12146   */\n      dup7\n        /* \"#utility.yul\":12096:12167   */\n      tag_362\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12177:12249   */\n      tag_511\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"#utility.yul\":12234:12243   */\n      dup4\n        /* \"#utility.yul\":12230:12248   */\n      add\n        /* \"#utility.yul\":12221:12227   */\n      dup6\n        /* \"#utility.yul\":12177:12249   */\n      tag_362\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12259:12331   */\n      tag_512\n        /* \"#utility.yul\":12327:12329   */\n      0x40\n        /* \"#utility.yul\":12316:12325   */\n      dup4\n        /* \"#utility.yul\":12312:12330   */\n      add\n        /* \"#utility.yul\":12303:12309   */\n      dup5\n        /* \"#utility.yul\":12259:12331   */\n      tag_361\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11896:12338   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12344:12460   */\n    tag_376:\n        /* \"#utility.yul\":12414:12435   */\n      tag_514\n        /* \"#utility.yul\":12429:12434   */\n      dup2\n        /* \"#utility.yul\":12414:12435   */\n      tag_359\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12407:12412   */\n      dup2\n        /* \"#utility.yul\":12404:12436   */\n      eq\n        /* \"#utility.yul\":12394:12454   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":12450:12451   */\n      0x00\n        /* \"#utility.yul\":12447:12448   */\n      0x00\n        /* \"#utility.yul\":12440:12452   */\n      revert\n        /* \"#utility.yul\":12394:12454   */\n    tag_515:\n        /* \"#utility.yul\":12344:12460   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12466:12603   */\n    tag_377:\n        /* \"#utility.yul\":12520:12525   */\n      0x00\n        /* \"#utility.yul\":12551:12557   */\n      dup2\n        /* \"#utility.yul\":12545:12558   */\n      mload\n        /* \"#utility.yul\":12536:12558   */\n      swap1\n      pop\n        /* \"#utility.yul\":12567:12597   */\n      tag_517\n        /* \"#utility.yul\":12591:12596   */\n      dup2\n        /* \"#utility.yul\":12567:12597   */\n      tag_376\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12466:12603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12609:12954   */\n    tag_255:\n        /* \"#utility.yul\":12676:12682   */\n      0x00\n        /* \"#utility.yul\":12725:12727   */\n      0x20\n        /* \"#utility.yul\":12713:12722   */\n      dup3\n        /* \"#utility.yul\":12704:12711   */\n      dup5\n        /* \"#utility.yul\":12700:12723   */\n      sub\n        /* \"#utility.yul\":12696:12728   */\n      slt\n        /* \"#utility.yul\":12693:12812   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":12731:12810   */\n      tag_520\n      tag_350\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12693:12812   */\n    tag_519:\n        /* \"#utility.yul\":12851:12852   */\n      0x00\n        /* \"#utility.yul\":12876:12937   */\n      tag_521\n        /* \"#utility.yul\":12929:12936   */\n      dup5\n        /* \"#utility.yul\":12920:12926   */\n      dup3\n        /* \"#utility.yul\":12909:12918   */\n      dup6\n        /* \"#utility.yul\":12905:12927   */\n      add\n        /* \"#utility.yul\":12876:12937   */\n      tag_377\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":12866:12937   */\n      swap2\n      pop\n        /* \"#utility.yul\":12822:12947   */\n      pop\n        /* \"#utility.yul\":12609:12954   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12960:13131   */\n    tag_378:\n        /* \"#utility.yul\":13100:13123   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":13096:13097   */\n      0x00\n        /* \"#utility.yul\":13088:13094   */\n      dup3\n        /* \"#utility.yul\":13084:13098   */\n      add\n        /* \"#utility.yul\":13077:13124   */\n      mstore\n        /* \"#utility.yul\":12960:13131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13137:13503   */\n    tag_379:\n        /* \"#utility.yul\":13279:13282   */\n      0x00\n        /* \"#utility.yul\":13300:13367   */\n      tag_524\n        /* \"#utility.yul\":13364:13366   */\n      0x15\n        /* \"#utility.yul\":13359:13362   */\n      dup4\n        /* \"#utility.yul\":13300:13367   */\n      tag_345\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13293:13367   */\n      swap2\n      pop\n        /* \"#utility.yul\":13376:13469   */\n      tag_525\n        /* \"#utility.yul\":13465:13468   */\n      dup3\n        /* \"#utility.yul\":13376:13469   */\n      tag_378\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13494:13496   */\n      0x20\n        /* \"#utility.yul\":13489:13492   */\n      dup3\n        /* \"#utility.yul\":13485:13497   */\n      add\n        /* \"#utility.yul\":13478:13497   */\n      swap1\n      pop\n        /* \"#utility.yul\":13137:13503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13509:13928   */\n    tag_258:\n        /* \"#utility.yul\":13675:13679   */\n      0x00\n        /* \"#utility.yul\":13713:13715   */\n      0x20\n        /* \"#utility.yul\":13702:13711   */\n      dup3\n        /* \"#utility.yul\":13698:13716   */\n      add\n        /* \"#utility.yul\":13690:13716   */\n      swap1\n      pop\n        /* \"#utility.yul\":13762:13771   */\n      dup2\n        /* \"#utility.yul\":13756:13760   */\n      dup2\n        /* \"#utility.yul\":13752:13772   */\n      sub\n        /* \"#utility.yul\":13748:13749   */\n      0x00\n        /* \"#utility.yul\":13737:13746   */\n      dup4\n        /* \"#utility.yul\":13733:13750   */\n      add\n        /* \"#utility.yul\":13726:13773   */\n      mstore\n        /* \"#utility.yul\":13790:13921   */\n      tag_527\n        /* \"#utility.yul\":13916:13920   */\n      dup2\n        /* \"#utility.yul\":13790:13921   */\n      tag_379\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":13782:13921   */\n      swap1\n      pop\n        /* \"#utility.yul\":13509:13928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13934:14344   */\n    tag_260:\n        /* \"#utility.yul\":13974:13981   */\n      0x00\n        /* \"#utility.yul\":13997:14017   */\n      tag_529\n        /* \"#utility.yul\":14015:14016   */\n      dup3\n        /* \"#utility.yul\":13997:14017   */\n      tag_356\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13992:14017   */\n      swap2\n      pop\n        /* \"#utility.yul\":14031:14051   */\n      tag_530\n        /* \"#utility.yul\":14049:14050   */\n      dup4\n        /* \"#utility.yul\":14031:14051   */\n      tag_356\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14026:14051   */\n      swap3\n      pop\n        /* \"#utility.yul\":14086:14087   */\n      dup3\n        /* \"#utility.yul\":14083:14084   */\n      dup3\n        /* \"#utility.yul\":14079:14088   */\n      mul\n        /* \"#utility.yul\":14108:14138   */\n      tag_531\n        /* \"#utility.yul\":14126:14137   */\n      dup2\n        /* \"#utility.yul\":14108:14138   */\n      tag_356\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14097:14138   */\n      swap2\n      pop\n        /* \"#utility.yul\":14287:14288   */\n      dup3\n        /* \"#utility.yul\":14278:14285   */\n      dup3\n        /* \"#utility.yul\":14274:14289   */\n      div\n        /* \"#utility.yul\":14271:14272   */\n      dup5\n        /* \"#utility.yul\":14268:14290   */\n      eq\n        /* \"#utility.yul\":14248:14249   */\n      dup4\n        /* \"#utility.yul\":14241:14250   */\n      iszero\n        /* \"#utility.yul\":14221:14304   */\n      or\n        /* \"#utility.yul\":14198:14337   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":14317:14335   */\n      tag_533\n      tag_368\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14198:14337   */\n    tag_532:\n        /* \"#utility.yul\":13982:14344   */\n      pop\n        /* \"#utility.yul\":13934:14344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14350:14544   */\n    tag_266:\n        /* \"#utility.yul\":14390:14394   */\n      0x00\n        /* \"#utility.yul\":14410:14430   */\n      tag_535\n        /* \"#utility.yul\":14428:14429   */\n      dup3\n        /* \"#utility.yul\":14410:14430   */\n      tag_356\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14405:14430   */\n      swap2\n      pop\n        /* \"#utility.yul\":14444:14464   */\n      tag_536\n        /* \"#utility.yul\":14462:14463   */\n      dup4\n        /* \"#utility.yul\":14444:14464   */\n      tag_356\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14439:14464   */\n      swap3\n      pop\n        /* \"#utility.yul\":14488:14489   */\n      dup3\n        /* \"#utility.yul\":14485:14486   */\n      dup3\n        /* \"#utility.yul\":14481:14490   */\n      sub\n        /* \"#utility.yul\":14473:14490   */\n      swap1\n      pop\n        /* \"#utility.yul\":14512:14513   */\n      dup2\n        /* \"#utility.yul\":14506:14510   */\n      dup2\n        /* \"#utility.yul\":14503:14514   */\n      gt\n        /* \"#utility.yul\":14500:14537   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":14517:14535   */\n      tag_538\n      tag_368\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14500:14537   */\n    tag_537:\n        /* \"#utility.yul\":14350:14544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14550:14672   */\n    tag_380:\n        /* \"#utility.yul\":14623:14647   */\n      tag_540\n        /* \"#utility.yul\":14641:14646   */\n      dup2\n        /* \"#utility.yul\":14623:14647   */\n      tag_352\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14616:14621   */\n      dup2\n        /* \"#utility.yul\":14613:14648   */\n      eq\n        /* \"#utility.yul\":14603:14666   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":14662:14663   */\n      0x00\n        /* \"#utility.yul\":14659:14660   */\n      0x00\n        /* \"#utility.yul\":14652:14664   */\n      revert\n        /* \"#utility.yul\":14603:14666   */\n    tag_541:\n        /* \"#utility.yul\":14550:14672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14678:14821   */\n    tag_381:\n        /* \"#utility.yul\":14735:14740   */\n      0x00\n        /* \"#utility.yul\":14766:14772   */\n      dup2\n        /* \"#utility.yul\":14760:14773   */\n      mload\n        /* \"#utility.yul\":14751:14773   */\n      swap1\n      pop\n        /* \"#utility.yul\":14782:14815   */\n      tag_543\n        /* \"#utility.yul\":14809:14814   */\n      dup2\n        /* \"#utility.yul\":14782:14815   */\n      tag_380\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":14678:14821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14827:14917   */\n    tag_382:\n        /* \"#utility.yul\":14862:14869   */\n      0x00\n        /* \"#utility.yul\":14905:14910   */\n      dup2\n        /* \"#utility.yul\":14902:14903   */\n      0x02\n        /* \"#utility.yul\":14891:14911   */\n      signextend\n        /* \"#utility.yul\":14880:14911   */\n      swap1\n      pop\n        /* \"#utility.yul\":14827:14917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14923:15041   */\n    tag_383:\n        /* \"#utility.yul\":14994:15016   */\n      tag_546\n        /* \"#utility.yul\":15010:15015   */\n      dup2\n        /* \"#utility.yul\":14994:15016   */\n      tag_382\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14987:14992   */\n      dup2\n        /* \"#utility.yul\":14984:15017   */\n      eq\n        /* \"#utility.yul\":14974:15035   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":15031:15032   */\n      0x00\n        /* \"#utility.yul\":15028:15029   */\n      0x00\n        /* \"#utility.yul\":15021:15033   */\n      revert\n        /* \"#utility.yul\":14974:15035   */\n    tag_547:\n        /* \"#utility.yul\":14923:15041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15047:15186   */\n    tag_384:\n        /* \"#utility.yul\":15102:15107   */\n      0x00\n        /* \"#utility.yul\":15133:15139   */\n      dup2\n        /* \"#utility.yul\":15127:15140   */\n      mload\n        /* \"#utility.yul\":15118:15140   */\n      swap1\n      pop\n        /* \"#utility.yul\":15149:15180   */\n      tag_549\n        /* \"#utility.yul\":15174:15179   */\n      dup2\n        /* \"#utility.yul\":15149:15180   */\n      tag_383\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15047:15186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15192:15281   */\n    tag_385:\n        /* \"#utility.yul\":15228:15235   */\n      0x00\n        /* \"#utility.yul\":15268:15274   */\n      0xffff\n        /* \"#utility.yul\":15261:15266   */\n      dup3\n        /* \"#utility.yul\":15257:15275   */\n      and\n        /* \"#utility.yul\":15246:15275   */\n      swap1\n      pop\n        /* \"#utility.yul\":15192:15281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15287:15407   */\n    tag_386:\n        /* \"#utility.yul\":15359:15382   */\n      tag_552\n        /* \"#utility.yul\":15376:15381   */\n      dup2\n        /* \"#utility.yul\":15359:15382   */\n      tag_385\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":15352:15357   */\n      dup2\n        /* \"#utility.yul\":15349:15383   */\n      eq\n        /* \"#utility.yul\":15339:15401   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":15397:15398   */\n      0x00\n        /* \"#utility.yul\":15394:15395   */\n      0x00\n        /* \"#utility.yul\":15387:15399   */\n      revert\n        /* \"#utility.yul\":15339:15401   */\n    tag_553:\n        /* \"#utility.yul\":15287:15407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15413:15554   */\n    tag_387:\n        /* \"#utility.yul\":15469:15474   */\n      0x00\n        /* \"#utility.yul\":15500:15506   */\n      dup2\n        /* \"#utility.yul\":15494:15507   */\n      mload\n        /* \"#utility.yul\":15485:15507   */\n      swap1\n      pop\n        /* \"#utility.yul\":15516:15548   */\n      tag_555\n        /* \"#utility.yul\":15542:15547   */\n      dup2\n        /* \"#utility.yul\":15516:15548   */\n      tag_386\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15413:15554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15560:15678   */\n    tag_388:\n        /* \"#utility.yul\":15631:15653   */\n      tag_557\n        /* \"#utility.yul\":15647:15652   */\n      dup2\n        /* \"#utility.yul\":15631:15653   */\n      tag_363\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15624:15629   */\n      dup2\n        /* \"#utility.yul\":15621:15654   */\n      eq\n        /* \"#utility.yul\":15611:15672   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":15668:15669   */\n      0x00\n        /* \"#utility.yul\":15665:15666   */\n      0x00\n        /* \"#utility.yul\":15658:15670   */\n      revert\n        /* \"#utility.yul\":15611:15672   */\n    tag_558:\n        /* \"#utility.yul\":15560:15678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15684:15823   */\n    tag_389:\n        /* \"#utility.yul\":15739:15744   */\n      0x00\n        /* \"#utility.yul\":15770:15776   */\n      dup2\n        /* \"#utility.yul\":15764:15777   */\n      mload\n        /* \"#utility.yul\":15755:15777   */\n      swap1\n      pop\n        /* \"#utility.yul\":15786:15817   */\n      tag_560\n        /* \"#utility.yul\":15811:15816   */\n      dup2\n        /* \"#utility.yul\":15786:15817   */\n      tag_388\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15684:15823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15829:17100   */\n    tag_279:\n        /* \"#utility.yul\":15943:15949   */\n      0x00\n        /* \"#utility.yul\":15951:15957   */\n      0x00\n        /* \"#utility.yul\":15959:15965   */\n      0x00\n        /* \"#utility.yul\":15967:15973   */\n      0x00\n        /* \"#utility.yul\":15975:15981   */\n      0x00\n        /* \"#utility.yul\":15983:15989   */\n      0x00\n        /* \"#utility.yul\":15991:15997   */\n      0x00\n        /* \"#utility.yul\":16040:16043   */\n      0xe0\n        /* \"#utility.yul\":16028:16037   */\n      dup9\n        /* \"#utility.yul\":16019:16026   */\n      dup11\n        /* \"#utility.yul\":16015:16038   */\n      sub\n        /* \"#utility.yul\":16011:16044   */\n      slt\n        /* \"#utility.yul\":16008:16128   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":16047:16126   */\n      tag_563\n      tag_350\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16008:16128   */\n    tag_562:\n        /* \"#utility.yul\":16167:16168   */\n      0x00\n        /* \"#utility.yul\":16192:16256   */\n      tag_564\n        /* \"#utility.yul\":16248:16255   */\n      dup11\n        /* \"#utility.yul\":16239:16245   */\n      dup3\n        /* \"#utility.yul\":16228:16237   */\n      dup12\n        /* \"#utility.yul\":16224:16246   */\n      add\n        /* \"#utility.yul\":16192:16256   */\n      tag_381\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16182:16256   */\n      swap8\n      pop\n        /* \"#utility.yul\":16138:16266   */\n      pop\n        /* \"#utility.yul\":16305:16307   */\n      0x20\n        /* \"#utility.yul\":16331:16393   */\n      tag_565\n        /* \"#utility.yul\":16385:16392   */\n      dup11\n        /* \"#utility.yul\":16376:16382   */\n      dup3\n        /* \"#utility.yul\":16365:16374   */\n      dup12\n        /* \"#utility.yul\":16361:16383   */\n      add\n        /* \"#utility.yul\":16331:16393   */\n      tag_384\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16321:16393   */\n      swap7\n      pop\n        /* \"#utility.yul\":16276:16403   */\n      pop\n        /* \"#utility.yul\":16442:16444   */\n      0x40\n        /* \"#utility.yul\":16468:16531   */\n      tag_566\n        /* \"#utility.yul\":16523:16530   */\n      dup11\n        /* \"#utility.yul\":16514:16520   */\n      dup3\n        /* \"#utility.yul\":16503:16512   */\n      dup12\n        /* \"#utility.yul\":16499:16521   */\n      add\n        /* \"#utility.yul\":16468:16531   */\n      tag_387\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16458:16531   */\n      swap6\n      pop\n        /* \"#utility.yul\":16413:16541   */\n      pop\n        /* \"#utility.yul\":16580:16582   */\n      0x60\n        /* \"#utility.yul\":16606:16669   */\n      tag_567\n        /* \"#utility.yul\":16661:16668   */\n      dup11\n        /* \"#utility.yul\":16652:16658   */\n      dup3\n        /* \"#utility.yul\":16641:16650   */\n      dup12\n        /* \"#utility.yul\":16637:16659   */\n      add\n        /* \"#utility.yul\":16606:16669   */\n      tag_387\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16596:16669   */\n      swap5\n      pop\n        /* \"#utility.yul\":16551:16679   */\n      pop\n        /* \"#utility.yul\":16718:16721   */\n      0x80\n        /* \"#utility.yul\":16745:16808   */\n      tag_568\n        /* \"#utility.yul\":16800:16807   */\n      dup11\n        /* \"#utility.yul\":16791:16797   */\n      dup3\n        /* \"#utility.yul\":16780:16789   */\n      dup12\n        /* \"#utility.yul\":16776:16798   */\n      add\n        /* \"#utility.yul\":16745:16808   */\n      tag_387\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":16735:16808   */\n      swap4\n      pop\n        /* \"#utility.yul\":16689:16818   */\n      pop\n        /* \"#utility.yul\":16857:16860   */\n      0xa0\n        /* \"#utility.yul\":16884:16946   */\n      tag_569\n        /* \"#utility.yul\":16938:16945   */\n      dup11\n        /* \"#utility.yul\":16929:16935   */\n      dup3\n        /* \"#utility.yul\":16918:16927   */\n      dup12\n        /* \"#utility.yul\":16914:16936   */\n      add\n        /* \"#utility.yul\":16884:16946   */\n      tag_389\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":16874:16946   */\n      swap3\n      pop\n        /* \"#utility.yul\":16828:16956   */\n      pop\n        /* \"#utility.yul\":16995:16998   */\n      0xc0\n        /* \"#utility.yul\":17022:17083   */\n      tag_570\n        /* \"#utility.yul\":17075:17082   */\n      dup11\n        /* \"#utility.yul\":17066:17072   */\n      dup3\n        /* \"#utility.yul\":17055:17064   */\n      dup12\n        /* \"#utility.yul\":17051:17073   */\n      add\n        /* \"#utility.yul\":17022:17083   */\n      tag_377\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":17012:17083   */\n      swap2\n      pop\n        /* \"#utility.yul\":16966:17093   */\n      pop\n        /* \"#utility.yul\":15829:17100   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17106:17208   */\n    tag_390:\n        /* \"#utility.yul\":17148:17156   */\n      0x00\n        /* \"#utility.yul\":17195:17200   */\n      dup2\n        /* \"#utility.yul\":17192:17193   */\n      0x01\n        /* \"#utility.yul\":17188:17201   */\n      shr\n        /* \"#utility.yul\":17167:17201   */\n      swap1\n      pop\n        /* \"#utility.yul\":17106:17208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17214:18062   */\n    tag_391:\n        /* \"#utility.yul\":17275:17280   */\n      0x00\n        /* \"#utility.yul\":17282:17286   */\n      0x00\n        /* \"#utility.yul\":17306:17312   */\n      dup3\n        /* \"#utility.yul\":17297:17312   */\n      swap2\n      pop\n        /* \"#utility.yul\":17330:17335   */\n      dup4\n        /* \"#utility.yul\":17321:17335   */\n      swap1\n      pop\n        /* \"#utility.yul\":17344:18056   */\n    tag_573:\n        /* \"#utility.yul\":17365:17366   */\n      0x01\n        /* \"#utility.yul\":17355:17363   */\n      dup6\n        /* \"#utility.yul\":17352:17367   */\n      gt\n        /* \"#utility.yul\":17344:18056   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":17460:17464   */\n      dup1\n        /* \"#utility.yul\":17455:17458   */\n      dup7\n        /* \"#utility.yul\":17451:17465   */\n      div\n        /* \"#utility.yul\":17445:17449   */\n      dup2\n        /* \"#utility.yul\":17442:17466   */\n      gt\n        /* \"#utility.yul\":17439:17489   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":17469:17487   */\n      tag_577\n      tag_368\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17439:17489   */\n    tag_576:\n        /* \"#utility.yul\":17519:17520   */\n      0x01\n        /* \"#utility.yul\":17509:17517   */\n      dup6\n        /* \"#utility.yul\":17505:17521   */\n      and\n        /* \"#utility.yul\":17502:17953   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":17934:17938   */\n      dup1\n        /* \"#utility.yul\":17927:17932   */\n      dup3\n        /* \"#utility.yul\":17923:17939   */\n      mul\n        /* \"#utility.yul\":17914:17939   */\n      swap2\n      pop\n        /* \"#utility.yul\":17502:17953   */\n    tag_578:\n        /* \"#utility.yul\":17984:17988   */\n      dup1\n        /* \"#utility.yul\":17978:17982   */\n      dup2\n        /* \"#utility.yul\":17974:17989   */\n      mul\n        /* \"#utility.yul\":17966:17989   */\n      swap1\n      pop\n        /* \"#utility.yul\":18014:18046   */\n      tag_579\n        /* \"#utility.yul\":18037:18045   */\n      dup6\n        /* \"#utility.yul\":18014:18046   */\n      tag_390\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18002:18046   */\n      swap5\n      pop\n        /* \"#utility.yul\":17344:18056   */\n      jump(tag_573)\n    tag_575:\n        /* \"#utility.yul\":17214:18062   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18068:19141   */\n    tag_392:\n        /* \"#utility.yul\":18122:18127   */\n      0x00\n        /* \"#utility.yul\":18313:18321   */\n      dup3\n        /* \"#utility.yul\":18303:18343   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":18334:18335   */\n      0x01\n        /* \"#utility.yul\":18325:18335   */\n      swap1\n      pop\n        /* \"#utility.yul\":18336:18341   */\n      jump(tag_580)\n        /* \"#utility.yul\":18303:18343   */\n    tag_581:\n        /* \"#utility.yul\":18362:18366   */\n      dup2\n        /* \"#utility.yul\":18352:18388   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":18379:18380   */\n      0x00\n        /* \"#utility.yul\":18370:18380   */\n      swap1\n      pop\n        /* \"#utility.yul\":18381:18386   */\n      jump(tag_580)\n        /* \"#utility.yul\":18352:18388   */\n    tag_582:\n        /* \"#utility.yul\":18448:18452   */\n      dup2\n        /* \"#utility.yul\":18496:18497   */\n      0x01\n        /* \"#utility.yul\":18491:18518   */\n      dup2\n      eq\n      tag_584\n      jumpi\n        /* \"#utility.yul\":18532:18533   */\n      0x02\n        /* \"#utility.yul\":18527:18718   */\n      dup2\n      eq\n      tag_585\n      jumpi\n        /* \"#utility.yul\":18441:18718   */\n      jump(tag_583)\n        /* \"#utility.yul\":18491:18518   */\n    tag_584:\n        /* \"#utility.yul\":18509:18510   */\n      0x01\n        /* \"#utility.yul\":18500:18510   */\n      swap2\n      pop\n        /* \"#utility.yul\":18511:18516   */\n      pop\n      jump(tag_580)\n        /* \"#utility.yul\":18527:18718   */\n    tag_585:\n        /* \"#utility.yul\":18572:18575   */\n      0xff\n        /* \"#utility.yul\":18562:18570   */\n      dup5\n        /* \"#utility.yul\":18559:18576   */\n      gt\n        /* \"#utility.yul\":18556:18599   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":18579:18597   */\n      tag_587\n      tag_368\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18556:18599   */\n    tag_586:\n        /* \"#utility.yul\":18628:18636   */\n      dup4\n        /* \"#utility.yul\":18625:18626   */\n      0x02\n        /* \"#utility.yul\":18621:18637   */\n      exp\n        /* \"#utility.yul\":18612:18637   */\n      swap2\n      pop\n        /* \"#utility.yul\":18663:18666   */\n      dup5\n        /* \"#utility.yul\":18656:18661   */\n      dup3\n        /* \"#utility.yul\":18653:18667   */\n      gt\n        /* \"#utility.yul\":18650:18690   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":18670:18688   */\n      tag_589\n      tag_368\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18650:18690   */\n    tag_588:\n        /* \"#utility.yul\":18703:18708   */\n      pop\n      jump(tag_580)\n        /* \"#utility.yul\":18441:18718   */\n    tag_583:\n      pop\n        /* \"#utility.yul\":18827:18829   */\n      0x20\n        /* \"#utility.yul\":18817:18825   */\n      dup4\n        /* \"#utility.yul\":18814:18830   */\n      lt\n        /* \"#utility.yul\":18808:18811   */\n      0x0133\n        /* \"#utility.yul\":18802:18806   */\n      dup4\n        /* \"#utility.yul\":18799:18812   */\n      lt\n        /* \"#utility.yul\":18795:18831   */\n      and\n        /* \"#utility.yul\":18777:18779   */\n      0x4e\n        /* \"#utility.yul\":18767:18775   */\n      dup5\n        /* \"#utility.yul\":18764:18780   */\n      lt\n        /* \"#utility.yul\":18759:18761   */\n      0x0b\n        /* \"#utility.yul\":18753:18757   */\n      dup5\n        /* \"#utility.yul\":18750:18762   */\n      lt\n        /* \"#utility.yul\":18746:18781   */\n      and\n        /* \"#utility.yul\":18730:18841   */\n      or\n        /* \"#utility.yul\":18727:18973   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":18883:18891   */\n      dup3\n        /* \"#utility.yul\":18877:18881   */\n      dup3\n        /* \"#utility.yul\":18873:18892   */\n      exp\n        /* \"#utility.yul\":18864:18892   */\n      swap1\n      pop\n        /* \"#utility.yul\":18918:18921   */\n      dup4\n        /* \"#utility.yul\":18911:18916   */\n      dup2\n        /* \"#utility.yul\":18908:18922   */\n      gt\n        /* \"#utility.yul\":18905:18945   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":18925:18943   */\n      tag_592\n      tag_368\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18905:18945   */\n    tag_591:\n        /* \"#utility.yul\":18958:18963   */\n      jump(tag_580)\n        /* \"#utility.yul\":18727:18973   */\n    tag_590:\n        /* \"#utility.yul\":18998:19040   */\n      tag_593\n        /* \"#utility.yul\":19036:19039   */\n      dup5\n        /* \"#utility.yul\":19026:19034   */\n      dup5\n        /* \"#utility.yul\":19020:19024   */\n      dup5\n        /* \"#utility.yul\":19017:19018   */\n      0x01\n        /* \"#utility.yul\":18998:19040   */\n      tag_391\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18983:19040   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":19072:19076   */\n      dup2\n        /* \"#utility.yul\":19067:19070   */\n      dup5\n        /* \"#utility.yul\":19063:19077   */\n      div\n        /* \"#utility.yul\":19056:19061   */\n      dup2\n        /* \"#utility.yul\":19053:19078   */\n      gt\n        /* \"#utility.yul\":19050:19101   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":19081:19099   */\n      tag_595\n      tag_368\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":19050:19101   */\n    tag_594:\n        /* \"#utility.yul\":19130:19134   */\n      dup2\n        /* \"#utility.yul\":19123:19128   */\n      dup2\n        /* \"#utility.yul\":19119:19135   */\n      mul\n        /* \"#utility.yul\":19110:19135   */\n      swap1\n      pop\n        /* \"#utility.yul\":18068:19141   */\n    tag_580:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19147:19428   */\n    tag_281:\n        /* \"#utility.yul\":19205:19210   */\n      0x00\n        /* \"#utility.yul\":19229:19252   */\n      tag_597\n        /* \"#utility.yul\":19247:19251   */\n      dup3\n        /* \"#utility.yul\":19229:19252   */\n      tag_356\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":19221:19252   */\n      swap2\n      pop\n        /* \"#utility.yul\":19273:19298   */\n      tag_598\n        /* \"#utility.yul\":19289:19297   */\n      dup4\n        /* \"#utility.yul\":19273:19298   */\n      tag_363\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19261:19298   */\n      swap3\n      pop\n        /* \"#utility.yul\":19317:19421   */\n      tag_599\n        /* \"#utility.yul\":19354:19420   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19344:19352   */\n      dup5\n        /* \"#utility.yul\":19338:19342   */\n      dup5\n        /* \"#utility.yul\":19317:19421   */\n      tag_392\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":19308:19421   */\n      swap1\n      pop\n        /* \"#utility.yul\":19147:19428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19434:19614   */\n    tag_393:\n        /* \"#utility.yul\":19482:19559   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19479:19480   */\n      0x00\n        /* \"#utility.yul\":19472:19560   */\n      mstore\n        /* \"#utility.yul\":19579:19583   */\n      0x12\n        /* \"#utility.yul\":19576:19577   */\n      0x04\n        /* \"#utility.yul\":19569:19584   */\n      mstore\n        /* \"#utility.yul\":19603:19607   */\n      0x24\n        /* \"#utility.yul\":19600:19601   */\n      0x00\n        /* \"#utility.yul\":19593:19608   */\n      revert\n        /* \"#utility.yul\":19620:19805   */\n    tag_283:\n        /* \"#utility.yul\":19660:19661   */\n      0x00\n        /* \"#utility.yul\":19677:19697   */\n      tag_602\n        /* \"#utility.yul\":19695:19696   */\n      dup3\n        /* \"#utility.yul\":19677:19697   */\n      tag_356\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19672:19697   */\n      swap2\n      pop\n        /* \"#utility.yul\":19711:19731   */\n      tag_603\n        /* \"#utility.yul\":19729:19730   */\n      dup4\n        /* \"#utility.yul\":19711:19731   */\n      tag_356\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19706:19731   */\n      swap3\n      pop\n        /* \"#utility.yul\":19750:19751   */\n      dup3\n        /* \"#utility.yul\":19740:19775   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":19755:19773   */\n      tag_605\n      tag_393\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":19740:19775   */\n    tag_604:\n        /* \"#utility.yul\":19797:19798   */\n      dup3\n        /* \"#utility.yul\":19794:19795   */\n      dup3\n        /* \"#utility.yul\":19790:19799   */\n      div\n        /* \"#utility.yul\":19785:19799   */\n      swap1\n      pop\n        /* \"#utility.yul\":19620:19805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19811:20253   */\n    tag_327:\n        /* \"#utility.yul\":19960:19964   */\n      0x00\n        /* \"#utility.yul\":19998:20000   */\n      0x60\n        /* \"#utility.yul\":19987:19996   */\n      dup3\n        /* \"#utility.yul\":19983:20001   */\n      add\n        /* \"#utility.yul\":19975:20001   */\n      swap1\n      pop\n        /* \"#utility.yul\":20011:20082   */\n      tag_607\n        /* \"#utility.yul\":20079:20080   */\n      0x00\n        /* \"#utility.yul\":20068:20077   */\n      dup4\n        /* \"#utility.yul\":20064:20081   */\n      add\n        /* \"#utility.yul\":20055:20061   */\n      dup7\n        /* \"#utility.yul\":20011:20082   */\n      tag_362\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":20092:20164   */\n      tag_608\n        /* \"#utility.yul\":20160:20162   */\n      0x20\n        /* \"#utility.yul\":20149:20158   */\n      dup4\n        /* \"#utility.yul\":20145:20163   */\n      add\n        /* \"#utility.yul\":20136:20142   */\n      dup6\n        /* \"#utility.yul\":20092:20164   */\n      tag_361\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20174:20246   */\n      tag_609\n        /* \"#utility.yul\":20242:20244   */\n      0x40\n        /* \"#utility.yul\":20231:20240   */\n      dup4\n        /* \"#utility.yul\":20227:20245   */\n      add\n        /* \"#utility.yul\":20218:20224   */\n      dup5\n        /* \"#utility.yul\":20174:20246   */\n      tag_361\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19811:20253   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b4c4abeed4a24a7f7be7d8d6f37e07b98b30a82fc06e80f791e8e821aec808f064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1486": {
									"entryPoint": null,
									"id": 1486,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 858,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12892:15",
										"nodeType": "YulBlock",
										"src": "0:12892:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "423:28:15",
													"nodeType": "YulBlock",
													"src": "423:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "443:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:12:15",
																"nodeType": "YulFunctionCall",
																"src": "433:12:15"
															},
															"nativeSrc": "433:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:15"
											},
											{
												"body": {
													"nativeSrc": "505:54:15",
													"nodeType": "YulBlock",
													"src": "505:54:15",
													"statements": [
														{
															"nativeSrc": "515:38:15",
															"nodeType": "YulAssignment",
															"src": "515:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:15",
																				"nodeType": "YulLiteral",
																				"src": "540:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:15"
																		},
																		"nativeSrc": "529:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:15",
																				"nodeType": "YulLiteral",
																				"src": "549:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:15"
																		},
																		"nativeSrc": "545:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:15"
																},
																"nativeSrc": "525:28:15",
																"nodeType": "YulFunctionCall",
																"src": "525:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:15",
														"nodeType": "YulTypedName",
														"src": "488:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:15",
														"nodeType": "YulTypedName",
														"src": "498:6:15",
														"type": ""
													}
												],
												"src": "457:102:15"
											},
											{
												"body": {
													"nativeSrc": "593:152:15",
													"nodeType": "YulBlock",
													"src": "593:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:15",
																		"nodeType": "YulLiteral",
																		"src": "610:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:15",
																		"nodeType": "YulLiteral",
																		"src": "613:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:15"
																},
																"nativeSrc": "603:88:15",
																"nodeType": "YulFunctionCall",
																"src": "603:88:15"
															},
															"nativeSrc": "603:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:15",
																		"nodeType": "YulLiteral",
																		"src": "707:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:15",
																		"nodeType": "YulLiteral",
																		"src": "710:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:15"
																},
																"nativeSrc": "700:15:15",
																"nodeType": "YulFunctionCall",
																"src": "700:15:15"
															},
															"nativeSrc": "700:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:15",
																		"nodeType": "YulLiteral",
																		"src": "731:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:15",
																		"nodeType": "YulLiteral",
																		"src": "734:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:15"
																},
																"nativeSrc": "724:15:15",
																"nodeType": "YulFunctionCall",
																"src": "724:15:15"
															},
															"nativeSrc": "724:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:15"
											},
											{
												"body": {
													"nativeSrc": "794:238:15",
													"nodeType": "YulBlock",
													"src": "794:238:15",
													"statements": [
														{
															"nativeSrc": "804:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:15"
																		},
																		"nativeSrc": "834:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:15"
																},
																"nativeSrc": "822:40:15",
																"nodeType": "YulFunctionCall",
																"src": "822:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:15",
																	"nodeType": "YulTypedName",
																	"src": "808:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:15",
																"nodeType": "YulBlock",
																"src": "973:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:15"
																			},
																			"nativeSrc": "975:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:15"
																		},
																		"nativeSrc": "975:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:15",
																				"nodeType": "YulLiteral",
																				"src": "928:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:15"
																		},
																		"nativeSrc": "913:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:15"
																		},
																		"nativeSrc": "949:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:15"
																},
																"nativeSrc": "910:62:15",
																"nodeType": "YulFunctionCall",
																"src": "910:62:15"
															},
															"nativeSrc": "907:88:15",
															"nodeType": "YulIf",
															"src": "907:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:15"
																},
																"nativeSrc": "1004:22:15",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:15"
															},
															"nativeSrc": "1004:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:15",
														"nodeType": "YulTypedName",
														"src": "780:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:15",
														"nodeType": "YulTypedName",
														"src": "788:4:15",
														"type": ""
													}
												],
												"src": "751:281:15"
											},
											{
												"body": {
													"nativeSrc": "1079:88:15",
													"nodeType": "YulBlock",
													"src": "1079:88:15",
													"statements": [
														{
															"nativeSrc": "1089:30:15",
															"nodeType": "YulAssignment",
															"src": "1089:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:15"
																},
																"nativeSrc": "1099:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:15"
																},
																"nativeSrc": "1128:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:15"
															},
															"nativeSrc": "1128:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:15",
														"nodeType": "YulTypedName",
														"src": "1063:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:15",
														"nodeType": "YulTypedName",
														"src": "1072:6:15",
														"type": ""
													}
												],
												"src": "1038:129:15"
											},
											{
												"body": {
													"nativeSrc": "1255:229:15",
													"nodeType": "YulBlock",
													"src": "1255:229:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:15",
																"nodeType": "YulBlock",
																"src": "1360:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:15"
																			},
																			"nativeSrc": "1362:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:15"
																		},
																		"nativeSrc": "1362:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:15",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:15"
																},
																"nativeSrc": "1329:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:15"
															},
															"nativeSrc": "1326:56:15",
															"nodeType": "YulIf",
															"src": "1326:56:15"
														},
														{
															"nativeSrc": "1392:25:15",
															"nodeType": "YulAssignment",
															"src": "1392:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:15"
																},
																"nativeSrc": "1400:17:15",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:15"
																}
															]
														},
														{
															"nativeSrc": "1454:23:15",
															"nodeType": "YulAssignment",
															"src": "1454:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:15"
																},
																"nativeSrc": "1462:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:15",
														"nodeType": "YulTypedName",
														"src": "1239:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:15",
														"nodeType": "YulTypedName",
														"src": "1250:4:15",
														"type": ""
													}
												],
												"src": "1173:311:15"
											},
											{
												"body": {
													"nativeSrc": "1579:28:15",
													"nodeType": "YulBlock",
													"src": "1579:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:15"
																},
																"nativeSrc": "1589:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:15"
															},
															"nativeSrc": "1589:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:15"
											},
											{
												"body": {
													"nativeSrc": "1658:81:15",
													"nodeType": "YulBlock",
													"src": "1658:81:15",
													"statements": [
														{
															"nativeSrc": "1668:65:15",
															"nodeType": "YulAssignment",
															"src": "1668:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:15"
																},
																"nativeSrc": "1679:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:15",
														"nodeType": "YulTypedName",
														"src": "1640:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:15",
														"nodeType": "YulTypedName",
														"src": "1650:7:15",
														"type": ""
													}
												],
												"src": "1613:126:15"
											},
											{
												"body": {
													"nativeSrc": "1790:51:15",
													"nodeType": "YulBlock",
													"src": "1790:51:15",
													"statements": [
														{
															"nativeSrc": "1800:35:15",
															"nodeType": "YulAssignment",
															"src": "1800:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:15"
																},
																"nativeSrc": "1811:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:15",
														"nodeType": "YulTypedName",
														"src": "1772:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:15",
														"nodeType": "YulTypedName",
														"src": "1782:7:15",
														"type": ""
													}
												],
												"src": "1745:96:15"
											},
											{
												"body": {
													"nativeSrc": "1890:79:15",
													"nodeType": "YulBlock",
													"src": "1890:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:15",
																"nodeType": "YulBlock",
																"src": "1947:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:15"
																			},
																			"nativeSrc": "1949:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:15"
																		},
																		"nativeSrc": "1949:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:15"
																				},
																				"nativeSrc": "1920:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:15"
																		},
																		"nativeSrc": "1910:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:15"
																},
																"nativeSrc": "1903:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:15"
															},
															"nativeSrc": "1900:63:15",
															"nodeType": "YulIf",
															"src": "1900:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:15",
														"nodeType": "YulTypedName",
														"src": "1883:5:15",
														"type": ""
													}
												],
												"src": "1847:122:15"
											},
											{
												"body": {
													"nativeSrc": "2038:80:15",
													"nodeType": "YulBlock",
													"src": "2038:80:15",
													"statements": [
														{
															"nativeSrc": "2048:22:15",
															"nodeType": "YulAssignment",
															"src": "2048:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:15"
																},
																"nativeSrc": "2057:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:15"
																},
																"nativeSrc": "2079:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:15"
															},
															"nativeSrc": "2079:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:15",
														"nodeType": "YulTypedName",
														"src": "2016:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:15",
														"nodeType": "YulTypedName",
														"src": "2024:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:15",
														"nodeType": "YulTypedName",
														"src": "2032:5:15",
														"type": ""
													}
												],
												"src": "1975:143:15"
											},
											{
												"body": {
													"nativeSrc": "2254:619:15",
													"nodeType": "YulBlock",
													"src": "2254:619:15",
													"statements": [
														{
															"nativeSrc": "2264:90:15",
															"nodeType": "YulAssignment",
															"src": "2264:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:15"
																		},
																		"nativeSrc": "2289:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:15"
																},
																"nativeSrc": "2273:81:15",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:15"
																}
															]
														},
														{
															"nativeSrc": "2363:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:15",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:15",
																"nodeType": "YulIdentifier",
																"src": "2374:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:15",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:15"
																},
																"nativeSrc": "2389:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:15"
															},
															"nativeSrc": "2389:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:15"
														},
														{
															"nativeSrc": "2419:23:15",
															"nodeType": "YulAssignment",
															"src": "2419:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:15"
																},
																"nativeSrc": "2426:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:15"
																}
															]
														},
														{
															"nativeSrc": "2452:44:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:15"
																		},
																		"nativeSrc": "2478:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:15"
																},
																"nativeSrc": "2466:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:15",
																"nodeType": "YulBlock",
																"src": "2524:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:15"
																			},
																			"nativeSrc": "2538:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:15"
																		},
																		"nativeSrc": "2538:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:15"
																},
																"nativeSrc": "2508:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:15"
															},
															"nativeSrc": "2505:122:15",
															"nodeType": "YulIf",
															"src": "2505:122:15"
														},
														{
															"body": {
																"nativeSrc": "2712:155:15",
																"nodeType": "YulBlock",
																"src": "2712:155:15",
																"statements": [
																	{
																		"nativeSrc": "2727:21:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:15",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:15",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:15"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:15"
																					},
																					"nativeSrc": "2774:48:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:15"
																			},
																			"nativeSrc": "2762:61:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:15"
																		},
																		"nativeSrc": "2762:61:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:15"
																	},
																	{
																		"nativeSrc": "2836:21:15",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:15"
																			},
																			"nativeSrc": "2843:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:15"
																},
																"nativeSrc": "2662:15:15",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:15"
															},
															"nativeSrc": "2636:231:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:15",
																"nodeType": "YulBlock",
																"src": "2678:25:15",
																"statements": [
																	{
																		"nativeSrc": "2680:21:15",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:15",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:15"
																			},
																			"nativeSrc": "2687:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:15",
																"nodeType": "YulBlock",
																"src": "2640:21:15",
																"statements": [
																	{
																		"nativeSrc": "2642:17:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:15",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:15",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:15",
														"nodeType": "YulTypedName",
														"src": "2224:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:15",
														"nodeType": "YulTypedName",
														"src": "2232:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:15",
														"nodeType": "YulTypedName",
														"src": "2240:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:15",
														"nodeType": "YulTypedName",
														"src": "2248:5:15",
														"type": ""
													}
												],
												"src": "2141:732:15"
											},
											{
												"body": {
													"nativeSrc": "2984:297:15",
													"nodeType": "YulBlock",
													"src": "2984:297:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:15",
																"nodeType": "YulBlock",
																"src": "3033:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:15"
																			},
																			"nativeSrc": "3035:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:15"
																		},
																		"nativeSrc": "3035:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:15"
																				},
																				"nativeSrc": "3008:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:15"
																		},
																		"nativeSrc": "3004:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:15"
																},
																"nativeSrc": "2997:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:15"
															},
															"nativeSrc": "2994:122:15",
															"nodeType": "YulIf",
															"src": "2994:122:15"
														},
														{
															"nativeSrc": "3125:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:15"
																},
																"nativeSrc": "3139:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:15",
															"nodeType": "YulAssignment",
															"src": "3161:114:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:15",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:15"
																		},
																		"nativeSrc": "3244:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:15",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:15"
																},
																"nativeSrc": "3170:105:15",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:15",
														"nodeType": "YulTypedName",
														"src": "2962:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:15",
														"nodeType": "YulTypedName",
														"src": "2970:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:15",
														"nodeType": "YulTypedName",
														"src": "2978:5:15",
														"type": ""
													}
												],
												"src": "2896:385:15"
											},
											{
												"body": {
													"nativeSrc": "3423:730:15",
													"nodeType": "YulBlock",
													"src": "3423:730:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3469:83:15",
																"nodeType": "YulBlock",
																"src": "3469:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3471:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3471:77:15"
																			},
																			"nativeSrc": "3471:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3471:79:15"
																		},
																		"nativeSrc": "3471:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3471:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3444:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3444:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3453:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3453:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3440:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:15"
																		},
																		"nativeSrc": "3440:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3465:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3465:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3436:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3436:3:15"
																},
																"nativeSrc": "3436:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3436:32:15"
															},
															"nativeSrc": "3433:119:15",
															"nodeType": "YulIf",
															"src": "3433:119:15"
														},
														{
															"nativeSrc": "3562:306:15",
															"nodeType": "YulBlock",
															"src": "3562:306:15",
															"statements": [
																{
																	"nativeSrc": "3577:38:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3577:38:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3601:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3601:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3612:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3612:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3597:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3597:3:15"
																				},
																				"nativeSrc": "3597:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3597:17:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3591:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3591:5:15"
																		},
																		"nativeSrc": "3591:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3591:24:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3581:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3581:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3662:83:15",
																		"nodeType": "YulBlock",
																		"src": "3662:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3664:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "3664:77:15"
																					},
																					"nativeSrc": "3664:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3664:79:15"
																				},
																				"nativeSrc": "3664:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3664:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3634:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3634:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3642:18:15",
																				"nodeType": "YulLiteral",
																				"src": "3642:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3631:2:15"
																		},
																		"nativeSrc": "3631:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:30:15"
																	},
																	"nativeSrc": "3628:117:15",
																	"nodeType": "YulIf",
																	"src": "3628:117:15"
																},
																{
																	"nativeSrc": "3759:99:15",
																	"nodeType": "YulAssignment",
																	"src": "3759:99:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3830:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3830:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3841:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3841:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3826:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3826:3:15"
																				},
																				"nativeSrc": "3826:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3826:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3850:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3850:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3769:56:15",
																			"nodeType": "YulIdentifier",
																			"src": "3769:56:15"
																		},
																		"nativeSrc": "3769:89:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:89:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3759:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3759:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3878:129:15",
															"nodeType": "YulBlock",
															"src": "3878:129:15",
															"statements": [
																{
																	"nativeSrc": "3893:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3893:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3907:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3897:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3897:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3923:74:15",
																	"nodeType": "YulAssignment",
																	"src": "3923:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3969:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3969:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3980:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3980:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3965:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:15"
																				},
																				"nativeSrc": "3965:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3965:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3989:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3933:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "3933:31:15"
																		},
																		"nativeSrc": "3933:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3923:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3923:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4017:129:15",
															"nodeType": "YulBlock",
															"src": "4017:129:15",
															"statements": [
																{
																	"nativeSrc": "4032:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4032:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4046:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4046:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4036:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4036:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4062:74:15",
																	"nodeType": "YulAssignment",
																	"src": "4062:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4108:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4108:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4119:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4119:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4104:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4104:3:15"
																				},
																				"nativeSrc": "4104:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4104:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4128:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4128:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4072:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "4072:31:15"
																		},
																		"nativeSrc": "4072:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4062:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4062:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address_fromMemory",
												"nativeSrc": "3287:866:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3377:9:15",
														"nodeType": "YulTypedName",
														"src": "3377:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3388:7:15",
														"nodeType": "YulTypedName",
														"src": "3388:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3400:6:15",
														"nodeType": "YulTypedName",
														"src": "3400:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3408:6:15",
														"nodeType": "YulTypedName",
														"src": "3408:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3416:6:15",
														"nodeType": "YulTypedName",
														"src": "3416:6:15",
														"type": ""
													}
												],
												"src": "3287:866:15"
											},
											{
												"body": {
													"nativeSrc": "4218:40:15",
													"nodeType": "YulBlock",
													"src": "4218:40:15",
													"statements": [
														{
															"nativeSrc": "4229:22:15",
															"nodeType": "YulAssignment",
															"src": "4229:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4245:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4245:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4239:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4239:5:15"
																},
																"nativeSrc": "4239:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4239:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4229:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4159:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4201:5:15",
														"nodeType": "YulTypedName",
														"src": "4201:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4211:6:15",
														"nodeType": "YulTypedName",
														"src": "4211:6:15",
														"type": ""
													}
												],
												"src": "4159:99:15"
											},
											{
												"body": {
													"nativeSrc": "4292:152:15",
													"nodeType": "YulBlock",
													"src": "4292:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4309:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4309:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:77:15",
																		"nodeType": "YulLiteral",
																		"src": "4312:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4302:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4302:6:15"
																},
																"nativeSrc": "4302:88:15",
																"nodeType": "YulFunctionCall",
																"src": "4302:88:15"
															},
															"nativeSrc": "4302:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "4302:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4406:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4406:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4409:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4409:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4399:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:15"
																},
																"nativeSrc": "4399:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4399:15:15"
															},
															"nativeSrc": "4399:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4399:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4430:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4430:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4433:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4433:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4423:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4423:6:15"
																},
																"nativeSrc": "4423:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4423:15:15"
															},
															"nativeSrc": "4423:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4423:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4264:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4264:180:15"
											},
											{
												"body": {
													"nativeSrc": "4501:269:15",
													"nodeType": "YulBlock",
													"src": "4501:269:15",
													"statements": [
														{
															"nativeSrc": "4511:22:15",
															"nodeType": "YulAssignment",
															"src": "4511:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4525:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4525:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4531:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4521:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4521:3:15"
																},
																"nativeSrc": "4521:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4521:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4511:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4511:6:15"
																}
															]
														},
														{
															"nativeSrc": "4542:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4542:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4572:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4572:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4578:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4578:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:15"
																},
																"nativeSrc": "4568:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4568:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4546:18:15",
																	"nodeType": "YulTypedName",
																	"src": "4546:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4619:51:15",
																"nodeType": "YulBlock",
																"src": "4619:51:15",
																"statements": [
																	{
																		"nativeSrc": "4633:27:15",
																		"nodeType": "YulAssignment",
																		"src": "4633:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4647:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4647:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4655:4:15",
																					"nodeType": "YulLiteral",
																					"src": "4655:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4643:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4643:3:15"
																			},
																			"nativeSrc": "4643:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4643:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4633:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4599:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4599:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4592:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4592:6:15"
																},
																"nativeSrc": "4592:26:15",
																"nodeType": "YulFunctionCall",
																"src": "4592:26:15"
															},
															"nativeSrc": "4589:81:15",
															"nodeType": "YulIf",
															"src": "4589:81:15"
														},
														{
															"body": {
																"nativeSrc": "4722:42:15",
																"nodeType": "YulBlock",
																"src": "4722:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4736:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4736:16:15"
																			},
																			"nativeSrc": "4736:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4736:18:15"
																		},
																		"nativeSrc": "4736:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4736:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4686:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "4686:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4709:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4709:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4717:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4706:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4706:2:15"
																		},
																		"nativeSrc": "4706:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4706:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4683:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4683:2:15"
																},
																"nativeSrc": "4683:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4683:38:15"
															},
															"nativeSrc": "4680:84:15",
															"nodeType": "YulIf",
															"src": "4680:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4450:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4485:4:15",
														"nodeType": "YulTypedName",
														"src": "4485:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4494:6:15",
														"nodeType": "YulTypedName",
														"src": "4494:6:15",
														"type": ""
													}
												],
												"src": "4450:320:15"
											},
											{
												"body": {
													"nativeSrc": "4830:87:15",
													"nodeType": "YulBlock",
													"src": "4830:87:15",
													"statements": [
														{
															"nativeSrc": "4840:11:15",
															"nodeType": "YulAssignment",
															"src": "4840:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "4848:3:15",
																"nodeType": "YulIdentifier",
																"src": "4848:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4840:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4840:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4868:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4868:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4871:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4871:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4861:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:15"
																},
																"nativeSrc": "4861:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4861:14:15"
															},
															"nativeSrc": "4861:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "4861:14:15"
														},
														{
															"nativeSrc": "4884:26:15",
															"nodeType": "YulAssignment",
															"src": "4884:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4902:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4905:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4905:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4892:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4892:9:15"
																},
																"nativeSrc": "4892:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4892:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4884:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4884:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4776:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4817:3:15",
														"nodeType": "YulTypedName",
														"src": "4817:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4825:4:15",
														"nodeType": "YulTypedName",
														"src": "4825:4:15",
														"type": ""
													}
												],
												"src": "4776:141:15"
											},
											{
												"body": {
													"nativeSrc": "4967:49:15",
													"nodeType": "YulBlock",
													"src": "4967:49:15",
													"statements": [
														{
															"nativeSrc": "4977:33:15",
															"nodeType": "YulAssignment",
															"src": "4977:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4995:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5002:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5002:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4991:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:15"
																		},
																		"nativeSrc": "4991:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4991:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5007:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5007:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4987:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4987:3:15"
																},
																"nativeSrc": "4987:23:15",
																"nodeType": "YulFunctionCall",
																"src": "4987:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4977:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4923:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4950:5:15",
														"nodeType": "YulTypedName",
														"src": "4950:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4960:6:15",
														"nodeType": "YulTypedName",
														"src": "4960:6:15",
														"type": ""
													}
												],
												"src": "4923:93:15"
											},
											{
												"body": {
													"nativeSrc": "5075:54:15",
													"nodeType": "YulBlock",
													"src": "5075:54:15",
													"statements": [
														{
															"nativeSrc": "5085:37:15",
															"nodeType": "YulAssignment",
															"src": "5085:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5110:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5110:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5116:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5116:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5106:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5106:3:15"
																},
																"nativeSrc": "5106:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5106:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5085:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "5085:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5022:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5050:4:15",
														"nodeType": "YulTypedName",
														"src": "5050:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5056:5:15",
														"nodeType": "YulTypedName",
														"src": "5056:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5066:8:15",
														"nodeType": "YulTypedName",
														"src": "5066:8:15",
														"type": ""
													}
												],
												"src": "5022:107:15"
											},
											{
												"body": {
													"nativeSrc": "5211:317:15",
													"nodeType": "YulBlock",
													"src": "5211:317:15",
													"statements": [
														{
															"nativeSrc": "5221:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5242:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "5242:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5254:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5254:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5238:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:15"
																},
																"nativeSrc": "5238:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5238:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5225:9:15",
																	"nodeType": "YulTypedName",
																	"src": "5225:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5265:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5265:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5296:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5296:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:66:15",
																		"nodeType": "YulLiteral",
																		"src": "5307:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5277:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5277:18:15"
																},
																"nativeSrc": "5277:97:15",
																"nodeType": "YulFunctionCall",
																"src": "5277:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5269:4:15",
																	"nodeType": "YulTypedName",
																	"src": "5269:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5383:51:15",
															"nodeType": "YulAssignment",
															"src": "5383:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5414:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5414:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5425:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "5425:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5395:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5395:18:15"
																},
																"nativeSrc": "5395:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5395:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5383:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "5383:8:15"
																}
															]
														},
														{
															"nativeSrc": "5443:30:15",
															"nodeType": "YulAssignment",
															"src": "5443:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5456:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5456:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5467:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5467:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5463:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:15"
																		},
																		"nativeSrc": "5463:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5452:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5452:3:15"
																},
																"nativeSrc": "5452:21:15",
																"nodeType": "YulFunctionCall",
																"src": "5452:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5443:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5443:5:15"
																}
															]
														},
														{
															"nativeSrc": "5482:40:15",
															"nodeType": "YulAssignment",
															"src": "5482:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5495:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5495:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5506:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "5506:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5516:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5516:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5502:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5502:3:15"
																		},
																		"nativeSrc": "5502:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5502:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5492:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5492:2:15"
																},
																"nativeSrc": "5492:30:15",
																"nodeType": "YulFunctionCall",
																"src": "5492:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5482:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5135:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5172:5:15",
														"nodeType": "YulTypedName",
														"src": "5172:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5179:10:15",
														"nodeType": "YulTypedName",
														"src": "5179:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5191:8:15",
														"nodeType": "YulTypedName",
														"src": "5191:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5204:6:15",
														"nodeType": "YulTypedName",
														"src": "5204:6:15",
														"type": ""
													}
												],
												"src": "5135:393:15"
											},
											{
												"body": {
													"nativeSrc": "5579:32:15",
													"nodeType": "YulBlock",
													"src": "5579:32:15",
													"statements": [
														{
															"nativeSrc": "5589:16:15",
															"nodeType": "YulAssignment",
															"src": "5589:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "5600:5:15",
																"nodeType": "YulIdentifier",
																"src": "5600:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5589:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5589:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5534:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5561:5:15",
														"nodeType": "YulTypedName",
														"src": "5561:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5571:7:15",
														"nodeType": "YulTypedName",
														"src": "5571:7:15",
														"type": ""
													}
												],
												"src": "5534:77:15"
											},
											{
												"body": {
													"nativeSrc": "5649:28:15",
													"nodeType": "YulBlock",
													"src": "5649:28:15",
													"statements": [
														{
															"nativeSrc": "5659:12:15",
															"nodeType": "YulAssignment",
															"src": "5659:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5666:5:15",
																"nodeType": "YulIdentifier",
																"src": "5666:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5659:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5659:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5617:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5635:5:15",
														"nodeType": "YulTypedName",
														"src": "5635:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5645:3:15",
														"nodeType": "YulTypedName",
														"src": "5645:3:15",
														"type": ""
													}
												],
												"src": "5617:60:15"
											},
											{
												"body": {
													"nativeSrc": "5743:82:15",
													"nodeType": "YulBlock",
													"src": "5743:82:15",
													"statements": [
														{
															"nativeSrc": "5753:66:15",
															"nodeType": "YulAssignment",
															"src": "5753:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5811:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5811:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5793:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5793:17:15"
																				},
																				"nativeSrc": "5793:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5793:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5784:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "5784:8:15"
																		},
																		"nativeSrc": "5784:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5766:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "5766:17:15"
																},
																"nativeSrc": "5766:53:15",
																"nodeType": "YulFunctionCall",
																"src": "5766:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5753:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "5753:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5683:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5723:5:15",
														"nodeType": "YulTypedName",
														"src": "5723:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5733:9:15",
														"nodeType": "YulTypedName",
														"src": "5733:9:15",
														"type": ""
													}
												],
												"src": "5683:142:15"
											},
											{
												"body": {
													"nativeSrc": "5878:28:15",
													"nodeType": "YulBlock",
													"src": "5878:28:15",
													"statements": [
														{
															"nativeSrc": "5888:12:15",
															"nodeType": "YulAssignment",
															"src": "5888:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "5895:5:15",
																"nodeType": "YulIdentifier",
																"src": "5895:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5888:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5888:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5831:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5864:5:15",
														"nodeType": "YulTypedName",
														"src": "5864:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5874:3:15",
														"nodeType": "YulTypedName",
														"src": "5874:3:15",
														"type": ""
													}
												],
												"src": "5831:75:15"
											},
											{
												"body": {
													"nativeSrc": "5988:193:15",
													"nodeType": "YulBlock",
													"src": "5988:193:15",
													"statements": [
														{
															"nativeSrc": "5998:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5998:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6053:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "6053:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6022:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "6022:30:15"
																},
																"nativeSrc": "6022:39:15",
																"nodeType": "YulFunctionCall",
																"src": "6022:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6002:16:15",
																	"nodeType": "YulTypedName",
																	"src": "6002:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6077:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6077:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6117:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6117:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6111:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6111:5:15"
																				},
																				"nativeSrc": "6111:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6111:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6124:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6124:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6156:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "6156:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6132:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "6132:23:15"
																				},
																				"nativeSrc": "6132:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6132:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6083:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "6083:27:15"
																		},
																		"nativeSrc": "6083:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6083:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6070:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:15"
																},
																"nativeSrc": "6070:105:15",
																"nodeType": "YulFunctionCall",
																"src": "6070:105:15"
															},
															"nativeSrc": "6070:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "6070:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5912:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5965:4:15",
														"nodeType": "YulTypedName",
														"src": "5965:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5971:6:15",
														"nodeType": "YulTypedName",
														"src": "5971:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5979:7:15",
														"nodeType": "YulTypedName",
														"src": "5979:7:15",
														"type": ""
													}
												],
												"src": "5912:269:15"
											},
											{
												"body": {
													"nativeSrc": "6236:24:15",
													"nodeType": "YulBlock",
													"src": "6236:24:15",
													"statements": [
														{
															"nativeSrc": "6246:8:15",
															"nodeType": "YulAssignment",
															"src": "6246:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "6253:1:15",
																"nodeType": "YulLiteral",
																"src": "6253:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6246:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6246:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6187:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6232:3:15",
														"nodeType": "YulTypedName",
														"src": "6232:3:15",
														"type": ""
													}
												],
												"src": "6187:73:15"
											},
											{
												"body": {
													"nativeSrc": "6319:136:15",
													"nodeType": "YulBlock",
													"src": "6319:136:15",
													"statements": [
														{
															"nativeSrc": "6329:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6329:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6343:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "6343:30:15"
																},
																"nativeSrc": "6343:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6343:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6333:6:15",
																	"nodeType": "YulTypedName",
																	"src": "6333:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6428:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6428:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6434:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6434:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6442:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6442:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6384:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6384:43:15"
																},
																"nativeSrc": "6384:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6384:65:15"
															},
															"nativeSrc": "6384:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "6384:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6266:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6305:4:15",
														"nodeType": "YulTypedName",
														"src": "6305:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6311:6:15",
														"nodeType": "YulTypedName",
														"src": "6311:6:15",
														"type": ""
													}
												],
												"src": "6266:189:15"
											},
											{
												"body": {
													"nativeSrc": "6511:136:15",
													"nodeType": "YulBlock",
													"src": "6511:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6578:63:15",
																"nodeType": "YulBlock",
																"src": "6578:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6622:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6622:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6629:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6629:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6592:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "6592:29:15"
																			},
																			"nativeSrc": "6592:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6592:39:15"
																		},
																		"nativeSrc": "6592:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6592:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6531:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6531:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6538:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6528:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6528:2:15"
																},
																"nativeSrc": "6528:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6528:14:15"
															},
															"nativeSrc": "6521:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6543:26:15",
																"nodeType": "YulBlock",
																"src": "6543:26:15",
																"statements": [
																	{
																		"nativeSrc": "6545:22:15",
																		"nodeType": "YulAssignment",
																		"src": "6545:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6558:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6558:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6565:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6565:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6554:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6554:3:15"
																			},
																			"nativeSrc": "6554:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6554:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6545:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6545:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6525:2:15",
																"nodeType": "YulBlock",
																"src": "6525:2:15",
																"statements": []
															},
															"src": "6521:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6461:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6499:5:15",
														"nodeType": "YulTypedName",
														"src": "6499:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6506:3:15",
														"nodeType": "YulTypedName",
														"src": "6506:3:15",
														"type": ""
													}
												],
												"src": "6461:186:15"
											},
											{
												"body": {
													"nativeSrc": "6732:464:15",
													"nodeType": "YulBlock",
													"src": "6732:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6758:431:15",
																"nodeType": "YulBlock",
																"src": "6758:431:15",
																"statements": [
																	{
																		"nativeSrc": "6772:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6772:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6820:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "6820:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6788:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "6788:31:15"
																			},
																			"nativeSrc": "6788:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6788:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6776:8:15",
																				"nodeType": "YulTypedName",
																				"src": "6776:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6839:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6839:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6862:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "6862:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6890:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "6890:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6872:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "6872:17:15"
																					},
																					"nativeSrc": "6872:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6872:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6858:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6858:3:15"
																			},
																			"nativeSrc": "6858:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6858:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6843:11:15",
																				"nodeType": "YulTypedName",
																				"src": "6843:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7059:27:15",
																			"nodeType": "YulBlock",
																			"src": "7059:27:15",
																			"statements": [
																				{
																					"nativeSrc": "7061:23:15",
																					"nodeType": "YulAssignment",
																					"src": "7061:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7076:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "7076:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7061:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "7061:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7043:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "7043:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7055:2:15",
																					"nodeType": "YulLiteral",
																					"src": "7055:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7040:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "7040:2:15"
																			},
																			"nativeSrc": "7040:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7040:18:15"
																		},
																		"nativeSrc": "7037:49:15",
																		"nodeType": "YulIf",
																		"src": "7037:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7128:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "7128:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7145:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "7145:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7173:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "7173:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7155:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "7155:17:15"
																							},
																							"nativeSrc": "7155:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "7155:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7141:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7141:3:15"
																					},
																					"nativeSrc": "7141:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7141:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7099:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "7099:28:15"
																			},
																			"nativeSrc": "7099:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7099:80:15"
																		},
																		"nativeSrc": "7099:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7099:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6749:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6749:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6754:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6754:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6746:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6746:2:15"
																},
																"nativeSrc": "6746:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6746:11:15"
															},
															"nativeSrc": "6743:446:15",
															"nodeType": "YulIf",
															"src": "6743:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6653:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6708:5:15",
														"nodeType": "YulTypedName",
														"src": "6708:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6715:3:15",
														"nodeType": "YulTypedName",
														"src": "6715:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6720:10:15",
														"nodeType": "YulTypedName",
														"src": "6720:10:15",
														"type": ""
													}
												],
												"src": "6653:543:15"
											},
											{
												"body": {
													"nativeSrc": "7265:54:15",
													"nodeType": "YulBlock",
													"src": "7265:54:15",
													"statements": [
														{
															"nativeSrc": "7275:37:15",
															"nodeType": "YulAssignment",
															"src": "7275:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7300:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7300:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7306:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7306:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7296:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7296:3:15"
																},
																"nativeSrc": "7296:16:15",
																"nodeType": "YulFunctionCall",
																"src": "7296:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7275:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "7275:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7202:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7240:4:15",
														"nodeType": "YulTypedName",
														"src": "7240:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7246:5:15",
														"nodeType": "YulTypedName",
														"src": "7246:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7256:8:15",
														"nodeType": "YulTypedName",
														"src": "7256:8:15",
														"type": ""
													}
												],
												"src": "7202:117:15"
											},
											{
												"body": {
													"nativeSrc": "7376:118:15",
													"nodeType": "YulBlock",
													"src": "7376:118:15",
													"statements": [
														{
															"nativeSrc": "7386:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7386:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7435:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7435:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7438:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7438:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7431:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7431:3:15"
																				},
																				"nativeSrc": "7431:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7431:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7450:1:15",
																						"nodeType": "YulLiteral",
																						"src": "7450:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7446:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7446:3:15"
																				},
																				"nativeSrc": "7446:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7446:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7402:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "7402:28:15"
																		},
																		"nativeSrc": "7402:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7402:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7398:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7398:3:15"
																},
																"nativeSrc": "7398:56:15",
																"nodeType": "YulFunctionCall",
																"src": "7398:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7390:4:15",
																	"nodeType": "YulTypedName",
																	"src": "7390:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7463:25:15",
															"nodeType": "YulAssignment",
															"src": "7463:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7477:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7477:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7483:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7483:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7473:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7473:3:15"
																},
																"nativeSrc": "7473:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7473:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7463:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7325:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7353:4:15",
														"nodeType": "YulTypedName",
														"src": "7353:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7359:5:15",
														"nodeType": "YulTypedName",
														"src": "7359:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7369:6:15",
														"nodeType": "YulTypedName",
														"src": "7369:6:15",
														"type": ""
													}
												],
												"src": "7325:169:15"
											},
											{
												"body": {
													"nativeSrc": "7580:214:15",
													"nodeType": "YulBlock",
													"src": "7580:214:15",
													"statements": [
														{
															"nativeSrc": "7713:37:15",
															"nodeType": "YulAssignment",
															"src": "7713:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7740:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7740:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7746:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7746:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7721:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7721:18:15"
																},
																"nativeSrc": "7721:29:15",
																"nodeType": "YulFunctionCall",
																"src": "7721:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7713:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7713:4:15"
																}
															]
														},
														{
															"nativeSrc": "7759:29:15",
															"nodeType": "YulAssignment",
															"src": "7759:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7770:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7770:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7780:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7780:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7783:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7783:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7776:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7776:3:15"
																		},
																		"nativeSrc": "7776:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7776:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7767:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7767:2:15"
																},
																"nativeSrc": "7767:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7767:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7759:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7759:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7499:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7561:4:15",
														"nodeType": "YulTypedName",
														"src": "7561:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7567:3:15",
														"nodeType": "YulTypedName",
														"src": "7567:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7575:4:15",
														"nodeType": "YulTypedName",
														"src": "7575:4:15",
														"type": ""
													}
												],
												"src": "7499:295:15"
											},
											{
												"body": {
													"nativeSrc": "7891:1303:15",
													"nodeType": "YulBlock",
													"src": "7891:1303:15",
													"statements": [
														{
															"nativeSrc": "7902:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7902:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7949:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7949:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7916:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "7916:32:15"
																},
																"nativeSrc": "7916:37:15",
																"nodeType": "YulFunctionCall",
																"src": "7916:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7906:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7906:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8038:22:15",
																"nodeType": "YulBlock",
																"src": "8038:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8040:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8040:16:15"
																			},
																			"nativeSrc": "8040:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8040:18:15"
																		},
																		"nativeSrc": "8040:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8040:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8010:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8010:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:18:15",
																		"nodeType": "YulLiteral",
																		"src": "8018:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8007:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8007:2:15"
																},
																"nativeSrc": "8007:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8007:30:15"
															},
															"nativeSrc": "8004:56:15",
															"nodeType": "YulIf",
															"src": "8004:56:15"
														},
														{
															"nativeSrc": "8070:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8070:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8116:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8116:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8110:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "8110:5:15"
																		},
																		"nativeSrc": "8110:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8110:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8084:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "8084:25:15"
																},
																"nativeSrc": "8084:38:15",
																"nodeType": "YulFunctionCall",
																"src": "8084:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8074:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8074:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8215:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8215:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8221:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8221:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8229:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8229:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8169:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "8169:45:15"
																},
																"nativeSrc": "8169:67:15",
																"nodeType": "YulFunctionCall",
																"src": "8169:67:15"
															},
															"nativeSrc": "8169:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "8169:67:15"
														},
														{
															"nativeSrc": "8246:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8246:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "8263:1:15",
																"nodeType": "YulLiteral",
																"src": "8263:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8250:9:15",
																	"nodeType": "YulTypedName",
																	"src": "8250:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8274:17:15",
															"nodeType": "YulAssignment",
															"src": "8274:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "8287:4:15",
																"nodeType": "YulLiteral",
																"src": "8287:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8274:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "8274:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8338:611:15",
																		"nodeType": "YulBlock",
																		"src": "8338:611:15",
																		"statements": [
																			{
																				"nativeSrc": "8352:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8352:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8371:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "8371:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8383:4:15",
																									"nodeType": "YulLiteral",
																									"src": "8383:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8379:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8379:3:15"
																							},
																							"nativeSrc": "8379:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8379:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8367:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "8367:3:15"
																					},
																					"nativeSrc": "8367:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8356:7:15",
																						"nodeType": "YulTypedName",
																						"src": "8356:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8403:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8403:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8449:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8449:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8417:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "8417:31:15"
																					},
																					"nativeSrc": "8417:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8417:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8407:6:15",
																						"nodeType": "YulTypedName",
																						"src": "8407:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8467:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8467:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8476:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8476:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8471:1:15",
																						"nodeType": "YulTypedName",
																						"src": "8471:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8535:163:15",
																					"nodeType": "YulBlock",
																					"src": "8535:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8560:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8560:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8578:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "8578:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8583:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "8583:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8574:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8574:3:15"
																												},
																												"nativeSrc": "8574:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8574:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8568:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "8568:5:15"
																										},
																										"nativeSrc": "8568:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8568:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8553:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8553:6:15"
																								},
																								"nativeSrc": "8553:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8553:42:15"
																							},
																							"nativeSrc": "8553:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8553:42:15"
																						},
																						{
																							"nativeSrc": "8612:24:15",
																							"nodeType": "YulAssignment",
																							"src": "8612:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8626:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8626:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8634:1:15",
																										"nodeType": "YulLiteral",
																										"src": "8634:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8622:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8622:3:15"
																								},
																								"nativeSrc": "8622:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8622:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8612:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8612:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8653:31:15",
																							"nodeType": "YulAssignment",
																							"src": "8653:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8670:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "8670:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8681:2:15",
																										"nodeType": "YulLiteral",
																										"src": "8681:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8666:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8666:3:15"
																								},
																								"nativeSrc": "8666:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8666:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8653:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "8653:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8501:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "8501:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8504:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "8504:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8498:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8498:2:15"
																					},
																					"nativeSrc": "8498:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8498:14:15"
																				},
																				"nativeSrc": "8490:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8513:21:15",
																					"nodeType": "YulBlock",
																					"src": "8513:21:15",
																					"statements": [
																						{
																							"nativeSrc": "8515:17:15",
																							"nodeType": "YulAssignment",
																							"src": "8515:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8524:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "8524:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8527:4:15",
																										"nodeType": "YulLiteral",
																										"src": "8527:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8520:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "8520:3:15"
																								},
																								"nativeSrc": "8520:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8520:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8515:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "8515:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8494:3:15",
																					"nodeType": "YulBlock",
																					"src": "8494:3:15",
																					"statements": []
																				},
																				"src": "8490:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "8734:156:15",
																					"nodeType": "YulBlock",
																					"src": "8734:156:15",
																					"statements": [
																						{
																							"nativeSrc": "8752:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8752:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8779:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "8779:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8784:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8784:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8775:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "8775:3:15"
																										},
																										"nativeSrc": "8775:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8775:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8769:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "8769:5:15"
																								},
																								"nativeSrc": "8769:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8769:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8756:9:15",
																									"nodeType": "YulTypedName",
																									"src": "8756:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8819:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "8819:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8846:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "8846:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8861:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "8861:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8869:4:15",
																														"nodeType": "YulLiteral",
																														"src": "8869:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8857:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "8857:3:15"
																												},
																												"nativeSrc": "8857:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "8857:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8827:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "8827:18:15"
																										},
																										"nativeSrc": "8827:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "8827:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8812:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "8812:6:15"
																								},
																								"nativeSrc": "8812:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "8812:64:15"
																							},
																							"nativeSrc": "8812:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "8812:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8717:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "8717:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8726:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "8726:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8714:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "8714:2:15"
																					},
																					"nativeSrc": "8714:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8714:19:15"
																				},
																				"nativeSrc": "8711:179:15",
																				"nodeType": "YulIf",
																				"src": "8711:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8910:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "8910:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8924:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "8924:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8932:1:15",
																											"nodeType": "YulLiteral",
																											"src": "8932:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8920:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "8920:3:15"
																									},
																									"nativeSrc": "8920:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "8920:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8936:1:15",
																									"nodeType": "YulLiteral",
																									"src": "8936:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8916:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "8916:3:15"
																							},
																							"nativeSrc": "8916:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "8916:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8903:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8903:6:15"
																					},
																					"nativeSrc": "8903:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8903:36:15"
																				},
																				"nativeSrc": "8903:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8903:36:15"
																			}
																		]
																	},
																	"nativeSrc": "8331:618:15",
																	"nodeType": "YulCase",
																	"src": "8331:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8336:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8336:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8966:222:15",
																		"nodeType": "YulBlock",
																		"src": "8966:222:15",
																		"statements": [
																			{
																				"nativeSrc": "8980:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8980:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8993:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8993:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8984:5:15",
																						"nodeType": "YulTypedName",
																						"src": "8984:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9017:67:15",
																					"nodeType": "YulBlock",
																					"src": "9017:67:15",
																					"statements": [
																						{
																							"nativeSrc": "9035:35:15",
																							"nodeType": "YulAssignment",
																							"src": "9035:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9054:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "9054:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9059:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "9059:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9050:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "9050:3:15"
																										},
																										"nativeSrc": "9050:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "9050:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9044:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "9044:5:15"
																								},
																								"nativeSrc": "9044:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "9044:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9035:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "9035:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9010:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "9010:6:15"
																				},
																				"nativeSrc": "9007:77:15",
																				"nodeType": "YulIf",
																				"src": "9007:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9104:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "9104:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9163:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "9163:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9170:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "9170:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9110:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "9110:52:15"
																							},
																							"nativeSrc": "9110:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "9110:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9097:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9097:6:15"
																					},
																					"nativeSrc": "9097:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9097:81:15"
																				},
																				"nativeSrc": "9097:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9097:81:15"
																			}
																		]
																	},
																	"nativeSrc": "8958:230:15",
																	"nodeType": "YulCase",
																	"src": "8958:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8311:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8311:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8319:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8319:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8308:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8308:2:15"
																},
																"nativeSrc": "8308:14:15",
																"nodeType": "YulFunctionCall",
																"src": "8308:14:15"
															},
															"nativeSrc": "8301:887:15",
															"nodeType": "YulSwitch",
															"src": "8301:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7799:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7880:4:15",
														"nodeType": "YulTypedName",
														"src": "7880:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7886:3:15",
														"nodeType": "YulTypedName",
														"src": "7886:3:15",
														"type": ""
													}
												],
												"src": "7799:1395:15"
											},
											{
												"body": {
													"nativeSrc": "9265:53:15",
													"nodeType": "YulBlock",
													"src": "9265:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9282:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9282:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9305:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9305:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9287:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "9287:17:15"
																		},
																		"nativeSrc": "9287:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9287:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9275:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9275:6:15"
																},
																"nativeSrc": "9275:37:15",
																"nodeType": "YulFunctionCall",
																"src": "9275:37:15"
															},
															"nativeSrc": "9275:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "9275:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9200:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9253:5:15",
														"nodeType": "YulTypedName",
														"src": "9253:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9260:3:15",
														"nodeType": "YulTypedName",
														"src": "9260:3:15",
														"type": ""
													}
												],
												"src": "9200:118:15"
											},
											{
												"body": {
													"nativeSrc": "9422:124:15",
													"nodeType": "YulBlock",
													"src": "9422:124:15",
													"statements": [
														{
															"nativeSrc": "9432:26:15",
															"nodeType": "YulAssignment",
															"src": "9432:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9444:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9444:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9455:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9455:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9440:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9440:3:15"
																},
																"nativeSrc": "9440:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9440:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9432:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9432:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9512:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9512:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9525:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9525:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9536:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9536:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9521:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9521:3:15"
																		},
																		"nativeSrc": "9521:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9521:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9468:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9468:43:15"
																},
																"nativeSrc": "9468:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9468:71:15"
															},
															"nativeSrc": "9468:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9468:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9324:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9394:9:15",
														"nodeType": "YulTypedName",
														"src": "9394:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9406:6:15",
														"nodeType": "YulTypedName",
														"src": "9406:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9417:4:15",
														"nodeType": "YulTypedName",
														"src": "9417:4:15",
														"type": ""
													}
												],
												"src": "9324:222:15"
											},
											{
												"body": {
													"nativeSrc": "9648:73:15",
													"nodeType": "YulBlock",
													"src": "9648:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9665:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9665:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9670:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9658:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9658:6:15"
																},
																"nativeSrc": "9658:19:15",
																"nodeType": "YulFunctionCall",
																"src": "9658:19:15"
															},
															"nativeSrc": "9658:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "9658:19:15"
														},
														{
															"nativeSrc": "9686:29:15",
															"nodeType": "YulAssignment",
															"src": "9686:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9705:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9705:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9710:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9710:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9701:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:15"
																},
																"nativeSrc": "9701:14:15",
																"nodeType": "YulFunctionCall",
																"src": "9701:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9686:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "9686:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9552:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9620:3:15",
														"nodeType": "YulTypedName",
														"src": "9620:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9625:6:15",
														"nodeType": "YulTypedName",
														"src": "9625:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9636:11:15",
														"nodeType": "YulTypedName",
														"src": "9636:11:15",
														"type": ""
													}
												],
												"src": "9552:169:15"
											},
											{
												"body": {
													"nativeSrc": "9833:122:15",
													"nodeType": "YulBlock",
													"src": "9833:122:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9855:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9855:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9863:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9863:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9851:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:15"
																		},
																		"nativeSrc": "9851:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9851:14:15"
																	},
																	{
																		"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9867:34:15",
																		"nodeType": "YulLiteral",
																		"src": "9867:34:15",
																		"type": "",
																		"value": "At least one whitelisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:15"
																},
																"nativeSrc": "9844:58:15",
																"nodeType": "YulFunctionCall",
																"src": "9844:58:15"
															},
															"nativeSrc": "9844:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "9844:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9923:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9923:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9931:2:15",
																				"nodeType": "YulLiteral",
																				"src": "9931:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9919:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9919:3:15"
																		},
																		"nativeSrc": "9919:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9919:15:15"
																	},
																	{
																		"hexValue": "207265717569726564",
																		"kind": "string",
																		"nativeSrc": "9936:11:15",
																		"nodeType": "YulLiteral",
																		"src": "9936:11:15",
																		"type": "",
																		"value": " required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9912:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9912:6:15"
																},
																"nativeSrc": "9912:36:15",
																"nodeType": "YulFunctionCall",
																"src": "9912:36:15"
															},
															"nativeSrc": "9912:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "9912:36:15"
														}
													]
												},
												"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
												"nativeSrc": "9727:228:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9825:6:15",
														"nodeType": "YulTypedName",
														"src": "9825:6:15",
														"type": ""
													}
												],
												"src": "9727:228:15"
											},
											{
												"body": {
													"nativeSrc": "10107:220:15",
													"nodeType": "YulBlock",
													"src": "10107:220:15",
													"statements": [
														{
															"nativeSrc": "10117:74:15",
															"nodeType": "YulAssignment",
															"src": "10117:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10183:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10183:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10188:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10188:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10124:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "10124:58:15"
																},
																"nativeSrc": "10124:67:15",
																"nodeType": "YulFunctionCall",
																"src": "10124:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10117:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10117:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10289:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10289:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																	"nativeSrc": "10200:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "10200:88:15"
																},
																"nativeSrc": "10200:93:15",
																"nodeType": "YulFunctionCall",
																"src": "10200:93:15"
															},
															"nativeSrc": "10200:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "10200:93:15"
														},
														{
															"nativeSrc": "10302:19:15",
															"nodeType": "YulAssignment",
															"src": "10302:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10313:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "10313:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10318:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10318:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10309:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10309:3:15"
																},
																"nativeSrc": "10309:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10309:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10302:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10302:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9961:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10095:3:15",
														"nodeType": "YulTypedName",
														"src": "10095:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10103:3:15",
														"nodeType": "YulTypedName",
														"src": "10103:3:15",
														"type": ""
													}
												],
												"src": "9961:366:15"
											},
											{
												"body": {
													"nativeSrc": "10504:248:15",
													"nodeType": "YulBlock",
													"src": "10504:248:15",
													"statements": [
														{
															"nativeSrc": "10514:26:15",
															"nodeType": "YulAssignment",
															"src": "10514:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10526:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10526:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10537:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10537:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10522:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10522:3:15"
																},
																"nativeSrc": "10522:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10522:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10514:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10514:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10561:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10561:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10572:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10572:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10557:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:15"
																		},
																		"nativeSrc": "10557:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10557:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10580:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "10580:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10586:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10586:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10576:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:15"
																		},
																		"nativeSrc": "10576:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10576:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10550:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:15"
																},
																"nativeSrc": "10550:47:15",
																"nodeType": "YulFunctionCall",
																"src": "10550:47:15"
															},
															"nativeSrc": "10550:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "10550:47:15"
														},
														{
															"nativeSrc": "10606:139:15",
															"nodeType": "YulAssignment",
															"src": "10606:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10740:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10740:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10614:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "10614:124:15"
																},
																"nativeSrc": "10614:131:15",
																"nodeType": "YulFunctionCall",
																"src": "10614:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10606:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10606:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10333:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10484:9:15",
														"nodeType": "YulTypedName",
														"src": "10484:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10499:4:15",
														"nodeType": "YulTypedName",
														"src": "10499:4:15",
														"type": ""
													}
												],
												"src": "10333:419:15"
											},
											{
												"body": {
													"nativeSrc": "10864:68:15",
													"nodeType": "YulBlock",
													"src": "10864:68:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10886:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10886:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10894:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10894:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10882:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10882:3:15"
																		},
																		"nativeSrc": "10882:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10882:14:15"
																	},
																	{
																		"hexValue": "496e76616c69642072656365697665722061646472657373",
																		"kind": "string",
																		"nativeSrc": "10898:26:15",
																		"nodeType": "YulLiteral",
																		"src": "10898:26:15",
																		"type": "",
																		"value": "Invalid receiver address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10875:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10875:6:15"
																},
																"nativeSrc": "10875:50:15",
																"nodeType": "YulFunctionCall",
																"src": "10875:50:15"
															},
															"nativeSrc": "10875:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "10875:50:15"
														}
													]
												},
												"name": "store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
												"nativeSrc": "10758:174:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10856:6:15",
														"nodeType": "YulTypedName",
														"src": "10856:6:15",
														"type": ""
													}
												],
												"src": "10758:174:15"
											},
											{
												"body": {
													"nativeSrc": "11084:220:15",
													"nodeType": "YulBlock",
													"src": "11084:220:15",
													"statements": [
														{
															"nativeSrc": "11094:74:15",
															"nodeType": "YulAssignment",
															"src": "11094:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11160:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11160:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11165:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11165:2:15",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11101:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "11101:58:15"
																},
																"nativeSrc": "11101:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11101:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11094:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11094:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11266:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11266:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																	"nativeSrc": "11177:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "11177:88:15"
																},
																"nativeSrc": "11177:93:15",
																"nodeType": "YulFunctionCall",
																"src": "11177:93:15"
															},
															"nativeSrc": "11177:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "11177:93:15"
														},
														{
															"nativeSrc": "11279:19:15",
															"nodeType": "YulAssignment",
															"src": "11279:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11290:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11290:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11295:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11295:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11286:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11286:3:15"
																},
																"nativeSrc": "11286:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11286:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11279:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11279:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10938:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11072:3:15",
														"nodeType": "YulTypedName",
														"src": "11072:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11080:3:15",
														"nodeType": "YulTypedName",
														"src": "11080:3:15",
														"type": ""
													}
												],
												"src": "10938:366:15"
											},
											{
												"body": {
													"nativeSrc": "11481:248:15",
													"nodeType": "YulBlock",
													"src": "11481:248:15",
													"statements": [
														{
															"nativeSrc": "11491:26:15",
															"nodeType": "YulAssignment",
															"src": "11491:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11503:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11503:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11514:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11514:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11499:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11499:3:15"
																},
																"nativeSrc": "11499:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11499:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11491:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11491:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11538:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11538:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11549:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11549:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11534:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11534:3:15"
																		},
																		"nativeSrc": "11534:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11534:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11557:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "11557:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11563:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11563:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11553:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11553:3:15"
																		},
																		"nativeSrc": "11553:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11553:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11527:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11527:6:15"
																},
																"nativeSrc": "11527:47:15",
																"nodeType": "YulFunctionCall",
																"src": "11527:47:15"
															},
															"nativeSrc": "11527:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "11527:47:15"
														},
														{
															"nativeSrc": "11583:139:15",
															"nodeType": "YulAssignment",
															"src": "11583:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11717:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11717:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11591:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "11591:124:15"
																},
																"nativeSrc": "11591:131:15",
																"nodeType": "YulFunctionCall",
																"src": "11591:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11583:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11310:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11461:9:15",
														"nodeType": "YulTypedName",
														"src": "11461:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11476:4:15",
														"nodeType": "YulTypedName",
														"src": "11476:4:15",
														"type": ""
													}
												],
												"src": "11310:419:15"
											},
											{
												"body": {
													"nativeSrc": "11841:65:15",
													"nodeType": "YulBlock",
													"src": "11841:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11863:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11863:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11871:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11871:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11859:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11859:3:15"
																		},
																		"nativeSrc": "11859:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11859:14:15"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "11875:23:15",
																		"nodeType": "YulLiteral",
																		"src": "11875:23:15",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11852:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11852:6:15"
																},
																"nativeSrc": "11852:47:15",
																"nodeType": "YulFunctionCall",
																"src": "11852:47:15"
															},
															"nativeSrc": "11852:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "11852:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "11735:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11833:6:15",
														"nodeType": "YulTypedName",
														"src": "11833:6:15",
														"type": ""
													}
												],
												"src": "11735:171:15"
											},
											{
												"body": {
													"nativeSrc": "12058:220:15",
													"nodeType": "YulBlock",
													"src": "12058:220:15",
													"statements": [
														{
															"nativeSrc": "12068:74:15",
															"nodeType": "YulAssignment",
															"src": "12068:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12134:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12134:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12139:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12075:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12075:58:15"
																},
																"nativeSrc": "12075:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12075:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12068:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12068:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12240:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12240:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "12151:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "12151:88:15"
																},
																"nativeSrc": "12151:93:15",
																"nodeType": "YulFunctionCall",
																"src": "12151:93:15"
															},
															"nativeSrc": "12151:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "12151:93:15"
														},
														{
															"nativeSrc": "12253:19:15",
															"nodeType": "YulAssignment",
															"src": "12253:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12264:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12264:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12269:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12269:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12260:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12260:3:15"
																},
																"nativeSrc": "12260:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12260:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12253:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12253:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11912:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12046:3:15",
														"nodeType": "YulTypedName",
														"src": "12046:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12054:3:15",
														"nodeType": "YulTypedName",
														"src": "12054:3:15",
														"type": ""
													}
												],
												"src": "11912:366:15"
											},
											{
												"body": {
													"nativeSrc": "12455:248:15",
													"nodeType": "YulBlock",
													"src": "12455:248:15",
													"statements": [
														{
															"nativeSrc": "12465:26:15",
															"nodeType": "YulAssignment",
															"src": "12465:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12477:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12477:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12488:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12488:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12473:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12473:3:15"
																},
																"nativeSrc": "12473:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12473:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12465:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12465:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12512:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12512:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12523:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12523:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12508:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12508:3:15"
																		},
																		"nativeSrc": "12508:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12508:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12531:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12531:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12537:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12537:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12527:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12527:3:15"
																		},
																		"nativeSrc": "12527:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12527:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12501:6:15"
																},
																"nativeSrc": "12501:47:15",
																"nodeType": "YulFunctionCall",
																"src": "12501:47:15"
															},
															"nativeSrc": "12501:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "12501:47:15"
														},
														{
															"nativeSrc": "12557:139:15",
															"nodeType": "YulAssignment",
															"src": "12557:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12691:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12691:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12565:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "12565:124:15"
																},
																"nativeSrc": "12565:131:15",
																"nodeType": "YulFunctionCall",
																"src": "12565:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12557:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12557:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12284:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12435:9:15",
														"nodeType": "YulTypedName",
														"src": "12435:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12450:4:15",
														"nodeType": "YulTypedName",
														"src": "12450:4:15",
														"type": ""
													}
												],
												"src": "12284:419:15"
											},
											{
												"body": {
													"nativeSrc": "12737:152:15",
													"nodeType": "YulBlock",
													"src": "12737:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12754:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12754:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12757:77:15",
																		"nodeType": "YulLiteral",
																		"src": "12757:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12747:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12747:6:15"
																},
																"nativeSrc": "12747:88:15",
																"nodeType": "YulFunctionCall",
																"src": "12747:88:15"
															},
															"nativeSrc": "12747:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "12747:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12851:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12851:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12854:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12854:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12844:6:15"
																},
																"nativeSrc": "12844:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12844:15:15"
															},
															"nativeSrc": "12844:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12844:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12875:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12875:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12878:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12878:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12868:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12868:6:15"
																},
																"nativeSrc": "12868:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12868:15:15"
															},
															"nativeSrc": "12868:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12868:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12709:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "12709:180:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least one whitelisted address\")\n\n        mstore(add(memPtr, 32), \" required\")\n\n    }\n\n    function abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid receiver address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051612f7a380380612f7a833981810160405281019061003191906105d8565b336040518060400160405280600381526020017f43434b00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f43434b546f6b656e00000000000000000000000000000000000000000000000081525081600390816100ad9190610854565b5080600490816100bd9190610854565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610932565b60405180910390fd5b61013f8161035a60201b60201c565b505f835111610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a906109cb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610a33565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a9b565b60405180910390fd5b5f5f90505b83518110156102e957600160065f86848151811061028557610284610ab9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610264565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505050610ae6565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61047882610432565b810181811067ffffffffffffffff8211171561049757610496610442565b5b80604052505050565b5f6104a961041d565b90506104b5828261046f565b919050565b5f67ffffffffffffffff8211156104d4576104d3610442565b5b602082029050602081019050919050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610512826104e9565b9050919050565b61052281610508565b811461052c575f5ffd5b50565b5f8151905061053d81610519565b92915050565b5f610555610550846104ba565b6104a0565b90508083825260208201905060208402830185811115610578576105776104e5565b5b835b818110156105a1578061058d888261052f565b84526020840193505060208101905061057a565b5050509392505050565b5f82601f8301126105bf576105be61042e565b5b81516105cf848260208601610543565b91505092915050565b5f5f5f606084860312156105ef576105ee610426565b5b5f84015167ffffffffffffffff81111561060c5761060b61042a565b5b610618868287016105ab565b93505060206106298682870161052f565b925050604061063a8682870161052f565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061069257607f821691505b6020821081036106a5576106a461064e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106cc565b61071186836106cc565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61075561075061074b84610729565b610732565b610729565b9050919050565b5f819050919050565b61076e8361073b565b61078261077a8261075c565b8484546106d8565b825550505050565b5f5f905090565b61079961078a565b6107a4818484610765565b505050565b5b818110156107c7576107bc5f82610791565b6001810190506107aa565b5050565b601f82111561080c576107dd816106ab565b6107e6846106bd565b810160208510156107f5578190505b610809610801856106bd565b8301826107a9565b50505b505050565b5f82821c905092915050565b5f61082c5f1984600802610811565b1980831691505092915050565b5f610844838361081d565b9150826002028217905092915050565b61085d82610644565b67ffffffffffffffff81111561087657610875610442565b5b610880825461067b565b61088b8282856107cb565b5f60209050601f8311600181146108bc575f84156108aa578287015190505b6108b48582610839565b86555061091b565b601f1984166108ca866106ab565b5f5b828110156108f1578489015182556001820191506020850194506020810190506108cc565b8683101561090e578489015161090a601f89168261081d565b8355505b6001600288020188555050505b505050505050565b61092c81610508565b82525050565b5f6020820190506109455f830184610923565b92915050565b5f82825260208201905092915050565b7f4174206c65617374206f6e652077686974656c697374656420616464726573735f8201527f2072657175697265640000000000000000000000000000000000000000000000602082015250565b5f6109b560298361094b565b91506109c08261095b565b604082019050919050565b5f6020820190508181035f8301526109e2816109a9565b9050919050565b7f496e76616c6964207265636569766572206164647265737300000000000000005f82015250565b5f610a1d60188361094b565b9150610a28826109e9565b602082019050919050565b5f6020820190508181035f830152610a4a81610a11565b9050919050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f610a8560158361094b565b9150610a9082610a51565b602082019050919050565b5f6020820190508181035f830152610ab281610a79565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b60805160a051612457610b235f395f8181610a9f01528181610c210152610e4901525f8181610ac301528181610d1e0152610e1201526124575ff3fe608060405234801561000f575f5ffd5b506004361061021a575f3560e01c806395d89b4111610123578063cefaaff6116100ab578063e08ba51a1161007a578063e08ba51a14610646578063e43252d714610662578063e58398361461067e578063eb91d37e146106ae578063f2fde38b146106cc5761021a565b8063cefaaff6146105ac578063d0516650146105c8578063da0239a6146105f8578063dd62ed3e146106165761021a565b8063a9059cbb116100f2578063a9059cbb14610506578063aba6370514610536578063bdd3d82514610554578063c802e3cd14610572578063cb4b73ab146105905761021a565b806395d89b411461047c5780639b19251a1461049a5780639d76ea58146104ca5780639dc341d0146104e85761021a565b806340c10f19116101a657806370a082311161017557806370a08231146103ea578063715018a61461041a5780638ab1d681146104245780638da5cb5b14610440578063902d55a51461045e5761021a565b806340c10f191461037457806354fd4d50146103905780635c975abb146103ae5780636290865d146103cc5761021a565b8063158b1a57116101ed578063158b1a57146102ba57806318160ddd146102ea57806323b872dd146103085780632d38024214610338578063313ce567146103565761021a565b806306fdde031461021e578063095ea7b31461023c57806312cae7af1461026c578063134e18f41461029c575b5f5ffd5b6102266106e8565b6040516102339190611a05565b60405180910390f35b61025660048036038101906102519190611ab6565b610778565b6040516102639190611b0e565b60405180910390f35b61028660048036038101906102819190611b27565b61079a565b6040516102939190611b61565b60405180910390f35b6102a46107ab565b6040516102b19190611b89565b60405180910390f35b6102d460048036038101906102cf9190611b27565b6107b2565b6040516102e19190611b61565b60405180910390f35b6102f26107bb565b6040516102ff9190611b61565b60405180910390f35b610322600480360381019061031d9190611ba2565b6107c4565b60405161032f9190611b0e565b60405180910390f35b61034061082d565b60405161034d9190611b61565b60405180910390f35b61035e610833565b60405161036b9190611c0d565b60405180910390f35b61038e60048036038101906103899190611ab6565b61083a565b005b6103986108bd565b6040516103a59190611a05565b60405180910390f35b6103b66108fa565b6040516103c39190611b0e565b60405180910390f35b6103d4610901565b6040516103e19190611b89565b60405180910390f35b61040460048036038101906103ff9190611b27565b610908565b6040516104119190611b61565b60405180910390f35b61042261094d565b005b61043e60048036038101906104399190611b27565b610960565b005b6104486109bf565b6040516104559190611b89565b60405180910390f35b6104666109e7565b6040516104739190611b61565b60405180910390f35b6104846109f0565b6040516104919190611a05565b60405180910390f35b6104b460048036038101906104af9190611b27565b610a80565b6040516104c19190611b0e565b60405180910390f35b6104d2610a9d565b6040516104df9190611b89565b60405180910390f35b6104f0610ac1565b6040516104fd9190611b89565b60405180910390f35b610520600480360381019061051b9190611ab6565b610ae5565b60405161052d9190611b0e565b60405180910390f35b61053e610b4c565b60405161054b9190611b89565b60405180910390f35b61055c610b53565b6040516105699190611b89565b60405180910390f35b61057a610b78565b6040516105879190611b61565b60405180910390f35b6105aa60048036038101906105a59190611b27565b610b7d565b005b6105c660048036038101906105c19190611c26565b610bdc565b005b6105e260048036038101906105dd9190611b27565b610ebb565b6040516105ef9190611b0e565b60405180910390f35b610600610ed8565b60405161060d9190611b61565b60405180910390f35b610630600480360381019061062b9190611c51565b610ef1565b60405161063d9190611b61565b60405180910390f35b610660600480360381019061065b9190611b27565b610f73565b005b61067c60048036038101906106779190611b27565b610fd3565b005b61069860048036038101906106939190611b27565b611033565b6040516106a59190611b0e565b60405180910390f35b6106b6611085565b6040516106c39190611b61565b60405180910390f35b6106e660048036038101906106e19190611b27565b611174565b005b6060600380546106f790611cbc565b80601f016020809104026020016040519081016040528092919081815260200182805461072390611cbc565b801561076e5780601f106107455761010080835404028352916020019161076e565b820191905f5260205f20905b81548152906001019060200180831161075157829003601f168201915b5050505050905090565b5f5f6107826111f8565b905061078f8185856111ff565b600191505092915050565b5f6107a482610908565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f816fffffffffffffffffffffffffffffffff168214610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081090611d36565b60405180910390fd5b610824848484611211565b90509392505050565b60095481565b5f5f905090565b61084261123f565b64174876e800816009546108569190611d81565b1115610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e90611dfe565b60405180910390fd5b6108a182826112c6565b8060095f8282546108b29190611d81565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095561123f565b61095e5f611345565b565b61096861123f565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b64174876e80081565b6060600480546109ff90611cbc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2b90611cbc565b8015610a765780601f10610a4d57610100808354040283529160200191610a76565b820191905f5260205f20905b815481529060010190602001808311610a5957829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f816fffffffffffffffffffffffffffffffff168214610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190611d36565b60405180910390fd5b610b448383611408565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601481565b610b8561123f565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8111610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590611e66565b60405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000009050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610c7e929190611e84565b602060405180830381865afa158015610c99573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cbd9190611ebf565b1015610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf590611f34565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd337f0000000000000000000000000000000000000000000000000000000000000000866040518463ffffffff1660e01b8152600401610d5c93929190611f52565b6020604051808303815f875af1158015610d78573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9c9190611fb1565b905080610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd590612026565b60405180910390fd5b5f601484610dec9190612044565b9050610df833826112c6565b8060095f828254610e099190611d81565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167fc95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd86604051610ead9190611b61565b60405180910390a350505050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f60095464174876e800610eec9190612085565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610f7b61123f565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610fdb61123f565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156110f5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190612179565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff1661115f9190612345565b61116991906123bc565b905080935050505090565b61117c61123f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ec575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e39190611b89565b60405180910390fd5b6111f581611345565b50565b5f33905090565b61120c838383600161142a565b505050565b5f5f61121b6111f8565b90506112288582856115f9565b61123385858561168c565b60019150509392505050565b6112476111f8565b73ffffffffffffffffffffffffffffffffffffffff166112656109bf565b73ffffffffffffffffffffffffffffffffffffffff16146112c4576112886111f8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112bb9190611b89565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611336575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161132d9190611b89565b60405180910390fd5b6113415f838361177c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6114126111f8565b905061141f81858561168c565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361149a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114919190611b89565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361150a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115019190611b89565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115f3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115ea9190611b61565b60405180910390a35b50505050565b5f6116048484610ef1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116865781811015611677578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161166e939291906123ec565b60405180910390fd5b61168584848484035f61142a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116fc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116f39190611b89565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361176c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117639190611b89565b60405180910390fd5b61177783838361177c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117cc578060025f8282546117c09190611d81565b9250508190555061189a565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611855578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161184c939291906123ec565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118e1578060025f828254039250508190555061192b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119889190611b61565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119d782611995565b6119e1818561199f565b93506119f18185602086016119af565b6119fa816119bd565b840191505092915050565b5f6020820190508181035f830152611a1d81846119cd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a5282611a29565b9050919050565b611a6281611a48565b8114611a6c575f5ffd5b50565b5f81359050611a7d81611a59565b92915050565b5f819050919050565b611a9581611a83565b8114611a9f575f5ffd5b50565b5f81359050611ab081611a8c565b92915050565b5f5f60408385031215611acc57611acb611a25565b5b5f611ad985828601611a6f565b9250506020611aea85828601611aa2565b9150509250929050565b5f8115159050919050565b611b0881611af4565b82525050565b5f602082019050611b215f830184611aff565b92915050565b5f60208284031215611b3c57611b3b611a25565b5b5f611b4984828501611a6f565b91505092915050565b611b5b81611a83565b82525050565b5f602082019050611b745f830184611b52565b92915050565b611b8381611a48565b82525050565b5f602082019050611b9c5f830184611b7a565b92915050565b5f5f5f60608486031215611bb957611bb8611a25565b5b5f611bc686828701611a6f565b9350506020611bd786828701611a6f565b9250506040611be886828701611aa2565b9150509250925092565b5f60ff82169050919050565b611c0781611bf2565b82525050565b5f602082019050611c205f830184611bfe565b92915050565b5f60208284031215611c3b57611c3a611a25565b5b5f611c4884828501611aa2565b91505092915050565b5f5f60408385031215611c6757611c66611a25565b5b5f611c7485828601611a6f565b9250506020611c8585828601611a6f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611cd357607f821691505b602082108103611ce657611ce5611c8f565b5b50919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611d2060198361199f565b9150611d2b82611cec565b602082019050919050565b5f6020820190508181035f830152611d4d81611d14565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d8b82611a83565b9150611d9683611a83565b9250828201905080821115611dae57611dad611d54565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611de860158361199f565b9150611df382611db4565b602082019050919050565b5f6020820190508181035f830152611e1581611ddc565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f611e50601d8361199f565b9150611e5b82611e1c565b602082019050919050565b5f6020820190508181035f830152611e7d81611e44565b9050919050565b5f604082019050611e975f830185611b7a565b611ea46020830184611b7a565b9392505050565b5f81519050611eb981611a8c565b92915050565b5f60208284031215611ed457611ed3611a25565b5b5f611ee184828501611eab565b91505092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611f1e60168361199f565b9150611f2982611eea565b602082019050919050565b5f6020820190508181035f830152611f4b81611f12565b9050919050565b5f606082019050611f655f830186611b7a565b611f726020830185611b7a565b611f7f6040830184611b52565b949350505050565b611f9081611af4565b8114611f9a575f5ffd5b50565b5f81519050611fab81611f87565b92915050565b5f60208284031215611fc657611fc5611a25565b5b5f611fd384828501611f9d565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f61201060158361199f565b915061201b82611fdc565b602082019050919050565b5f6020820190508181035f83015261203d81612004565b9050919050565b5f61204e82611a83565b915061205983611a83565b925082820261206781611a83565b9150828204841483151761207e5761207d611d54565b5b5092915050565b5f61208f82611a83565b915061209a83611a83565b92508282039050818111156120b2576120b1611d54565b5b92915050565b6120c181611a29565b81146120cb575f5ffd5b50565b5f815190506120dc816120b8565b92915050565b5f8160020b9050919050565b6120f7816120e2565b8114612101575f5ffd5b50565b5f81519050612112816120ee565b92915050565b5f61ffff82169050919050565b61212e81612118565b8114612138575f5ffd5b50565b5f8151905061214981612125565b92915050565b61215881611bf2565b8114612162575f5ffd5b50565b5f815190506121738161214f565b92915050565b5f5f5f5f5f5f5f60e0888a03121561219457612193611a25565b5b5f6121a18a828b016120ce565b97505060206121b28a828b01612104565b96505060406121c38a828b0161213b565b95505060606121d48a828b0161213b565b94505060806121e58a828b0161213b565b93505060a06121f68a828b01612165565b92505060c06122078a828b01611f9d565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b600185111561226b5780860481111561224757612246611d54565b5b60018516156122565780820291505b808102905061226485612216565b945061222b565b94509492505050565b5f82612283576001905061233e565b81612290575f905061233e565b81600181146122a657600281146122b0576122df565b600191505061233e565b60ff8411156122c2576122c1611d54565b5b8360020a9150848211156122d9576122d8611d54565b5b5061233e565b5060208310610133831016604e8410600b84101617156123145782820a90508381111561230f5761230e611d54565b5b61233e565b6123218484846001612222565b9250905081840481111561233857612337611d54565b5b81810290505b9392505050565b5f61234f82611a83565b915061235a83611bf2565b92506123877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612274565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6123c682611a83565b91506123d183611a83565b9250826123e1576123e061238f565b5b828204905092915050565b5f6060820190506123ff5f830186611b7a565b61240c6020830185611b52565b6124196040830184611b52565b94935050505056fea2646970667358221220b4c4abeed4a24a7f7be7d8d6f37e07b98b30a82fc06e80f791e8e821aec808f064736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F7A CODESIZE SUB DUP1 PUSH2 0x2F7A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x5D8 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43434B546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x854 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x854 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x35A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP4 MLOAD GT PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x285 JUMPI PUSH2 0x284 PUSH2 0xAB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x264 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0xAE6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x478 DUP3 PUSH2 0x432 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x497 JUMPI PUSH2 0x496 PUSH2 0x442 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 PUSH2 0x41D JUMP JUMPDEST SWAP1 POP PUSH2 0x4B5 DUP3 DUP3 PUSH2 0x46F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4D3 PUSH2 0x442 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x512 DUP3 PUSH2 0x4E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x53D DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x555 PUSH2 0x550 DUP5 PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0x4E5 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI DUP1 PUSH2 0x58D DUP9 DUP3 PUSH2 0x52F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x57A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5BF JUMPI PUSH2 0x5BE PUSH2 0x42E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60C JUMPI PUSH2 0x60B PUSH2 0x42A JUMP JUMPDEST JUMPDEST PUSH2 0x618 DUP7 DUP3 DUP8 ADD PUSH2 0x5AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x629 DUP7 DUP3 DUP8 ADD PUSH2 0x52F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x63A DUP7 DUP3 DUP8 ADD PUSH2 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x692 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6A5 JUMPI PUSH2 0x6A4 PUSH2 0x64E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x707 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x711 DUP7 DUP4 PUSH2 0x6CC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x755 PUSH2 0x750 PUSH2 0x74B DUP5 PUSH2 0x729 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76E DUP4 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x782 PUSH2 0x77A DUP3 PUSH2 0x75C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6D8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x799 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x7A4 DUP2 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C7 JUMPI PUSH2 0x7BC PUSH0 DUP3 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7AA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x7DD DUP2 PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x7E6 DUP5 PUSH2 0x6BD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7F5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x809 PUSH2 0x801 DUP6 PUSH2 0x6BD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7A9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x82C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x811 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x844 DUP4 DUP4 PUSH2 0x81D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85D DUP3 PUSH2 0x644 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x876 JUMPI PUSH2 0x875 PUSH2 0x442 JUMP JUMPDEST JUMPDEST PUSH2 0x880 DUP3 SLOAD PUSH2 0x67B JUMP JUMPDEST PUSH2 0x88B DUP3 DUP3 DUP6 PUSH2 0x7CB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8BC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8AA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8B4 DUP6 DUP3 PUSH2 0x839 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x91B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8CA DUP7 PUSH2 0x6AB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8F1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8CC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x90E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x90A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x81D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x92C DUP2 PUSH2 0x508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x945 PUSH0 DUP4 ADD DUP5 PUSH2 0x923 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4174206C65617374206F6E652077686974656C69737465642061646472657373 PUSH0 DUP3 ADD MSTORE PUSH32 0x2072657175697265640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B5 PUSH1 0x29 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH2 0x9C0 DUP3 PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E2 DUP2 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563656976657220616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D PUSH1 0x18 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH2 0xA28 DUP3 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA4A DUP2 PUSH2 0xA11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 PUSH1 0x15 DUP4 PUSH2 0x94B JUMP JUMPDEST SWAP2 POP PUSH2 0xA90 DUP3 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB2 DUP2 PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2457 PUSH2 0xB23 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xA9F ADD MSTORE DUP2 DUP2 PUSH2 0xC21 ADD MSTORE PUSH2 0xE49 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xAC3 ADD MSTORE DUP2 DUP2 PUSH2 0xD1E ADD MSTORE PUSH2 0xE12 ADD MSTORE PUSH2 0x2457 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xCEFAAFF6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE08BA51A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CC JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xCEFAAFF6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x616 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC802E3CD EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x590 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x9DC341D0 EQ PUSH2 0x4E8 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x45E JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3CC JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x356 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x29C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x226 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x484 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D2 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53E PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xB7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x600 PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F7 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x745 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x751 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x782 PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x78F DUP2 DUP6 DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A4 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x842 PUSH2 0x123F JUMP JUMPDEST PUSH5 0x174876E800 DUP2 PUSH1 0x9 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST GT ISZERO PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88E SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 DUP3 DUP3 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x95E PUSH0 PUSH2 0x1345 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x968 PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH5 0x174876E800 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9FF SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2B SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB44 DUP4 DUP4 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC99 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST LT ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x14 DUP5 PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF8 CALLER DUP3 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC95D558E25335222B51E6424166172914E7CE4404A9647D3631EF320294081FD DUP7 PUSH1 0x40 MLOAD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH5 0x174876E800 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x123F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFDB PUSH2 0x123F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x1345 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x120C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x142A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x121B PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1228 DUP6 DUP3 DUP6 PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x1233 DUP6 DUP6 DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x11F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1265 PUSH2 0x9BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C4 JUMPI PUSH2 0x1288 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BB SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1336 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1341 PUSH0 DUP4 DUP4 PUSH2 0x177C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1412 PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x141F DUP2 DUP6 DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15F3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP5 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1677 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1685 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x142A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1777 DUP4 DUP4 DUP4 PUSH2 0x177C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x189A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1855 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x192B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1988 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D7 DUP3 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x19E1 DUP2 DUP6 PUSH2 0x199F JUMP JUMPDEST SWAP4 POP PUSH2 0x19F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x19FA DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1D DUP2 DUP5 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 DUP3 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x1A48 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7D DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A95 DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB0 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B21 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B49 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B74 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B83 DUP2 PUSH2 0x1A48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C20 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C48 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C74 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C85 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CE6 JUMPI PUSH2 0x1CE5 PUSH2 0x1C8F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D20 PUSH1 0x19 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D4D DUP2 PUSH2 0x1D14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D8B DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D96 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE8 PUSH1 0x15 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1DDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E50 PUSH1 0x1D DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5B DUP3 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7D DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E97 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1EA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB9 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1EAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1E PUSH1 0x16 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F29 DUP3 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4B DUP2 PUSH2 0x1F12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F65 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1F72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1F7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F90 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FAB DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 PUSH1 0x15 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203D DUP2 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204E DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x2059 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2067 DUP2 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x207E JUMPI PUSH2 0x207D PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208F DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x209A DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20DC DUP2 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x20E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2112 DUP2 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x212E DUP2 PUSH2 0x2118 JUMP JUMPDEST DUP2 EQ PUSH2 0x2138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2149 DUP2 PUSH2 0x2125 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2158 DUP2 PUSH2 0x1BF2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2173 DUP2 PUSH2 0x214F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A1 DUP11 DUP3 DUP12 ADD PUSH2 0x20CE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x21B2 DUP11 DUP3 DUP12 ADD PUSH2 0x2104 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x21C3 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x21D4 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x21E5 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x21F6 DUP11 DUP3 DUP12 ADD PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2207 DUP11 DUP3 DUP12 ADD PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x226B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2256 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2264 DUP6 PUSH2 0x2216 JUMP JUMPDEST SWAP5 POP PUSH2 0x222B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2283 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP2 PUSH2 0x2290 JUMPI PUSH0 SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22A6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x22B0 JUMPI PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x233E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST POP PUSH2 0x233E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2314 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST PUSH2 0x233E JUMP JUMPDEST PUSH2 0x2321 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2222 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2338 JUMPI PUSH2 0x2337 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x234F DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x235A DUP4 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 POP PUSH2 0x2387 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23C6 DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D1 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23E1 JUMPI PUSH2 0x23E0 PUSH2 0x238F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23FF PUSH0 DUP4 ADD DUP7 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x240C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x2419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xAB RETURNCONTRACT 0xD4 LOG2 BLOBBASEFEE PUSH32 0x7BE7D8D6F37E07B98B30A82FC06E80F791E8E821AEC808F064736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "337:5813:13:-:0;;;954:713;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1112:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1163:1:13::2;1143:10;:17;:21;1135:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1258:1;1229:31;;:17;:31;;::::0;1221:68:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1333:1;1308:27;;:13;:27;;::::0;1300:61:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1419:9;1431:1;1419:13;;1414:106;1438:10;:17;1434:1;:21;1414:106;;;1504:4;1477:9;:24;1487:10;1498:1;1487:13;;;;;;;;:::i;:::-;;;;;;;;1477:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1457:3;;;;;;;1414:106;;;;1603:17;1584:36;;;;;;;;::::0;::::2;1646:13;1631:28;;;;;;;;::::0;::::2;954:713:::0;;;337:5813;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:866::-;3400:6;3408;3416;3465:2;3453:9;3444:7;3440:23;3436:32;3433:119;;;3471:79;;:::i;:::-;3433:119;3612:1;3601:9;3597:17;3591:24;3642:18;3634:6;3631:30;3628:117;;;3664:79;;:::i;:::-;3628:117;3769:89;3850:7;3841:6;3830:9;3826:22;3769:89;:::i;:::-;3759:99;;3562:306;3907:2;3933:64;3989:7;3980:6;3969:9;3965:22;3933:64;:::i;:::-;3923:74;;3878:129;4046:2;4072:64;4128:7;4119:6;4108:9;4104:22;4072:64;:::i;:::-;4062:74;;4017:129;3287:866;;;;;:::o;4159:99::-;4211:6;4245:5;4239:12;4229:22;;4159:99;;;:::o;4264:180::-;4312:77;4309:1;4302:88;4409:4;4406:1;4399:15;4433:4;4430:1;4423:15;4450:320;4494:6;4531:1;4525:4;4521:12;4511:22;;4578:1;4572:4;4568:12;4599:18;4589:81;;4655:4;4647:6;4643:17;4633:27;;4589:81;4717:2;4709:6;4706:14;4686:18;4683:38;4680:84;;4736:18;;:::i;:::-;4680:84;4501:269;4450:320;;;:::o;4776:141::-;4825:4;4848:3;4840:11;;4871:3;4868:1;4861:14;4905:4;4902:1;4892:18;4884:26;;4776:141;;;:::o;4923:93::-;4960:6;5007:2;5002;4995:5;4991:14;4987:23;4977:33;;4923:93;;;:::o;5022:107::-;5066:8;5116:5;5110:4;5106:16;5085:37;;5022:107;;;;:::o;5135:393::-;5204:6;5254:1;5242:10;5238:18;5277:97;5307:66;5296:9;5277:97;:::i;:::-;5395:39;5425:8;5414:9;5395:39;:::i;:::-;5383:51;;5467:4;5463:9;5456:5;5452:21;5443:30;;5516:4;5506:8;5502:19;5495:5;5492:30;5482:40;;5211:317;;5135:393;;;;;:::o;5534:77::-;5571:7;5600:5;5589:16;;5534:77;;;:::o;5617:60::-;5645:3;5666:5;5659:12;;5617:60;;;:::o;5683:142::-;5733:9;5766:53;5784:34;5793:24;5811:5;5793:24;:::i;:::-;5784:34;:::i;:::-;5766:53;:::i;:::-;5753:66;;5683:142;;;:::o;5831:75::-;5874:3;5895:5;5888:12;;5831:75;;;:::o;5912:269::-;6022:39;6053:7;6022:39;:::i;:::-;6083:91;6132:41;6156:16;6132:41;:::i;:::-;6124:6;6117:4;6111:11;6083:91;:::i;:::-;6077:4;6070:105;5988:193;5912:269;;;:::o;6187:73::-;6232:3;6253:1;6246:8;;6187:73;:::o;6266:189::-;6343:32;;:::i;:::-;6384:65;6442:6;6434;6428:4;6384:65;:::i;:::-;6319:136;6266:189;;:::o;6461:186::-;6521:120;6538:3;6531:5;6528:14;6521:120;;;6592:39;6629:1;6622:5;6592:39;:::i;:::-;6565:1;6558:5;6554:13;6545:22;;6521:120;;;6461:186;;:::o;6653:543::-;6754:2;6749:3;6746:11;6743:446;;;6788:38;6820:5;6788:38;:::i;:::-;6872:29;6890:10;6872:29;:::i;:::-;6862:8;6858:44;7055:2;7043:10;7040:18;7037:49;;;7076:8;7061:23;;7037:49;7099:80;7155:22;7173:3;7155:22;:::i;:::-;7145:8;7141:37;7128:11;7099:80;:::i;:::-;6758:431;;6743:446;6653:543;;;:::o;7202:117::-;7256:8;7306:5;7300:4;7296:16;7275:37;;7202:117;;;;:::o;7325:169::-;7369:6;7402:51;7450:1;7446:6;7438:5;7435:1;7431:13;7402:51;:::i;:::-;7398:56;7483:4;7477;7473:15;7463:25;;7376:118;7325:169;;;;:::o;7499:295::-;7575:4;7721:29;7746:3;7740:4;7721:29;:::i;:::-;7713:37;;7783:3;7780:1;7776:11;7770:4;7767:21;7759:29;;7499:295;;;;:::o;7799:1395::-;7916:37;7949:3;7916:37;:::i;:::-;8018:18;8010:6;8007:30;8004:56;;;8040:18;;:::i;:::-;8004:56;8084:38;8116:4;8110:11;8084:38;:::i;:::-;8169:67;8229:6;8221;8215:4;8169:67;:::i;:::-;8263:1;8287:4;8274:17;;8319:2;8311:6;8308:14;8336:1;8331:618;;;;8993:1;9010:6;9007:77;;;9059:9;9054:3;9050:19;9044:26;9035:35;;9007:77;9110:67;9170:6;9163:5;9110:67;:::i;:::-;9104:4;9097:81;8966:222;8301:887;;8331:618;8383:4;8379:9;8371:6;8367:22;8417:37;8449:4;8417:37;:::i;:::-;8476:1;8490:208;8504:7;8501:1;8498:14;8490:208;;;8583:9;8578:3;8574:19;8568:26;8560:6;8553:42;8634:1;8626:6;8622:14;8612:24;;8681:2;8670:9;8666:18;8653:31;;8527:4;8524:1;8520:12;8515:17;;8490:208;;;8726:6;8717:7;8714:19;8711:179;;;8784:9;8779:3;8775:19;8769:26;8827:48;8869:4;8861:6;8857:17;8846:9;8827:48;:::i;:::-;8819:6;8812:64;8734:156;8711:179;8936:1;8932;8924:6;8920:14;8916:22;8910:4;8903:36;8338:611;;;8301:887;;7891:1303;;;7799:1395;;:::o;9200:118::-;9287:24;9305:5;9287:24;:::i;:::-;9282:3;9275:37;9200:118;;:::o;9324:222::-;9417:4;9455:2;9444:9;9440:18;9432:26;;9468:71;9536:1;9525:9;9521:17;9512:6;9468:71;:::i;:::-;9324:222;;;;:::o;9552:169::-;9636:11;9670:6;9665:3;9658:19;9710:4;9705:3;9701:14;9686:29;;9552:169;;;;:::o;9727:228::-;9867:34;9863:1;9855:6;9851:14;9844:58;9936:11;9931:2;9923:6;9919:15;9912:36;9727:228;:::o;9961:366::-;10103:3;10124:67;10188:2;10183:3;10124:67;:::i;:::-;10117:74;;10200:93;10289:3;10200:93;:::i;:::-;10318:2;10313:3;10309:12;10302:19;;9961:366;;;:::o;10333:419::-;10499:4;10537:2;10526:9;10522:18;10514:26;;10586:9;10580:4;10576:20;10572:1;10561:9;10557:17;10550:47;10614:131;10740:4;10614:131;:::i;:::-;10606:139;;10333:419;;;:::o;10758:174::-;10898:26;10894:1;10886:6;10882:14;10875:50;10758:174;:::o;10938:366::-;11080:3;11101:67;11165:2;11160:3;11101:67;:::i;:::-;11094:74;;11177:93;11266:3;11177:93;:::i;:::-;11295:2;11290:3;11286:12;11279:19;;10938:366;;;:::o;11310:419::-;11476:4;11514:2;11503:9;11499:18;11491:26;;11563:9;11557:4;11553:20;11549:1;11538:9;11534:17;11527:47;11591:131;11717:4;11591:131;:::i;:::-;11583:139;;11310:419;;;:::o;11735:171::-;11875:23;11871:1;11863:6;11859:14;11852:47;11735:171;:::o;11912:366::-;12054:3;12075:67;12139:2;12134:3;12075:67;:::i;:::-;12068:74;;12151:93;12240:3;12151:93;:::i;:::-;12269:2;12264:3;12260:12;12253:19;;11912:366;;;:::o;12284:419::-;12450:4;12488:2;12477:9;12473:18;12465:26;;12537:9;12531:4;12527:20;12523:1;12512:9;12508:17;12501:47;12565:131;12691:4;12565:131;:::i;:::-;12557:139;;12284:419;;;:::o;12709:180::-;12757:77;12754:1;12747:88;12854:4;12851:1;12844:15;12878:4;12875:1;12868:15;337:5813:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MINT_RATIO_1410": {
									"entryPoint": 2936,
									"id": 1410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_1391": {
									"entryPoint": 2535,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 4607,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5162,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4671,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4806,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 4600,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5625,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4933,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5772,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6012,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1500": {
									"entryPoint": 4051,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3825,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1912,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUser_1742": {
									"entryPoint": 1946,
									"id": 1742,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2312,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@compliance_1597": {
									"entryPoint": 2305,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1730": {
									"entryPoint": 2099,
									"id": 1730,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@freezeUser_1528": {
									"entryPoint": 3955,
									"id": 1528,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@frozen_1399": {
									"entryPoint": 3771,
									"id": 1399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentPrice_1777": {
									"entryPoint": 4229,
									"id": 1777,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFrozenTokens_1630": {
									"entryPoint": 1970,
									"id": 1630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@identityRegistry_1585": {
									"entryPoint": 1963,
									"id": 1585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFrozen_1619": {
									"entryPoint": 4147,
									"id": 1619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1721": {
									"entryPoint": 2106,
									"id": 1721,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedAmount_1403": {
									"entryPoint": 2093,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1768,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onchainID_1564": {
									"entryPoint": 2892,
									"id": 1564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2495,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1606": {
									"entryPoint": 2298,
									"id": 1606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingSupply_1552": {
									"entryPoint": 3800,
									"id": 1552,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_1514": {
									"entryPoint": 2400,
									"id": 1514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2381,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2544,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAddress_1407": {
									"entryPoint": 2717,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1979,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferAndMint_1849": {
									"entryPoint": 3036,
									"id": 1849,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferFrom_1693": {
									"entryPoint": 1988,
									"id": 1693,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 4625,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4468,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferReceiver_1405": {
									"entryPoint": 2753,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transfer_1660": {
									"entryPoint": 2789,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 5128,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unfreezeUser_1542": {
									"entryPoint": 2941,
									"id": 1542,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapPool_1401": {
									"entryPoint": 2899,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@version_1573": {
									"entryPoint": 2237,
									"id": 1573,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@whitelist_1395": {
									"entryPoint": 2688,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8820,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 8726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 7708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 8485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 8527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20256:15",
										"nodeType": "YulBlock",
										"src": "0:20256:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "208:73:15",
													"nodeType": "YulBlock",
													"src": "208:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:15"
																},
																"nativeSrc": "218:19:15",
																"nodeType": "YulFunctionCall",
																"src": "218:19:15"
															},
															"nativeSrc": "218:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:15"
														},
														{
															"nativeSrc": "246:29:15",
															"nodeType": "YulAssignment",
															"src": "246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "270:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:15"
																},
																"nativeSrc": "261:14:15",
																"nodeType": "YulFunctionCall",
																"src": "261:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:15",
														"nodeType": "YulTypedName",
														"src": "180:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:15",
														"nodeType": "YulTypedName",
														"src": "185:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:15",
														"nodeType": "YulTypedName",
														"src": "196:11:15",
														"type": ""
													}
												],
												"src": "112:169:15"
											},
											{
												"body": {
													"nativeSrc": "349:77:15",
													"nodeType": "YulBlock",
													"src": "349:77:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:15"
																},
																"nativeSrc": "360:23:15",
																"nodeType": "YulFunctionCall",
																"src": "360:23:15"
															},
															"nativeSrc": "360:23:15",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:15"
																		},
																		"nativeSrc": "399:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:15",
																		"nodeType": "YulLiteral",
																		"src": "417:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:15"
																},
																"nativeSrc": "392:27:15",
																"nodeType": "YulFunctionCall",
																"src": "392:27:15"
															},
															"nativeSrc": "392:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:15",
														"nodeType": "YulTypedName",
														"src": "331:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:15",
														"nodeType": "YulTypedName",
														"src": "336:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:15",
														"nodeType": "YulTypedName",
														"src": "341:6:15",
														"type": ""
													}
												],
												"src": "287:139:15"
											},
											{
												"body": {
													"nativeSrc": "480:54:15",
													"nodeType": "YulBlock",
													"src": "480:54:15",
													"statements": [
														{
															"nativeSrc": "490:38:15",
															"nodeType": "YulAssignment",
															"src": "490:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:15",
																				"nodeType": "YulLiteral",
																				"src": "515:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:15"
																		},
																		"nativeSrc": "504:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:15",
																				"nodeType": "YulLiteral",
																				"src": "524:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:15"
																		},
																		"nativeSrc": "520:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:15"
																},
																"nativeSrc": "500:28:15",
																"nodeType": "YulFunctionCall",
																"src": "500:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:15",
														"nodeType": "YulTypedName",
														"src": "473:6:15",
														"type": ""
													}
												],
												"src": "432:102:15"
											},
											{
												"body": {
													"nativeSrc": "632:285:15",
													"nodeType": "YulBlock",
													"src": "632:285:15",
													"statements": [
														{
															"nativeSrc": "642:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:15"
																},
																"nativeSrc": "656:39:15",
																"nodeType": "YulFunctionCall",
																"src": "656:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:15",
																	"nodeType": "YulTypedName",
																	"src": "646:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:15",
															"nodeType": "YulAssignment",
															"src": "704:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:15"
																},
																"nativeSrc": "711:71:15",
																"nodeType": "YulFunctionCall",
																"src": "711:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:15",
																				"nodeType": "YulLiteral",
																				"src": "837:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:15"
																		},
																		"nativeSrc": "826:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:15"
																},
																"nativeSrc": "791:65:15",
																"nodeType": "YulFunctionCall",
																"src": "791:65:15"
															},
															"nativeSrc": "791:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:15"
														},
														{
															"nativeSrc": "865:46:15",
															"nodeType": "YulAssignment",
															"src": "865:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:15"
																		},
																		"nativeSrc": "881:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:15"
																},
																"nativeSrc": "872:39:15",
																"nodeType": "YulFunctionCall",
																"src": "872:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:15",
														"nodeType": "YulTypedName",
														"src": "613:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:15",
														"nodeType": "YulTypedName",
														"src": "620:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:15",
														"nodeType": "YulTypedName",
														"src": "628:3:15",
														"type": ""
													}
												],
												"src": "540:377:15"
											},
											{
												"body": {
													"nativeSrc": "1041:195:15",
													"nodeType": "YulBlock",
													"src": "1041:195:15",
													"statements": [
														{
															"nativeSrc": "1051:26:15",
															"nodeType": "YulAssignment",
															"src": "1051:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:15"
																},
																"nativeSrc": "1059:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:15"
																		},
																		"nativeSrc": "1094:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:15"
																		},
																		"nativeSrc": "1113:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:15"
																},
																"nativeSrc": "1087:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:15"
															},
															"nativeSrc": "1087:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:15"
														},
														{
															"nativeSrc": "1143:86:15",
															"nodeType": "YulAssignment",
															"src": "1143:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:15"
																},
																"nativeSrc": "1151:78:15",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:15",
														"nodeType": "YulTypedName",
														"src": "1013:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:15",
														"nodeType": "YulTypedName",
														"src": "1025:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:15",
														"nodeType": "YulTypedName",
														"src": "1036:4:15",
														"type": ""
													}
												],
												"src": "923:313:15"
											},
											{
												"body": {
													"nativeSrc": "1282:35:15",
													"nodeType": "YulBlock",
													"src": "1282:35:15",
													"statements": [
														{
															"nativeSrc": "1292:19:15",
															"nodeType": "YulAssignment",
															"src": "1292:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:15"
																},
																"nativeSrc": "1302:9:15",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:15",
														"nodeType": "YulTypedName",
														"src": "1275:6:15",
														"type": ""
													}
												],
												"src": "1242:75:15"
											},
											{
												"body": {
													"nativeSrc": "1412:28:15",
													"nodeType": "YulBlock",
													"src": "1412:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:15"
																},
																"nativeSrc": "1422:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:15"
															},
															"nativeSrc": "1422:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:15"
											},
											{
												"body": {
													"nativeSrc": "1535:28:15",
													"nodeType": "YulBlock",
													"src": "1535:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:15"
																},
																"nativeSrc": "1545:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:15"
															},
															"nativeSrc": "1545:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:15"
											},
											{
												"body": {
													"nativeSrc": "1614:81:15",
													"nodeType": "YulBlock",
													"src": "1614:81:15",
													"statements": [
														{
															"nativeSrc": "1624:65:15",
															"nodeType": "YulAssignment",
															"src": "1624:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:15"
																},
																"nativeSrc": "1635:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:15",
														"nodeType": "YulTypedName",
														"src": "1596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:15",
														"nodeType": "YulTypedName",
														"src": "1606:7:15",
														"type": ""
													}
												],
												"src": "1569:126:15"
											},
											{
												"body": {
													"nativeSrc": "1746:51:15",
													"nodeType": "YulBlock",
													"src": "1746:51:15",
													"statements": [
														{
															"nativeSrc": "1756:35:15",
															"nodeType": "YulAssignment",
															"src": "1756:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:15"
																},
																"nativeSrc": "1767:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:15",
														"nodeType": "YulTypedName",
														"src": "1728:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:15",
														"nodeType": "YulTypedName",
														"src": "1738:7:15",
														"type": ""
													}
												],
												"src": "1701:96:15"
											},
											{
												"body": {
													"nativeSrc": "1846:79:15",
													"nodeType": "YulBlock",
													"src": "1846:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:15",
																"nodeType": "YulBlock",
																"src": "1903:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:15"
																			},
																			"nativeSrc": "1905:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:15"
																		},
																		"nativeSrc": "1905:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:15"
																				},
																				"nativeSrc": "1876:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:15"
																		},
																		"nativeSrc": "1866:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:15"
																},
																"nativeSrc": "1859:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:15"
															},
															"nativeSrc": "1856:63:15",
															"nodeType": "YulIf",
															"src": "1856:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:15",
														"nodeType": "YulTypedName",
														"src": "1839:5:15",
														"type": ""
													}
												],
												"src": "1803:122:15"
											},
											{
												"body": {
													"nativeSrc": "1983:87:15",
													"nodeType": "YulBlock",
													"src": "1983:87:15",
													"statements": [
														{
															"nativeSrc": "1993:29:15",
															"nodeType": "YulAssignment",
															"src": "1993:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:15"
																},
																"nativeSrc": "2002:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:15"
																},
																"nativeSrc": "2031:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:15"
															},
															"nativeSrc": "2031:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:15",
														"nodeType": "YulTypedName",
														"src": "1961:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:15",
														"nodeType": "YulTypedName",
														"src": "1969:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:15",
														"nodeType": "YulTypedName",
														"src": "1977:5:15",
														"type": ""
													}
												],
												"src": "1931:139:15"
											},
											{
												"body": {
													"nativeSrc": "2121:32:15",
													"nodeType": "YulBlock",
													"src": "2121:32:15",
													"statements": [
														{
															"nativeSrc": "2131:16:15",
															"nodeType": "YulAssignment",
															"src": "2131:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:15",
																"nodeType": "YulIdentifier",
																"src": "2142:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:15",
														"nodeType": "YulTypedName",
														"src": "2103:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:15",
														"nodeType": "YulTypedName",
														"src": "2113:7:15",
														"type": ""
													}
												],
												"src": "2076:77:15"
											},
											{
												"body": {
													"nativeSrc": "2202:79:15",
													"nodeType": "YulBlock",
													"src": "2202:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:15",
																"nodeType": "YulBlock",
																"src": "2259:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:15"
																			},
																			"nativeSrc": "2261:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:15"
																		},
																		"nativeSrc": "2261:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:15"
																				},
																				"nativeSrc": "2232:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:15"
																		},
																		"nativeSrc": "2222:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:15"
																},
																"nativeSrc": "2215:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:15"
															},
															"nativeSrc": "2212:63:15",
															"nodeType": "YulIf",
															"src": "2212:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:15",
														"nodeType": "YulTypedName",
														"src": "2195:5:15",
														"type": ""
													}
												],
												"src": "2159:122:15"
											},
											{
												"body": {
													"nativeSrc": "2339:87:15",
													"nodeType": "YulBlock",
													"src": "2339:87:15",
													"statements": [
														{
															"nativeSrc": "2349:29:15",
															"nodeType": "YulAssignment",
															"src": "2349:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:15"
																},
																"nativeSrc": "2358:20:15",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:15"
																},
																"nativeSrc": "2387:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:15"
															},
															"nativeSrc": "2387:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:15",
														"nodeType": "YulTypedName",
														"src": "2317:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:15",
														"nodeType": "YulTypedName",
														"src": "2325:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:15",
														"nodeType": "YulTypedName",
														"src": "2333:5:15",
														"type": ""
													}
												],
												"src": "2287:139:15"
											},
											{
												"body": {
													"nativeSrc": "2515:391:15",
													"nodeType": "YulBlock",
													"src": "2515:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:15",
																"nodeType": "YulBlock",
																"src": "2561:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:15"
																			},
																			"nativeSrc": "2563:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:15"
																		},
																		"nativeSrc": "2563:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:15"
																		},
																		"nativeSrc": "2532:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:15"
																},
																"nativeSrc": "2528:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:15"
															},
															"nativeSrc": "2525:119:15",
															"nodeType": "YulIf",
															"src": "2525:119:15"
														},
														{
															"nativeSrc": "2654:117:15",
															"nodeType": "YulBlock",
															"src": "2654:117:15",
															"statements": [
																{
																	"nativeSrc": "2669:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:15"
																				},
																				"nativeSrc": "2729:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:15"
																		},
																		"nativeSrc": "2708:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:15",
															"nodeType": "YulBlock",
															"src": "2781:118:15",
															"statements": [
																{
																	"nativeSrc": "2796:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:15",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:15",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:15"
																				},
																				"nativeSrc": "2857:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:15"
																		},
																		"nativeSrc": "2836:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:15",
														"nodeType": "YulTypedName",
														"src": "2477:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:15",
														"nodeType": "YulTypedName",
														"src": "2488:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:15",
														"nodeType": "YulTypedName",
														"src": "2500:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:15",
														"nodeType": "YulTypedName",
														"src": "2508:6:15",
														"type": ""
													}
												],
												"src": "2432:474:15"
											},
											{
												"body": {
													"nativeSrc": "2954:48:15",
													"nodeType": "YulBlock",
													"src": "2954:48:15",
													"statements": [
														{
															"nativeSrc": "2964:32:15",
															"nodeType": "YulAssignment",
															"src": "2964:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:15"
																		},
																		"nativeSrc": "2982:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:15"
																},
																"nativeSrc": "2975:21:15",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:15",
														"nodeType": "YulTypedName",
														"src": "2936:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:15",
														"nodeType": "YulTypedName",
														"src": "2946:7:15",
														"type": ""
													}
												],
												"src": "2912:90:15"
											},
											{
												"body": {
													"nativeSrc": "3067:50:15",
													"nodeType": "YulBlock",
													"src": "3067:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:15"
																		},
																		"nativeSrc": "3089:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:15"
																},
																"nativeSrc": "3077:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:15"
															},
															"nativeSrc": "3077:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:15",
														"nodeType": "YulTypedName",
														"src": "3055:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:15",
														"nodeType": "YulTypedName",
														"src": "3062:3:15",
														"type": ""
													}
												],
												"src": "3008:109:15"
											},
											{
												"body": {
													"nativeSrc": "3215:118:15",
													"nodeType": "YulBlock",
													"src": "3215:118:15",
													"statements": [
														{
															"nativeSrc": "3225:26:15",
															"nodeType": "YulAssignment",
															"src": "3225:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:15"
																},
																"nativeSrc": "3233:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:15"
																		},
																		"nativeSrc": "3308:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:15"
																},
																"nativeSrc": "3261:65:15",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:15"
															},
															"nativeSrc": "3261:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:15",
														"nodeType": "YulTypedName",
														"src": "3187:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:15",
														"nodeType": "YulTypedName",
														"src": "3199:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:15",
														"nodeType": "YulTypedName",
														"src": "3210:4:15",
														"type": ""
													}
												],
												"src": "3123:210:15"
											},
											{
												"body": {
													"nativeSrc": "3405:263:15",
													"nodeType": "YulBlock",
													"src": "3405:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:15",
																"nodeType": "YulBlock",
																"src": "3451:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:15"
																			},
																			"nativeSrc": "3453:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:15"
																		},
																		"nativeSrc": "3453:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:15"
																		},
																		"nativeSrc": "3422:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:15"
																},
																"nativeSrc": "3418:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:15"
															},
															"nativeSrc": "3415:119:15",
															"nodeType": "YulIf",
															"src": "3415:119:15"
														},
														{
															"nativeSrc": "3544:117:15",
															"nodeType": "YulBlock",
															"src": "3544:117:15",
															"statements": [
																{
																	"nativeSrc": "3559:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:15"
																				},
																				"nativeSrc": "3619:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:15"
																		},
																		"nativeSrc": "3598:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:15",
														"nodeType": "YulTypedName",
														"src": "3375:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:15",
														"nodeType": "YulTypedName",
														"src": "3386:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:15",
														"nodeType": "YulTypedName",
														"src": "3398:6:15",
														"type": ""
													}
												],
												"src": "3339:329:15"
											},
											{
												"body": {
													"nativeSrc": "3739:53:15",
													"nodeType": "YulBlock",
													"src": "3739:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:15"
																		},
																		"nativeSrc": "3761:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:15"
																},
																"nativeSrc": "3749:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:15"
															},
															"nativeSrc": "3749:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:15",
														"nodeType": "YulTypedName",
														"src": "3727:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:15",
														"nodeType": "YulTypedName",
														"src": "3734:3:15",
														"type": ""
													}
												],
												"src": "3674:118:15"
											},
											{
												"body": {
													"nativeSrc": "3896:124:15",
													"nodeType": "YulBlock",
													"src": "3896:124:15",
													"statements": [
														{
															"nativeSrc": "3906:26:15",
															"nodeType": "YulAssignment",
															"src": "3906:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:15"
																},
																"nativeSrc": "3914:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:15"
																		},
																		"nativeSrc": "3995:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:15"
																},
																"nativeSrc": "3942:71:15",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:15"
															},
															"nativeSrc": "3942:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:15",
														"nodeType": "YulTypedName",
														"src": "3868:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:15",
														"nodeType": "YulTypedName",
														"src": "3880:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:15",
														"nodeType": "YulTypedName",
														"src": "3891:4:15",
														"type": ""
													}
												],
												"src": "3798:222:15"
											},
											{
												"body": {
													"nativeSrc": "4091:53:15",
													"nodeType": "YulBlock",
													"src": "4091:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4108:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4113:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "4113:17:15"
																		},
																		"nativeSrc": "4113:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4101:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:15"
																},
																"nativeSrc": "4101:37:15",
																"nodeType": "YulFunctionCall",
																"src": "4101:37:15"
															},
															"nativeSrc": "4101:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "4101:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4026:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4079:5:15",
														"nodeType": "YulTypedName",
														"src": "4079:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4086:3:15",
														"nodeType": "YulTypedName",
														"src": "4086:3:15",
														"type": ""
													}
												],
												"src": "4026:118:15"
											},
											{
												"body": {
													"nativeSrc": "4248:124:15",
													"nodeType": "YulBlock",
													"src": "4248:124:15",
													"statements": [
														{
															"nativeSrc": "4258:26:15",
															"nodeType": "YulAssignment",
															"src": "4258:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:15"
																},
																"nativeSrc": "4266:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4362:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4362:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:15"
																		},
																		"nativeSrc": "4347:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4294:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:15"
																},
																"nativeSrc": "4294:71:15",
																"nodeType": "YulFunctionCall",
																"src": "4294:71:15"
															},
															"nativeSrc": "4294:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "4294:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4150:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4220:9:15",
														"nodeType": "YulTypedName",
														"src": "4220:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4232:6:15",
														"nodeType": "YulTypedName",
														"src": "4232:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4243:4:15",
														"nodeType": "YulTypedName",
														"src": "4243:4:15",
														"type": ""
													}
												],
												"src": "4150:222:15"
											},
											{
												"body": {
													"nativeSrc": "4478:519:15",
													"nodeType": "YulBlock",
													"src": "4478:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4524:83:15",
																"nodeType": "YulBlock",
																"src": "4524:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4526:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4526:77:15"
																			},
																			"nativeSrc": "4526:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:79:15"
																		},
																		"nativeSrc": "4526:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4499:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4499:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:15"
																		},
																		"nativeSrc": "4495:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4520:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4520:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4491:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:15"
																},
																"nativeSrc": "4491:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4491:32:15"
															},
															"nativeSrc": "4488:119:15",
															"nodeType": "YulIf",
															"src": "4488:119:15"
														},
														{
															"nativeSrc": "4617:117:15",
															"nodeType": "YulBlock",
															"src": "4617:117:15",
															"statements": [
																{
																	"nativeSrc": "4632:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4632:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4646:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4646:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4636:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4636:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4661:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4661:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4707:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:15"
																				},
																				"nativeSrc": "4692:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4716:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4716:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4671:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4671:20:15"
																		},
																		"nativeSrc": "4671:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4661:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4661:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4744:118:15",
															"nodeType": "YulBlock",
															"src": "4744:118:15",
															"statements": [
																{
																	"nativeSrc": "4759:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4759:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4773:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4773:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4763:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4763:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4789:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4789:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4824:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4824:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4835:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4835:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4820:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:15"
																				},
																				"nativeSrc": "4820:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4820:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4844:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4799:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4799:20:15"
																		},
																		"nativeSrc": "4799:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4799:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4789:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4789:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4872:118:15",
															"nodeType": "YulBlock",
															"src": "4872:118:15",
															"statements": [
																{
																	"nativeSrc": "4887:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4887:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4901:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4901:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4891:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4891:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:15"
																				},
																				"nativeSrc": "4948:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:15"
																		},
																		"nativeSrc": "4927:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4917:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4378:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4432:9:15",
														"nodeType": "YulTypedName",
														"src": "4432:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4443:7:15",
														"nodeType": "YulTypedName",
														"src": "4443:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4455:6:15",
														"nodeType": "YulTypedName",
														"src": "4455:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4463:6:15",
														"nodeType": "YulTypedName",
														"src": "4463:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4471:6:15",
														"nodeType": "YulTypedName",
														"src": "4471:6:15",
														"type": ""
													}
												],
												"src": "4378:619:15"
											},
											{
												"body": {
													"nativeSrc": "5046:43:15",
													"nodeType": "YulBlock",
													"src": "5046:43:15",
													"statements": [
														{
															"nativeSrc": "5056:27:15",
															"nodeType": "YulAssignment",
															"src": "5056:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5071:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5071:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5078:4:15",
																		"nodeType": "YulLiteral",
																		"src": "5078:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5067:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:15"
																},
																"nativeSrc": "5067:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5067:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5056:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "5056:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5003:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5028:5:15",
														"nodeType": "YulTypedName",
														"src": "5028:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5038:7:15",
														"nodeType": "YulTypedName",
														"src": "5038:7:15",
														"type": ""
													}
												],
												"src": "5003:86:15"
											},
											{
												"body": {
													"nativeSrc": "5156:51:15",
													"nodeType": "YulBlock",
													"src": "5156:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5194:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5194:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5178:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "5178:15:15"
																		},
																		"nativeSrc": "5178:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5178:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5166:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:15"
																},
																"nativeSrc": "5166:35:15",
																"nodeType": "YulFunctionCall",
																"src": "5166:35:15"
															},
															"nativeSrc": "5166:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "5166:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5095:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5144:5:15",
														"nodeType": "YulTypedName",
														"src": "5144:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5151:3:15",
														"nodeType": "YulTypedName",
														"src": "5151:3:15",
														"type": ""
													}
												],
												"src": "5095:112:15"
											},
											{
												"body": {
													"nativeSrc": "5307:120:15",
													"nodeType": "YulBlock",
													"src": "5307:120:15",
													"statements": [
														{
															"nativeSrc": "5317:26:15",
															"nodeType": "YulAssignment",
															"src": "5317:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5329:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5329:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5340:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5325:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5325:3:15"
																},
																"nativeSrc": "5325:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5325:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5317:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5317:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:15"
																		},
																		"nativeSrc": "5402:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5353:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "5353:39:15"
																},
																"nativeSrc": "5353:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5353:67:15"
															},
															"nativeSrc": "5353:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "5353:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5213:214:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:15",
														"nodeType": "YulTypedName",
														"src": "5279:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5291:6:15",
														"nodeType": "YulTypedName",
														"src": "5291:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5302:4:15",
														"nodeType": "YulTypedName",
														"src": "5302:4:15",
														"type": ""
													}
												],
												"src": "5213:214:15"
											},
											{
												"body": {
													"nativeSrc": "5499:263:15",
													"nodeType": "YulBlock",
													"src": "5499:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:15",
																"nodeType": "YulBlock",
																"src": "5545:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:15"
																			},
																			"nativeSrc": "5547:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:15"
																		},
																		"nativeSrc": "5547:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:15"
																		},
																		"nativeSrc": "5516:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:15"
																},
																"nativeSrc": "5512:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:15"
															},
															"nativeSrc": "5509:119:15",
															"nodeType": "YulIf",
															"src": "5509:119:15"
														},
														{
															"nativeSrc": "5638:117:15",
															"nodeType": "YulBlock",
															"src": "5638:117:15",
															"statements": [
																{
																	"nativeSrc": "5653:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:15"
																				},
																				"nativeSrc": "5713:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:15"
																		},
																		"nativeSrc": "5692:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:15",
														"nodeType": "YulTypedName",
														"src": "5469:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:15",
														"nodeType": "YulTypedName",
														"src": "5480:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:15",
														"nodeType": "YulTypedName",
														"src": "5492:6:15",
														"type": ""
													}
												],
												"src": "5433:329:15"
											},
											{
												"body": {
													"nativeSrc": "5851:391:15",
													"nodeType": "YulBlock",
													"src": "5851:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:15",
																"nodeType": "YulBlock",
																"src": "5897:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:15"
																			},
																			"nativeSrc": "5899:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:15"
																		},
																		"nativeSrc": "5899:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:15"
																		},
																		"nativeSrc": "5868:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:15"
																},
																"nativeSrc": "5864:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:15"
															},
															"nativeSrc": "5861:119:15",
															"nodeType": "YulIf",
															"src": "5861:119:15"
														},
														{
															"nativeSrc": "5990:117:15",
															"nodeType": "YulBlock",
															"src": "5990:117:15",
															"statements": [
																{
																	"nativeSrc": "6005:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:15"
																				},
																				"nativeSrc": "6065:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:15"
																		},
																		"nativeSrc": "6044:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:15",
															"nodeType": "YulBlock",
															"src": "6117:118:15",
															"statements": [
																{
																	"nativeSrc": "6132:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:15"
																				},
																				"nativeSrc": "6193:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:15"
																		},
																		"nativeSrc": "6172:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:15",
														"nodeType": "YulTypedName",
														"src": "5813:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:15",
														"nodeType": "YulTypedName",
														"src": "5824:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:15",
														"nodeType": "YulTypedName",
														"src": "5836:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:15",
														"nodeType": "YulTypedName",
														"src": "5844:6:15",
														"type": ""
													}
												],
												"src": "5768:474:15"
											},
											{
												"body": {
													"nativeSrc": "6276:152:15",
													"nodeType": "YulBlock",
													"src": "6276:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:15",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:15"
																},
																"nativeSrc": "6286:88:15",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:15"
															},
															"nativeSrc": "6286:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:15"
																},
																"nativeSrc": "6383:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:15"
															},
															"nativeSrc": "6383:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:15"
																},
																"nativeSrc": "6407:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:15"
															},
															"nativeSrc": "6407:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:15"
											},
											{
												"body": {
													"nativeSrc": "6485:269:15",
													"nodeType": "YulBlock",
													"src": "6485:269:15",
													"statements": [
														{
															"nativeSrc": "6495:22:15",
															"nodeType": "YulAssignment",
															"src": "6495:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:15"
																},
																"nativeSrc": "6505:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:15"
																}
															]
														},
														{
															"nativeSrc": "6526:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:15"
																},
																"nativeSrc": "6552:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:15",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:15",
																"nodeType": "YulBlock",
																"src": "6603:51:15",
																"statements": [
																	{
																		"nativeSrc": "6617:27:15",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:15"
																			},
																			"nativeSrc": "6627:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:15"
																},
																"nativeSrc": "6576:26:15",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:15"
															},
															"nativeSrc": "6573:81:15",
															"nodeType": "YulIf",
															"src": "6573:81:15"
														},
														{
															"body": {
																"nativeSrc": "6706:42:15",
																"nodeType": "YulBlock",
																"src": "6706:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:15"
																			},
																			"nativeSrc": "6720:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:15"
																		},
																		"nativeSrc": "6720:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:15"
																		},
																		"nativeSrc": "6690:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:15"
																},
																"nativeSrc": "6667:38:15",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:15"
															},
															"nativeSrc": "6664:84:15",
															"nodeType": "YulIf",
															"src": "6664:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:15",
														"nodeType": "YulTypedName",
														"src": "6469:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:15",
														"nodeType": "YulTypedName",
														"src": "6478:6:15",
														"type": ""
													}
												],
												"src": "6434:320:15"
											},
											{
												"body": {
													"nativeSrc": "6866:69:15",
													"nodeType": "YulBlock",
													"src": "6866:69:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:15"
																		},
																		"nativeSrc": "6884:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:15"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
																		"kind": "string",
																		"nativeSrc": "6900:27:15",
																		"nodeType": "YulLiteral",
																		"src": "6900:27:15",
																		"type": "",
																		"value": "Amount must be an integer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:15"
																},
																"nativeSrc": "6877:51:15",
																"nodeType": "YulFunctionCall",
																"src": "6877:51:15"
															},
															"nativeSrc": "6877:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "6877:51:15"
														}
													]
												},
												"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
												"nativeSrc": "6760:175:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:15",
														"nodeType": "YulTypedName",
														"src": "6858:6:15",
														"type": ""
													}
												],
												"src": "6760:175:15"
											},
											{
												"body": {
													"nativeSrc": "7087:220:15",
													"nodeType": "YulBlock",
													"src": "7087:220:15",
													"statements": [
														{
															"nativeSrc": "7097:74:15",
															"nodeType": "YulAssignment",
															"src": "7097:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7163:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7168:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7168:2:15",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7104:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "7104:58:15"
																},
																"nativeSrc": "7104:67:15",
																"nodeType": "YulFunctionCall",
																"src": "7104:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7097:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7269:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7269:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																	"nativeSrc": "7180:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "7180:88:15"
																},
																"nativeSrc": "7180:93:15",
																"nodeType": "YulFunctionCall",
																"src": "7180:93:15"
															},
															"nativeSrc": "7180:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "7180:93:15"
														},
														{
															"nativeSrc": "7282:19:15",
															"nodeType": "YulAssignment",
															"src": "7282:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7293:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7293:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7298:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7289:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7289:3:15"
																},
																"nativeSrc": "7289:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7289:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7282:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6941:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7075:3:15",
														"nodeType": "YulTypedName",
														"src": "7075:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7083:3:15",
														"nodeType": "YulTypedName",
														"src": "7083:3:15",
														"type": ""
													}
												],
												"src": "6941:366:15"
											},
											{
												"body": {
													"nativeSrc": "7484:248:15",
													"nodeType": "YulBlock",
													"src": "7484:248:15",
													"statements": [
														{
															"nativeSrc": "7494:26:15",
															"nodeType": "YulAssignment",
															"src": "7494:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7506:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7506:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7517:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7502:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7502:3:15"
																},
																"nativeSrc": "7502:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7502:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7494:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7494:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7541:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7552:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7552:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7537:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7537:3:15"
																		},
																		"nativeSrc": "7537:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7537:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7560:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7560:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7566:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7566:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7556:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7556:3:15"
																		},
																		"nativeSrc": "7556:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7556:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7530:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7530:6:15"
																},
																"nativeSrc": "7530:47:15",
																"nodeType": "YulFunctionCall",
																"src": "7530:47:15"
															},
															"nativeSrc": "7530:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "7530:47:15"
														},
														{
															"nativeSrc": "7586:139:15",
															"nodeType": "YulAssignment",
															"src": "7586:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7720:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7720:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7594:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "7594:124:15"
																},
																"nativeSrc": "7594:131:15",
																"nodeType": "YulFunctionCall",
																"src": "7594:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7586:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7586:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7313:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7464:9:15",
														"nodeType": "YulTypedName",
														"src": "7464:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7479:4:15",
														"nodeType": "YulTypedName",
														"src": "7479:4:15",
														"type": ""
													}
												],
												"src": "7313:419:15"
											},
											{
												"body": {
													"nativeSrc": "7766:152:15",
													"nodeType": "YulBlock",
													"src": "7766:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7783:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7783:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7786:77:15",
																		"nodeType": "YulLiteral",
																		"src": "7786:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7776:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7776:6:15"
																},
																"nativeSrc": "7776:88:15",
																"nodeType": "YulFunctionCall",
																"src": "7776:88:15"
															},
															"nativeSrc": "7776:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "7776:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7880:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7880:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7883:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7873:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7873:6:15"
																},
																"nativeSrc": "7873:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7873:15:15"
															},
															"nativeSrc": "7873:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7873:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7904:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7904:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7907:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7907:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7897:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:15"
																},
																"nativeSrc": "7897:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7897:15:15"
															},
															"nativeSrc": "7897:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7897:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7738:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7738:180:15"
											},
											{
												"body": {
													"nativeSrc": "7968:147:15",
													"nodeType": "YulBlock",
													"src": "7968:147:15",
													"statements": [
														{
															"nativeSrc": "7978:25:15",
															"nodeType": "YulAssignment",
															"src": "7978:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8001:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8001:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7983:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "7983:17:15"
																},
																"nativeSrc": "7983:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7983:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7978:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "7978:1:15"
																}
															]
														},
														{
															"nativeSrc": "8012:25:15",
															"nodeType": "YulAssignment",
															"src": "8012:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8035:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8035:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8017:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "8017:17:15"
																},
																"nativeSrc": "8017:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8017:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8012:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "8012:1:15"
																}
															]
														},
														{
															"nativeSrc": "8046:16:15",
															"nodeType": "YulAssignment",
															"src": "8046:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8057:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8057:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8060:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8060:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8053:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8053:3:15"
																},
																"nativeSrc": "8053:9:15",
																"nodeType": "YulFunctionCall",
																"src": "8053:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8046:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8046:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8086:22:15",
																"nodeType": "YulBlock",
																"src": "8086:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8088:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "8088:16:15"
																			},
																			"nativeSrc": "8088:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8088:18:15"
																		},
																		"nativeSrc": "8088:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8088:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8078:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8078:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8081:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8081:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8075:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8075:2:15"
																},
																"nativeSrc": "8075:10:15",
																"nodeType": "YulFunctionCall",
																"src": "8075:10:15"
															},
															"nativeSrc": "8072:36:15",
															"nodeType": "YulIf",
															"src": "8072:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7924:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7955:1:15",
														"nodeType": "YulTypedName",
														"src": "7955:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7958:1:15",
														"nodeType": "YulTypedName",
														"src": "7958:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7964:3:15",
														"nodeType": "YulTypedName",
														"src": "7964:3:15",
														"type": ""
													}
												],
												"src": "7924:191:15"
											},
											{
												"body": {
													"nativeSrc": "8227:65:15",
													"nodeType": "YulBlock",
													"src": "8227:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8249:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8249:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8257:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8257:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8245:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:15"
																		},
																		"nativeSrc": "8245:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8245:14:15"
																	},
																	{
																		"hexValue": "546f74616c20737570706c79206578636565646564",
																		"kind": "string",
																		"nativeSrc": "8261:23:15",
																		"nodeType": "YulLiteral",
																		"src": "8261:23:15",
																		"type": "",
																		"value": "Total supply exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8238:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8238:6:15"
																},
																"nativeSrc": "8238:47:15",
																"nodeType": "YulFunctionCall",
																"src": "8238:47:15"
															},
															"nativeSrc": "8238:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "8238:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
												"nativeSrc": "8121:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8219:6:15",
														"nodeType": "YulTypedName",
														"src": "8219:6:15",
														"type": ""
													}
												],
												"src": "8121:171:15"
											},
											{
												"body": {
													"nativeSrc": "8444:220:15",
													"nodeType": "YulBlock",
													"src": "8444:220:15",
													"statements": [
														{
															"nativeSrc": "8454:74:15",
															"nodeType": "YulAssignment",
															"src": "8454:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8520:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8520:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8525:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8525:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8461:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "8461:58:15"
																},
																"nativeSrc": "8461:67:15",
																"nodeType": "YulFunctionCall",
																"src": "8461:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8454:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8454:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8626:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8626:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																	"nativeSrc": "8537:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "8537:88:15"
																},
																"nativeSrc": "8537:93:15",
																"nodeType": "YulFunctionCall",
																"src": "8537:93:15"
															},
															"nativeSrc": "8537:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "8537:93:15"
														},
														{
															"nativeSrc": "8639:19:15",
															"nodeType": "YulAssignment",
															"src": "8639:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8650:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8650:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8655:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8655:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8646:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8646:3:15"
																},
																"nativeSrc": "8646:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8646:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8639:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8639:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8298:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8432:3:15",
														"nodeType": "YulTypedName",
														"src": "8432:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8440:3:15",
														"nodeType": "YulTypedName",
														"src": "8440:3:15",
														"type": ""
													}
												],
												"src": "8298:366:15"
											},
											{
												"body": {
													"nativeSrc": "8841:248:15",
													"nodeType": "YulBlock",
													"src": "8841:248:15",
													"statements": [
														{
															"nativeSrc": "8851:26:15",
															"nodeType": "YulAssignment",
															"src": "8851:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8863:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8863:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8874:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8874:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8859:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8859:3:15"
																},
																"nativeSrc": "8859:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8859:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8851:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8898:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8909:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8909:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:15"
																		},
																		"nativeSrc": "8894:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8917:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8917:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8913:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8913:3:15"
																		},
																		"nativeSrc": "8913:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8887:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:15"
																},
																"nativeSrc": "8887:47:15",
																"nodeType": "YulFunctionCall",
																"src": "8887:47:15"
															},
															"nativeSrc": "8887:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "8887:47:15"
														},
														{
															"nativeSrc": "8943:139:15",
															"nodeType": "YulAssignment",
															"src": "8943:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9077:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9077:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8951:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "8951:124:15"
																},
																"nativeSrc": "8951:131:15",
																"nodeType": "YulFunctionCall",
																"src": "8951:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8943:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8943:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8670:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8821:9:15",
														"nodeType": "YulTypedName",
														"src": "8821:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8836:4:15",
														"nodeType": "YulTypedName",
														"src": "8836:4:15",
														"type": ""
													}
												],
												"src": "8670:419:15"
											},
											{
												"body": {
													"nativeSrc": "9201:73:15",
													"nodeType": "YulBlock",
													"src": "9201:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9223:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9223:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9231:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9231:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9219:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9219:3:15"
																		},
																		"nativeSrc": "9219:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9219:14:15"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "9235:31:15",
																		"nodeType": "YulLiteral",
																		"src": "9235:31:15",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:15"
																},
																"nativeSrc": "9212:55:15",
																"nodeType": "YulFunctionCall",
																"src": "9212:55:15"
															},
															"nativeSrc": "9212:55:15",
															"nodeType": "YulExpressionStatement",
															"src": "9212:55:15"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "9095:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9193:6:15",
														"nodeType": "YulTypedName",
														"src": "9193:6:15",
														"type": ""
													}
												],
												"src": "9095:179:15"
											},
											{
												"body": {
													"nativeSrc": "9426:220:15",
													"nodeType": "YulBlock",
													"src": "9426:220:15",
													"statements": [
														{
															"nativeSrc": "9436:74:15",
															"nodeType": "YulAssignment",
															"src": "9436:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9502:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9502:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9507:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:15",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9443:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "9443:58:15"
																},
																"nativeSrc": "9443:67:15",
																"nodeType": "YulFunctionCall",
																"src": "9443:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9436:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9436:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9608:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9608:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "9519:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "9519:88:15"
																},
																"nativeSrc": "9519:93:15",
																"nodeType": "YulFunctionCall",
																"src": "9519:93:15"
															},
															"nativeSrc": "9519:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "9519:93:15"
														},
														{
															"nativeSrc": "9621:19:15",
															"nodeType": "YulAssignment",
															"src": "9621:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9632:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9632:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9637:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9637:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9628:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9628:3:15"
																},
																"nativeSrc": "9628:12:15",
																"nodeType": "YulFunctionCall",
																"src": "9628:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9621:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9280:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9414:3:15",
														"nodeType": "YulTypedName",
														"src": "9414:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9422:3:15",
														"nodeType": "YulTypedName",
														"src": "9422:3:15",
														"type": ""
													}
												],
												"src": "9280:366:15"
											},
											{
												"body": {
													"nativeSrc": "9823:248:15",
													"nodeType": "YulBlock",
													"src": "9823:248:15",
													"statements": [
														{
															"nativeSrc": "9833:26:15",
															"nodeType": "YulAssignment",
															"src": "9833:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9845:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9845:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9856:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9856:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9841:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:15"
																},
																"nativeSrc": "9841:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9841:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9833:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9833:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9880:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9880:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9891:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9891:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9876:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9876:3:15"
																		},
																		"nativeSrc": "9876:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9876:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9899:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9899:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9905:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9905:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9895:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9895:3:15"
																		},
																		"nativeSrc": "9895:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9895:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9869:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:15"
																},
																"nativeSrc": "9869:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9869:47:15"
															},
															"nativeSrc": "9869:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9869:47:15"
														},
														{
															"nativeSrc": "9925:139:15",
															"nodeType": "YulAssignment",
															"src": "9925:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10059:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10059:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9933:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "9933:124:15"
																},
																"nativeSrc": "9933:131:15",
																"nodeType": "YulFunctionCall",
																"src": "9933:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9925:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9925:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9652:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9803:9:15",
														"nodeType": "YulTypedName",
														"src": "9803:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9818:4:15",
														"nodeType": "YulTypedName",
														"src": "9818:4:15",
														"type": ""
													}
												],
												"src": "9652:419:15"
											},
											{
												"body": {
													"nativeSrc": "10203:206:15",
													"nodeType": "YulBlock",
													"src": "10203:206:15",
													"statements": [
														{
															"nativeSrc": "10213:26:15",
															"nodeType": "YulAssignment",
															"src": "10213:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10225:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10225:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10236:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10221:3:15"
																},
																"nativeSrc": "10221:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10221:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10213:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10213:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10293:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10293:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10306:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10317:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10317:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10302:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:15"
																		},
																		"nativeSrc": "10302:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10302:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10249:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10249:43:15"
																},
																"nativeSrc": "10249:71:15",
																"nodeType": "YulFunctionCall",
																"src": "10249:71:15"
															},
															"nativeSrc": "10249:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "10249:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10374:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10374:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10387:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10398:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10398:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10383:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:15"
																		},
																		"nativeSrc": "10383:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10383:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10330:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10330:43:15"
																},
																"nativeSrc": "10330:72:15",
																"nodeType": "YulFunctionCall",
																"src": "10330:72:15"
															},
															"nativeSrc": "10330:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "10330:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "10077:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10167:9:15",
														"nodeType": "YulTypedName",
														"src": "10167:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10179:6:15",
														"nodeType": "YulTypedName",
														"src": "10179:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10187:6:15",
														"nodeType": "YulTypedName",
														"src": "10187:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10198:4:15",
														"nodeType": "YulTypedName",
														"src": "10198:4:15",
														"type": ""
													}
												],
												"src": "10077:332:15"
											},
											{
												"body": {
													"nativeSrc": "10478:80:15",
													"nodeType": "YulBlock",
													"src": "10478:80:15",
													"statements": [
														{
															"nativeSrc": "10488:22:15",
															"nodeType": "YulAssignment",
															"src": "10488:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10503:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10503:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10497:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10497:5:15"
																},
																"nativeSrc": "10497:13:15",
																"nodeType": "YulFunctionCall",
																"src": "10497:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10488:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10488:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10546:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10546:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10519:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "10519:26:15"
																},
																"nativeSrc": "10519:33:15",
																"nodeType": "YulFunctionCall",
																"src": "10519:33:15"
															},
															"nativeSrc": "10519:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "10519:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10415:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10456:6:15",
														"nodeType": "YulTypedName",
														"src": "10456:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10464:3:15",
														"nodeType": "YulTypedName",
														"src": "10464:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10472:5:15",
														"nodeType": "YulTypedName",
														"src": "10472:5:15",
														"type": ""
													}
												],
												"src": "10415:143:15"
											},
											{
												"body": {
													"nativeSrc": "10641:274:15",
													"nodeType": "YulBlock",
													"src": "10641:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10687:83:15",
																"nodeType": "YulBlock",
																"src": "10687:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10689:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10689:77:15"
																			},
																			"nativeSrc": "10689:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10689:79:15"
																		},
																		"nativeSrc": "10689:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10689:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10662:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10662:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10671:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10671:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10658:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10658:3:15"
																		},
																		"nativeSrc": "10658:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10658:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10683:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10683:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10654:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10654:3:15"
																},
																"nativeSrc": "10654:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10654:32:15"
															},
															"nativeSrc": "10651:119:15",
															"nodeType": "YulIf",
															"src": "10651:119:15"
														},
														{
															"nativeSrc": "10780:128:15",
															"nodeType": "YulBlock",
															"src": "10780:128:15",
															"statements": [
																{
																	"nativeSrc": "10795:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10795:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10809:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10809:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10799:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10799:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10824:74:15",
																	"nodeType": "YulAssignment",
																	"src": "10824:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10870:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10870:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10881:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10881:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10866:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:15"
																				},
																				"nativeSrc": "10866:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10866:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10890:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10890:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10834:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "10834:31:15"
																		},
																		"nativeSrc": "10834:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10834:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10824:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10824:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10564:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10611:9:15",
														"nodeType": "YulTypedName",
														"src": "10611:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10622:7:15",
														"nodeType": "YulTypedName",
														"src": "10622:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10634:6:15",
														"nodeType": "YulTypedName",
														"src": "10634:6:15",
														"type": ""
													}
												],
												"src": "10564:351:15"
											},
											{
												"body": {
													"nativeSrc": "11027:66:15",
													"nodeType": "YulBlock",
													"src": "11027:66:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11049:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11049:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11057:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11057:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11045:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11045:3:15"
																		},
																		"nativeSrc": "11045:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11045:14:15"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "11061:24:15",
																		"nodeType": "YulLiteral",
																		"src": "11061:24:15",
																		"type": "",
																		"value": "Insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11038:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11038:6:15"
																},
																"nativeSrc": "11038:48:15",
																"nodeType": "YulFunctionCall",
																"src": "11038:48:15"
															},
															"nativeSrc": "11038:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "11038:48:15"
														}
													]
												},
												"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
												"nativeSrc": "10921:172:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11019:6:15",
														"nodeType": "YulTypedName",
														"src": "11019:6:15",
														"type": ""
													}
												],
												"src": "10921:172:15"
											},
											{
												"body": {
													"nativeSrc": "11245:220:15",
													"nodeType": "YulBlock",
													"src": "11245:220:15",
													"statements": [
														{
															"nativeSrc": "11255:74:15",
															"nodeType": "YulAssignment",
															"src": "11255:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11321:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11321:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11326:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11326:2:15",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11262:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "11262:58:15"
																},
																"nativeSrc": "11262:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11262:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11255:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11255:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11427:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11427:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																	"nativeSrc": "11338:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "11338:88:15"
																},
																"nativeSrc": "11338:93:15",
																"nodeType": "YulFunctionCall",
																"src": "11338:93:15"
															},
															"nativeSrc": "11338:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "11338:93:15"
														},
														{
															"nativeSrc": "11440:19:15",
															"nodeType": "YulAssignment",
															"src": "11440:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11451:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11451:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11456:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11456:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11447:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11447:3:15"
																},
																"nativeSrc": "11447:12:15",
																"nodeType": "YulFunctionCall",
																"src": "11447:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11440:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11440:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11099:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11233:3:15",
														"nodeType": "YulTypedName",
														"src": "11233:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11241:3:15",
														"nodeType": "YulTypedName",
														"src": "11241:3:15",
														"type": ""
													}
												],
												"src": "11099:366:15"
											},
											{
												"body": {
													"nativeSrc": "11642:248:15",
													"nodeType": "YulBlock",
													"src": "11642:248:15",
													"statements": [
														{
															"nativeSrc": "11652:26:15",
															"nodeType": "YulAssignment",
															"src": "11652:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11664:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11664:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11675:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11675:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11660:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11660:3:15"
																},
																"nativeSrc": "11660:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11660:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11652:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11652:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11699:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11699:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11710:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11710:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11695:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11695:3:15"
																		},
																		"nativeSrc": "11695:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11695:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11718:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "11718:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11714:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11714:3:15"
																		},
																		"nativeSrc": "11714:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11714:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11688:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11688:6:15"
																},
																"nativeSrc": "11688:47:15",
																"nodeType": "YulFunctionCall",
																"src": "11688:47:15"
															},
															"nativeSrc": "11688:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "11688:47:15"
														},
														{
															"nativeSrc": "11744:139:15",
															"nodeType": "YulAssignment",
															"src": "11744:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11878:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "11878:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11752:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "11752:124:15"
																},
																"nativeSrc": "11752:131:15",
																"nodeType": "YulFunctionCall",
																"src": "11752:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11744:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11744:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11471:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11622:9:15",
														"nodeType": "YulTypedName",
														"src": "11622:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11637:4:15",
														"nodeType": "YulTypedName",
														"src": "11637:4:15",
														"type": ""
													}
												],
												"src": "11471:419:15"
											},
											{
												"body": {
													"nativeSrc": "12050:288:15",
													"nodeType": "YulBlock",
													"src": "12050:288:15",
													"statements": [
														{
															"nativeSrc": "12060:26:15",
															"nodeType": "YulAssignment",
															"src": "12060:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12072:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12072:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12083:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12083:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12068:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12068:3:15"
																},
																"nativeSrc": "12068:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12068:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12060:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12060:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12140:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12140:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12153:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12153:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12164:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12164:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12149:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12149:3:15"
																		},
																		"nativeSrc": "12149:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12149:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12096:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "12096:43:15"
																},
																"nativeSrc": "12096:71:15",
																"nodeType": "YulFunctionCall",
																"src": "12096:71:15"
															},
															"nativeSrc": "12096:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "12096:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12221:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12221:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12234:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12234:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12245:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12245:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12230:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:15"
																		},
																		"nativeSrc": "12230:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12230:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12177:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "12177:43:15"
																},
																"nativeSrc": "12177:72:15",
																"nodeType": "YulFunctionCall",
																"src": "12177:72:15"
															},
															"nativeSrc": "12177:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "12177:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12303:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12303:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12316:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12316:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12327:2:15",
																				"nodeType": "YulLiteral",
																				"src": "12327:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12312:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12312:3:15"
																		},
																		"nativeSrc": "12312:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12312:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12259:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "12259:43:15"
																},
																"nativeSrc": "12259:72:15",
																"nodeType": "YulFunctionCall",
																"src": "12259:72:15"
															},
															"nativeSrc": "12259:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "12259:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11896:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12006:9:15",
														"nodeType": "YulTypedName",
														"src": "12006:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12018:6:15",
														"nodeType": "YulTypedName",
														"src": "12018:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12026:6:15",
														"nodeType": "YulTypedName",
														"src": "12026:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12034:6:15",
														"nodeType": "YulTypedName",
														"src": "12034:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12045:4:15",
														"nodeType": "YulTypedName",
														"src": "12045:4:15",
														"type": ""
													}
												],
												"src": "11896:442:15"
											},
											{
												"body": {
													"nativeSrc": "12384:76:15",
													"nodeType": "YulBlock",
													"src": "12384:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12438:16:15",
																"nodeType": "YulBlock",
																"src": "12438:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12447:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12447:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12450:1:15",
																					"nodeType": "YulLiteral",
																					"src": "12450:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12440:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12440:6:15"
																			},
																			"nativeSrc": "12440:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12440:12:15"
																		},
																		"nativeSrc": "12440:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12440:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12407:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "12407:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12429:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "12429:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12414:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "12414:14:15"
																				},
																				"nativeSrc": "12414:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12414:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12404:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "12404:2:15"
																		},
																		"nativeSrc": "12404:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12404:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12397:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12397:6:15"
																},
																"nativeSrc": "12397:40:15",
																"nodeType": "YulFunctionCall",
																"src": "12397:40:15"
															},
															"nativeSrc": "12394:60:15",
															"nodeType": "YulIf",
															"src": "12394:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12344:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12377:5:15",
														"nodeType": "YulTypedName",
														"src": "12377:5:15",
														"type": ""
													}
												],
												"src": "12344:116:15"
											},
											{
												"body": {
													"nativeSrc": "12526:77:15",
													"nodeType": "YulBlock",
													"src": "12526:77:15",
													"statements": [
														{
															"nativeSrc": "12536:22:15",
															"nodeType": "YulAssignment",
															"src": "12536:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12551:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12551:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12545:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12545:5:15"
																},
																"nativeSrc": "12545:13:15",
																"nodeType": "YulFunctionCall",
																"src": "12545:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12536:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12536:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12591:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12591:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12567:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "12567:23:15"
																},
																"nativeSrc": "12567:30:15",
																"nodeType": "YulFunctionCall",
																"src": "12567:30:15"
															},
															"nativeSrc": "12567:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "12567:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12466:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12504:6:15",
														"nodeType": "YulTypedName",
														"src": "12504:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12512:3:15",
														"nodeType": "YulTypedName",
														"src": "12512:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12520:5:15",
														"nodeType": "YulTypedName",
														"src": "12520:5:15",
														"type": ""
													}
												],
												"src": "12466:137:15"
											},
											{
												"body": {
													"nativeSrc": "12683:271:15",
													"nodeType": "YulBlock",
													"src": "12683:271:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12729:83:15",
																"nodeType": "YulBlock",
																"src": "12729:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12731:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12731:77:15"
																			},
																			"nativeSrc": "12731:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12731:79:15"
																		},
																		"nativeSrc": "12731:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12731:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12704:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12704:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12713:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12713:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12700:3:15"
																		},
																		"nativeSrc": "12700:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12700:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12725:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12725:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12696:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12696:3:15"
																},
																"nativeSrc": "12696:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12696:32:15"
															},
															"nativeSrc": "12693:119:15",
															"nodeType": "YulIf",
															"src": "12693:119:15"
														},
														{
															"nativeSrc": "12822:125:15",
															"nodeType": "YulBlock",
															"src": "12822:125:15",
															"statements": [
																{
																	"nativeSrc": "12837:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12837:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12851:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12851:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12841:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12841:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12866:71:15",
																	"nodeType": "YulAssignment",
																	"src": "12866:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12909:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12909:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12920:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12920:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12905:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12905:3:15"
																				},
																				"nativeSrc": "12905:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12905:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12929:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12929:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12876:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "12876:28:15"
																		},
																		"nativeSrc": "12876:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12876:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12866:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12866:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12609:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12653:9:15",
														"nodeType": "YulTypedName",
														"src": "12653:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12664:7:15",
														"nodeType": "YulTypedName",
														"src": "12664:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12676:6:15",
														"nodeType": "YulTypedName",
														"src": "12676:6:15",
														"type": ""
													}
												],
												"src": "12609:345:15"
											},
											{
												"body": {
													"nativeSrc": "13066:65:15",
													"nodeType": "YulBlock",
													"src": "13066:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13088:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "13088:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13096:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13096:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13084:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13084:3:15"
																		},
																		"nativeSrc": "13084:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13084:14:15"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13100:23:15",
																		"nodeType": "YulLiteral",
																		"src": "13100:23:15",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13077:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13077:6:15"
																},
																"nativeSrc": "13077:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13077:47:15"
															},
															"nativeSrc": "13077:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13077:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "12960:171:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13058:6:15",
														"nodeType": "YulTypedName",
														"src": "13058:6:15",
														"type": ""
													}
												],
												"src": "12960:171:15"
											},
											{
												"body": {
													"nativeSrc": "13283:220:15",
													"nodeType": "YulBlock",
													"src": "13283:220:15",
													"statements": [
														{
															"nativeSrc": "13293:74:15",
															"nodeType": "YulAssignment",
															"src": "13293:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13359:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13359:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13364:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13364:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13300:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "13300:58:15"
																},
																"nativeSrc": "13300:67:15",
																"nodeType": "YulFunctionCall",
																"src": "13300:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13293:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13465:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13465:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "13376:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "13376:88:15"
																},
																"nativeSrc": "13376:93:15",
																"nodeType": "YulFunctionCall",
																"src": "13376:93:15"
															},
															"nativeSrc": "13376:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "13376:93:15"
														},
														{
															"nativeSrc": "13478:19:15",
															"nodeType": "YulAssignment",
															"src": "13478:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13489:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13489:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13494:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13494:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13485:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:15"
																},
																"nativeSrc": "13485:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13485:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13478:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13478:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13137:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13271:3:15",
														"nodeType": "YulTypedName",
														"src": "13271:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13279:3:15",
														"nodeType": "YulTypedName",
														"src": "13279:3:15",
														"type": ""
													}
												],
												"src": "13137:366:15"
											},
											{
												"body": {
													"nativeSrc": "13680:248:15",
													"nodeType": "YulBlock",
													"src": "13680:248:15",
													"statements": [
														{
															"nativeSrc": "13690:26:15",
															"nodeType": "YulAssignment",
															"src": "13690:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13702:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13702:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13713:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13713:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13698:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13698:3:15"
																},
																"nativeSrc": "13698:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13698:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13690:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13690:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13737:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13737:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13748:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13748:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13733:3:15"
																		},
																		"nativeSrc": "13733:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13733:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13756:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13756:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13762:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13762:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13752:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:15"
																		},
																		"nativeSrc": "13752:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13752:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13726:6:15"
																},
																"nativeSrc": "13726:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13726:47:15"
															},
															"nativeSrc": "13726:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13726:47:15"
														},
														{
															"nativeSrc": "13782:139:15",
															"nodeType": "YulAssignment",
															"src": "13782:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13916:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13916:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13790:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "13790:124:15"
																},
																"nativeSrc": "13790:131:15",
																"nodeType": "YulFunctionCall",
																"src": "13790:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13782:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13782:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13509:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13660:9:15",
														"nodeType": "YulTypedName",
														"src": "13660:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13675:4:15",
														"nodeType": "YulTypedName",
														"src": "13675:4:15",
														"type": ""
													}
												],
												"src": "13509:419:15"
											},
											{
												"body": {
													"nativeSrc": "13982:362:15",
													"nodeType": "YulBlock",
													"src": "13982:362:15",
													"statements": [
														{
															"nativeSrc": "13992:25:15",
															"nodeType": "YulAssignment",
															"src": "13992:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14015:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14015:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13997:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "13997:17:15"
																},
																"nativeSrc": "13997:20:15",
																"nodeType": "YulFunctionCall",
																"src": "13997:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13992:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "13992:1:15"
																}
															]
														},
														{
															"nativeSrc": "14026:25:15",
															"nodeType": "YulAssignment",
															"src": "14026:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14049:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14049:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14031:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14031:17:15"
																},
																"nativeSrc": "14031:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14031:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14026:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "14026:1:15"
																}
															]
														},
														{
															"nativeSrc": "14060:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14060:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14083:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14083:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14086:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14086:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14079:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:15"
																},
																"nativeSrc": "14079:9:15",
																"nodeType": "YulFunctionCall",
																"src": "14079:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14064:11:15",
																	"nodeType": "YulTypedName",
																	"src": "14064:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14097:41:15",
															"nodeType": "YulAssignment",
															"src": "14097:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14126:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "14126:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14108:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14108:17:15"
																},
																"nativeSrc": "14108:30:15",
																"nodeType": "YulFunctionCall",
																"src": "14108:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14097:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "14097:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14315:22:15",
																"nodeType": "YulBlock",
																"src": "14315:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14317:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "14317:16:15"
																			},
																			"nativeSrc": "14317:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14317:18:15"
																		},
																		"nativeSrc": "14317:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14317:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14248:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "14248:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14241:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "14241:6:15"
																				},
																				"nativeSrc": "14241:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14241:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14271:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "14271:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14278:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "14278:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14287:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "14287:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14274:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "14274:3:15"
																						},
																						"nativeSrc": "14274:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "14274:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14268:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "14268:2:15"
																				},
																				"nativeSrc": "14268:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14268:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14221:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "14221:2:15"
																		},
																		"nativeSrc": "14221:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14221:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14201:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14201:6:15"
																},
																"nativeSrc": "14201:113:15",
																"nodeType": "YulFunctionCall",
																"src": "14201:113:15"
															},
															"nativeSrc": "14198:139:15",
															"nodeType": "YulIf",
															"src": "14198:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13934:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13965:1:15",
														"nodeType": "YulTypedName",
														"src": "13965:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13968:1:15",
														"nodeType": "YulTypedName",
														"src": "13968:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13974:7:15",
														"nodeType": "YulTypedName",
														"src": "13974:7:15",
														"type": ""
													}
												],
												"src": "13934:410:15"
											},
											{
												"body": {
													"nativeSrc": "14395:149:15",
													"nodeType": "YulBlock",
													"src": "14395:149:15",
													"statements": [
														{
															"nativeSrc": "14405:25:15",
															"nodeType": "YulAssignment",
															"src": "14405:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14428:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14428:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14410:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14410:17:15"
																},
																"nativeSrc": "14410:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14410:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14405:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "14405:1:15"
																}
															]
														},
														{
															"nativeSrc": "14439:25:15",
															"nodeType": "YulAssignment",
															"src": "14439:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14462:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14462:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14444:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "14444:17:15"
																},
																"nativeSrc": "14444:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14444:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14439:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "14439:1:15"
																}
															]
														},
														{
															"nativeSrc": "14473:17:15",
															"nodeType": "YulAssignment",
															"src": "14473:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14485:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14485:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14488:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14488:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14481:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14481:3:15"
																},
																"nativeSrc": "14481:9:15",
																"nodeType": "YulFunctionCall",
																"src": "14481:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14473:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14473:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14515:22:15",
																"nodeType": "YulBlock",
																"src": "14515:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14517:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "14517:16:15"
																			},
																			"nativeSrc": "14517:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14517:18:15"
																		},
																		"nativeSrc": "14517:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14517:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14506:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "14506:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14512:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14512:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14503:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14503:2:15"
																},
																"nativeSrc": "14503:11:15",
																"nodeType": "YulFunctionCall",
																"src": "14503:11:15"
															},
															"nativeSrc": "14500:37:15",
															"nodeType": "YulIf",
															"src": "14500:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14350:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14381:1:15",
														"nodeType": "YulTypedName",
														"src": "14381:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14384:1:15",
														"nodeType": "YulTypedName",
														"src": "14384:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14390:4:15",
														"nodeType": "YulTypedName",
														"src": "14390:4:15",
														"type": ""
													}
												],
												"src": "14350:194:15"
											},
											{
												"body": {
													"nativeSrc": "14593:79:15",
													"nodeType": "YulBlock",
													"src": "14593:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14650:16:15",
																"nodeType": "YulBlock",
																"src": "14650:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14659:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14659:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14662:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14662:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14652:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14652:6:15"
																			},
																			"nativeSrc": "14652:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14652:12:15"
																		},
																		"nativeSrc": "14652:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14652:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14616:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14616:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14641:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "14641:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "14623:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "14623:17:15"
																				},
																				"nativeSrc": "14623:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14623:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14613:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "14613:2:15"
																		},
																		"nativeSrc": "14613:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14613:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14606:6:15"
																},
																"nativeSrc": "14606:43:15",
																"nodeType": "YulFunctionCall",
																"src": "14606:43:15"
															},
															"nativeSrc": "14603:63:15",
															"nodeType": "YulIf",
															"src": "14603:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "14550:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14586:5:15",
														"nodeType": "YulTypedName",
														"src": "14586:5:15",
														"type": ""
													}
												],
												"src": "14550:122:15"
											},
											{
												"body": {
													"nativeSrc": "14741:80:15",
													"nodeType": "YulBlock",
													"src": "14741:80:15",
													"statements": [
														{
															"nativeSrc": "14751:22:15",
															"nodeType": "YulAssignment",
															"src": "14751:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14766:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14766:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14760:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14760:5:15"
																},
																"nativeSrc": "14760:13:15",
																"nodeType": "YulFunctionCall",
																"src": "14760:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14751:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14751:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14809:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14809:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "14782:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "14782:26:15"
																},
																"nativeSrc": "14782:33:15",
																"nodeType": "YulFunctionCall",
																"src": "14782:33:15"
															},
															"nativeSrc": "14782:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "14782:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "14678:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14719:6:15",
														"nodeType": "YulTypedName",
														"src": "14719:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14727:3:15",
														"nodeType": "YulTypedName",
														"src": "14727:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14735:5:15",
														"nodeType": "YulTypedName",
														"src": "14735:5:15",
														"type": ""
													}
												],
												"src": "14678:143:15"
											},
											{
												"body": {
													"nativeSrc": "14870:47:15",
													"nodeType": "YulBlock",
													"src": "14870:47:15",
													"statements": [
														{
															"nativeSrc": "14880:31:15",
															"nodeType": "YulAssignment",
															"src": "14880:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14902:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14902:1:15",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14905:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14905:5:15"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "14891:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "14891:10:15"
																},
																"nativeSrc": "14891:20:15",
																"nodeType": "YulFunctionCall",
																"src": "14891:20:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14880:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "14880:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "14827:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14852:5:15",
														"nodeType": "YulTypedName",
														"src": "14852:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14862:7:15",
														"nodeType": "YulTypedName",
														"src": "14862:7:15",
														"type": ""
													}
												],
												"src": "14827:90:15"
											},
											{
												"body": {
													"nativeSrc": "14964:77:15",
													"nodeType": "YulBlock",
													"src": "14964:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15019:16:15",
																"nodeType": "YulBlock",
																"src": "15019:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15028:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15028:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15031:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15031:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15021:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15021:6:15"
																			},
																			"nativeSrc": "15021:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15021:12:15"
																		},
																		"nativeSrc": "15021:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15021:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14987:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14987:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15010:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15010:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "14994:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "14994:15:15"
																				},
																				"nativeSrc": "14994:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14994:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14984:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "14984:2:15"
																		},
																		"nativeSrc": "14984:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14984:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14977:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14977:6:15"
																},
																"nativeSrc": "14977:41:15",
																"nodeType": "YulFunctionCall",
																"src": "14977:41:15"
															},
															"nativeSrc": "14974:61:15",
															"nodeType": "YulIf",
															"src": "14974:61:15"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "14923:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14957:5:15",
														"nodeType": "YulTypedName",
														"src": "14957:5:15",
														"type": ""
													}
												],
												"src": "14923:118:15"
											},
											{
												"body": {
													"nativeSrc": "15108:78:15",
													"nodeType": "YulBlock",
													"src": "15108:78:15",
													"statements": [
														{
															"nativeSrc": "15118:22:15",
															"nodeType": "YulAssignment",
															"src": "15118:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15133:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15133:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15127:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15127:5:15"
																},
																"nativeSrc": "15127:13:15",
																"nodeType": "YulFunctionCall",
																"src": "15127:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15118:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15118:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15174:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15174:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "15149:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "15149:24:15"
																},
																"nativeSrc": "15149:31:15",
																"nodeType": "YulFunctionCall",
																"src": "15149:31:15"
															},
															"nativeSrc": "15149:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "15149:31:15"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "15047:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15086:6:15",
														"nodeType": "YulTypedName",
														"src": "15086:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15094:3:15",
														"nodeType": "YulTypedName",
														"src": "15094:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15102:5:15",
														"nodeType": "YulTypedName",
														"src": "15102:5:15",
														"type": ""
													}
												],
												"src": "15047:139:15"
											},
											{
												"body": {
													"nativeSrc": "15236:45:15",
													"nodeType": "YulBlock",
													"src": "15236:45:15",
													"statements": [
														{
															"nativeSrc": "15246:29:15",
															"nodeType": "YulAssignment",
															"src": "15246:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15261:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15261:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15268:6:15",
																		"nodeType": "YulLiteral",
																		"src": "15268:6:15",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15257:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15257:3:15"
																},
																"nativeSrc": "15257:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15257:18:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15246:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "15246:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "15192:89:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15218:5:15",
														"nodeType": "YulTypedName",
														"src": "15218:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15228:7:15",
														"nodeType": "YulTypedName",
														"src": "15228:7:15",
														"type": ""
													}
												],
												"src": "15192:89:15"
											},
											{
												"body": {
													"nativeSrc": "15329:78:15",
													"nodeType": "YulBlock",
													"src": "15329:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15385:16:15",
																"nodeType": "YulBlock",
																"src": "15385:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15394:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15394:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15397:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15397:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15387:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15387:6:15"
																			},
																			"nativeSrc": "15387:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15387:12:15"
																		},
																		"nativeSrc": "15387:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15387:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15352:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15352:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15376:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15376:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "15359:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "15359:16:15"
																				},
																				"nativeSrc": "15359:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15359:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15349:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15349:2:15"
																		},
																		"nativeSrc": "15349:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15349:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15342:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15342:6:15"
																},
																"nativeSrc": "15342:42:15",
																"nodeType": "YulFunctionCall",
																"src": "15342:42:15"
															},
															"nativeSrc": "15339:62:15",
															"nodeType": "YulIf",
															"src": "15339:62:15"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "15287:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15322:5:15",
														"nodeType": "YulTypedName",
														"src": "15322:5:15",
														"type": ""
													}
												],
												"src": "15287:120:15"
											},
											{
												"body": {
													"nativeSrc": "15475:79:15",
													"nodeType": "YulBlock",
													"src": "15475:79:15",
													"statements": [
														{
															"nativeSrc": "15485:22:15",
															"nodeType": "YulAssignment",
															"src": "15485:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15500:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15500:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15494:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15494:5:15"
																},
																"nativeSrc": "15494:13:15",
																"nodeType": "YulFunctionCall",
																"src": "15494:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15485:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15485:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15542:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15542:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "15516:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "15516:25:15"
																},
																"nativeSrc": "15516:32:15",
																"nodeType": "YulFunctionCall",
																"src": "15516:32:15"
															},
															"nativeSrc": "15516:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "15516:32:15"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "15413:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15453:6:15",
														"nodeType": "YulTypedName",
														"src": "15453:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15461:3:15",
														"nodeType": "YulTypedName",
														"src": "15461:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15469:5:15",
														"nodeType": "YulTypedName",
														"src": "15469:5:15",
														"type": ""
													}
												],
												"src": "15413:141:15"
											},
											{
												"body": {
													"nativeSrc": "15601:77:15",
													"nodeType": "YulBlock",
													"src": "15601:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "15656:16:15",
																"nodeType": "YulBlock",
																"src": "15656:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15665:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15665:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15668:1:15",
																					"nodeType": "YulLiteral",
																					"src": "15668:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15658:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15658:6:15"
																			},
																			"nativeSrc": "15658:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15658:12:15"
																		},
																		"nativeSrc": "15658:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "15658:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15624:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15624:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15647:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "15647:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "15631:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "15631:15:15"
																				},
																				"nativeSrc": "15631:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15631:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15621:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "15621:2:15"
																		},
																		"nativeSrc": "15621:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15621:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15614:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15614:6:15"
																},
																"nativeSrc": "15614:41:15",
																"nodeType": "YulFunctionCall",
																"src": "15614:41:15"
															},
															"nativeSrc": "15611:61:15",
															"nodeType": "YulIf",
															"src": "15611:61:15"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "15560:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15594:5:15",
														"nodeType": "YulTypedName",
														"src": "15594:5:15",
														"type": ""
													}
												],
												"src": "15560:118:15"
											},
											{
												"body": {
													"nativeSrc": "15745:78:15",
													"nodeType": "YulBlock",
													"src": "15745:78:15",
													"statements": [
														{
															"nativeSrc": "15755:22:15",
															"nodeType": "YulAssignment",
															"src": "15755:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15770:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15770:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15764:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15764:5:15"
																},
																"nativeSrc": "15764:13:15",
																"nodeType": "YulFunctionCall",
																"src": "15764:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15755:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15755:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15811:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15811:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "15786:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "15786:24:15"
																},
																"nativeSrc": "15786:31:15",
																"nodeType": "YulFunctionCall",
																"src": "15786:31:15"
															},
															"nativeSrc": "15786:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "15786:31:15"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "15684:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15723:6:15",
														"nodeType": "YulTypedName",
														"src": "15723:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15731:3:15",
														"nodeType": "YulTypedName",
														"src": "15731:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15739:5:15",
														"nodeType": "YulTypedName",
														"src": "15739:5:15",
														"type": ""
													}
												],
												"src": "15684:139:15"
											},
											{
												"body": {
													"nativeSrc": "15998:1102:15",
													"nodeType": "YulBlock",
													"src": "15998:1102:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16045:83:15",
																"nodeType": "YulBlock",
																"src": "16045:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16047:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "16047:77:15"
																			},
																			"nativeSrc": "16047:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16047:79:15"
																		},
																		"nativeSrc": "16047:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16047:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16019:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16019:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16028:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16028:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16015:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16015:3:15"
																		},
																		"nativeSrc": "16015:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16015:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16040:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16040:3:15",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16011:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16011:3:15"
																},
																"nativeSrc": "16011:33:15",
																"nodeType": "YulFunctionCall",
																"src": "16011:33:15"
															},
															"nativeSrc": "16008:120:15",
															"nodeType": "YulIf",
															"src": "16008:120:15"
														},
														{
															"nativeSrc": "16138:128:15",
															"nodeType": "YulBlock",
															"src": "16138:128:15",
															"statements": [
																{
																	"nativeSrc": "16153:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16153:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16167:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16167:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16157:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16157:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16182:74:15",
																	"nodeType": "YulAssignment",
																	"src": "16182:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16228:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16228:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16239:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16239:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16224:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16224:3:15"
																				},
																				"nativeSrc": "16224:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16224:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16248:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16248:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "16192:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "16192:31:15"
																		},
																		"nativeSrc": "16192:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16192:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16182:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16182:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16276:127:15",
															"nodeType": "YulBlock",
															"src": "16276:127:15",
															"statements": [
																{
																	"nativeSrc": "16291:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16291:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16305:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16305:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16295:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16295:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16321:72:15",
																	"nodeType": "YulAssignment",
																	"src": "16321:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16365:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16365:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16376:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16376:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16361:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16361:3:15"
																				},
																				"nativeSrc": "16361:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16361:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16385:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16385:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "16331:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "16331:29:15"
																		},
																		"nativeSrc": "16331:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16331:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16321:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16321:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16413:128:15",
															"nodeType": "YulBlock",
															"src": "16413:128:15",
															"statements": [
																{
																	"nativeSrc": "16428:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16428:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16442:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16442:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16432:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16432:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16458:73:15",
																	"nodeType": "YulAssignment",
																	"src": "16458:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16503:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16503:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16514:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16514:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16499:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16499:3:15"
																				},
																				"nativeSrc": "16499:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16499:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16523:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16523:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "16468:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "16468:30:15"
																		},
																		"nativeSrc": "16468:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16468:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16458:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16458:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16551:128:15",
															"nodeType": "YulBlock",
															"src": "16551:128:15",
															"statements": [
																{
																	"nativeSrc": "16566:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16566:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16580:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16580:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16570:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16570:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16596:73:15",
																	"nodeType": "YulAssignment",
																	"src": "16596:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16641:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16641:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16652:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16652:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16637:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16637:3:15"
																				},
																				"nativeSrc": "16637:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16637:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16661:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16661:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "16606:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "16606:30:15"
																		},
																		"nativeSrc": "16606:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16606:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16596:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16596:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16689:129:15",
															"nodeType": "YulBlock",
															"src": "16689:129:15",
															"statements": [
																{
																	"nativeSrc": "16704:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16704:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16718:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16718:3:15",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16708:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16708:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16735:73:15",
																	"nodeType": "YulAssignment",
																	"src": "16735:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16780:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16780:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16791:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16791:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16776:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16776:3:15"
																				},
																				"nativeSrc": "16776:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16776:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16800:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16800:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "16745:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "16745:30:15"
																		},
																		"nativeSrc": "16745:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16745:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "16735:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16735:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16828:128:15",
															"nodeType": "YulBlock",
															"src": "16828:128:15",
															"statements": [
																{
																	"nativeSrc": "16843:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16843:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16857:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16857:3:15",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16847:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16847:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16874:72:15",
																	"nodeType": "YulAssignment",
																	"src": "16874:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16918:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16918:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16929:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16929:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16914:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16914:3:15"
																				},
																				"nativeSrc": "16914:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16914:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16938:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16938:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "16884:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "16884:29:15"
																		},
																		"nativeSrc": "16884:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16884:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "16874:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16874:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16966:127:15",
															"nodeType": "YulBlock",
															"src": "16966:127:15",
															"statements": [
																{
																	"nativeSrc": "16981:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16981:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16995:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16995:3:15",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16985:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16985:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17012:71:15",
																	"nodeType": "YulAssignment",
																	"src": "17012:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17055:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17055:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17066:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17066:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17051:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17051:3:15"
																				},
																				"nativeSrc": "17051:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17051:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17075:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17075:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "17022:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "17022:28:15"
																		},
																		"nativeSrc": "17022:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17022:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "17012:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17012:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "15829:1271:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15920:9:15",
														"nodeType": "YulTypedName",
														"src": "15920:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15931:7:15",
														"nodeType": "YulTypedName",
														"src": "15931:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15943:6:15",
														"nodeType": "YulTypedName",
														"src": "15943:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15951:6:15",
														"nodeType": "YulTypedName",
														"src": "15951:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15959:6:15",
														"nodeType": "YulTypedName",
														"src": "15959:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15967:6:15",
														"nodeType": "YulTypedName",
														"src": "15967:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15975:6:15",
														"nodeType": "YulTypedName",
														"src": "15975:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15983:6:15",
														"nodeType": "YulTypedName",
														"src": "15983:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "15991:6:15",
														"nodeType": "YulTypedName",
														"src": "15991:6:15",
														"type": ""
													}
												],
												"src": "15829:1271:15"
											},
											{
												"body": {
													"nativeSrc": "17157:51:15",
													"nodeType": "YulBlock",
													"src": "17157:51:15",
													"statements": [
														{
															"nativeSrc": "17167:34:15",
															"nodeType": "YulAssignment",
															"src": "17167:34:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17192:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17192:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17195:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17195:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17188:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17188:3:15"
																},
																"nativeSrc": "17188:13:15",
																"nodeType": "YulFunctionCall",
																"src": "17188:13:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17167:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "17167:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "17106:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17138:5:15",
														"nodeType": "YulTypedName",
														"src": "17138:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17148:8:15",
														"nodeType": "YulTypedName",
														"src": "17148:8:15",
														"type": ""
													}
												],
												"src": "17106:102:15"
											},
											{
												"body": {
													"nativeSrc": "17287:775:15",
													"nodeType": "YulBlock",
													"src": "17287:775:15",
													"statements": [
														{
															"nativeSrc": "17297:15:15",
															"nodeType": "YulAssignment",
															"src": "17297:15:15",
															"value": {
																"name": "_power",
																"nativeSrc": "17306:6:15",
																"nodeType": "YulIdentifier",
																"src": "17306:6:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "17297:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17297:5:15"
																}
															]
														},
														{
															"nativeSrc": "17321:14:15",
															"nodeType": "YulAssignment",
															"src": "17321:14:15",
															"value": {
																"name": "_base",
																"nativeSrc": "17330:5:15",
																"nodeType": "YulIdentifier",
																"src": "17330:5:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "17321:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "17321:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17379:677:15",
																"nodeType": "YulBlock",
																"src": "17379:677:15",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "17467:22:15",
																			"nodeType": "YulBlock",
																			"src": "17467:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "17469:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "17469:16:15"
																						},
																						"nativeSrc": "17469:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "17469:18:15"
																					},
																					"nativeSrc": "17469:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "17469:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17445:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "17445:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "17455:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "17455:3:15"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "17460:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "17460:4:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "17451:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "17451:3:15"
																					},
																					"nativeSrc": "17451:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "17451:14:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "17442:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "17442:2:15"
																			},
																			"nativeSrc": "17442:24:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17442:24:15"
																		},
																		"nativeSrc": "17439:50:15",
																		"nodeType": "YulIf",
																		"src": "17439:50:15"
																	},
																	{
																		"body": {
																			"nativeSrc": "17534:419:15",
																			"nodeType": "YulBlock",
																			"src": "17534:419:15",
																			"statements": [
																				{
																					"nativeSrc": "17914:25:15",
																					"nodeType": "YulAssignment",
																					"src": "17914:25:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "17927:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "17927:5:15"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "17934:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "17934:4:15"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "17923:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "17923:3:15"
																						},
																						"nativeSrc": "17923:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "17923:16:15"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "17914:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "17914:5:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "17509:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "17509:8:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17519:1:15",
																					"nodeType": "YulLiteral",
																					"src": "17519:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17505:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "17505:3:15"
																			},
																			"nativeSrc": "17505:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17505:16:15"
																		},
																		"nativeSrc": "17502:451:15",
																		"nodeType": "YulIf",
																		"src": "17502:451:15"
																	},
																	{
																		"nativeSrc": "17966:23:15",
																		"nodeType": "YulAssignment",
																		"src": "17966:23:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "17978:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "17978:4:15"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "17984:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "17984:4:15"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "17974:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "17974:3:15"
																			},
																			"nativeSrc": "17974:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17974:15:15"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "17966:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "17966:4:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18002:44:15",
																		"nodeType": "YulAssignment",
																		"src": "18002:44:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "18037:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "18037:8:15"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "18014:22:15",
																				"nodeType": "YulIdentifier",
																				"src": "18014:22:15"
																			},
																			"nativeSrc": "18014:32:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18014:32:15"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "18002:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "18002:8:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "17355:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "17355:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17365:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17365:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17352:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "17352:2:15"
																},
																"nativeSrc": "17352:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17352:15:15"
															},
															"nativeSrc": "17344:712:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17368:2:15",
																"nodeType": "YulBlock",
																"src": "17368:2:15",
																"statements": []
															},
															"pre": {
																"nativeSrc": "17348:3:15",
																"nodeType": "YulBlock",
																"src": "17348:3:15",
																"statements": []
															},
															"src": "17344:712:15"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "17214:848:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "17242:6:15",
														"nodeType": "YulTypedName",
														"src": "17242:6:15",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "17250:5:15",
														"nodeType": "YulTypedName",
														"src": "17250:5:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17257:8:15",
														"nodeType": "YulTypedName",
														"src": "17257:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17267:3:15",
														"nodeType": "YulTypedName",
														"src": "17267:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17275:5:15",
														"nodeType": "YulTypedName",
														"src": "17275:5:15",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "17282:4:15",
														"nodeType": "YulTypedName",
														"src": "17282:4:15",
														"type": ""
													}
												],
												"src": "17214:848:15"
											},
											{
												"body": {
													"nativeSrc": "18128:1013:15",
													"nodeType": "YulBlock",
													"src": "18128:1013:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "18323:20:15",
																"nodeType": "YulBlock",
																"src": "18323:20:15",
																"statements": [
																	{
																		"nativeSrc": "18325:10:15",
																		"nodeType": "YulAssignment",
																		"src": "18325:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18334:1:15",
																			"nodeType": "YulLiteral",
																			"src": "18334:1:15",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18325:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18325:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18336:5:15",
																		"nodeType": "YulLeave",
																		"src": "18336:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18313:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "18313:8:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18306:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18306:6:15"
																},
																"nativeSrc": "18306:16:15",
																"nodeType": "YulFunctionCall",
																"src": "18306:16:15"
															},
															"nativeSrc": "18303:40:15",
															"nodeType": "YulIf",
															"src": "18303:40:15"
														},
														{
															"body": {
																"nativeSrc": "18368:20:15",
																"nodeType": "YulBlock",
																"src": "18368:20:15",
																"statements": [
																	{
																		"nativeSrc": "18370:10:15",
																		"nodeType": "YulAssignment",
																		"src": "18370:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18379:1:15",
																			"nodeType": "YulLiteral",
																			"src": "18379:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18370:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18370:5:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18381:5:15",
																		"nodeType": "YulLeave",
																		"src": "18381:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18362:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "18362:4:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18355:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18355:6:15"
																},
																"nativeSrc": "18355:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18355:12:15"
															},
															"nativeSrc": "18352:36:15",
															"nodeType": "YulIf",
															"src": "18352:36:15"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18498:20:15",
																		"nodeType": "YulBlock",
																		"src": "18498:20:15",
																		"statements": [
																			{
																				"nativeSrc": "18500:10:15",
																				"nodeType": "YulAssignment",
																				"src": "18500:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18509:1:15",
																					"nodeType": "YulLiteral",
																					"src": "18509:1:15",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "18500:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "18500:5:15"
																					}
																				]
																			},
																			{
																				"nativeSrc": "18511:5:15",
																				"nodeType": "YulLeave",
																				"src": "18511:5:15"
																			}
																		]
																	},
																	"nativeSrc": "18491:27:15",
																	"nodeType": "YulCase",
																	"src": "18491:27:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18496:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18496:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18542:176:15",
																		"nodeType": "YulBlock",
																		"src": "18542:176:15",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "18577:22:15",
																					"nodeType": "YulBlock",
																					"src": "18577:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "18579:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "18579:16:15"
																								},
																								"nativeSrc": "18579:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "18579:18:15"
																							},
																							"nativeSrc": "18579:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "18579:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "18562:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "18562:8:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "18572:3:15",
																							"nodeType": "YulLiteral",
																							"src": "18572:3:15",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "18559:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "18559:2:15"
																					},
																					"nativeSrc": "18559:17:15",
																					"nodeType": "YulFunctionCall",
																					"src": "18559:17:15"
																				},
																				"nativeSrc": "18556:43:15",
																				"nodeType": "YulIf",
																				"src": "18556:43:15"
																			},
																			{
																				"nativeSrc": "18612:25:15",
																				"nodeType": "YulAssignment",
																				"src": "18612:25:15",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "18625:1:15",
																							"nodeType": "YulLiteral",
																							"src": "18625:1:15",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "18628:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "18628:8:15"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "18621:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "18621:3:15"
																					},
																					"nativeSrc": "18621:16:15",
																					"nodeType": "YulFunctionCall",
																					"src": "18621:16:15"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "18612:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "18612:5:15"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18668:22:15",
																					"nodeType": "YulBlock",
																					"src": "18668:22:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "18670:16:15",
																									"nodeType": "YulIdentifier",
																									"src": "18670:16:15"
																								},
																								"nativeSrc": "18670:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "18670:18:15"
																							},
																							"nativeSrc": "18670:18:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "18670:18:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "18656:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "18656:5:15"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "18663:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "18663:3:15"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "18653:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "18653:2:15"
																					},
																					"nativeSrc": "18653:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "18653:14:15"
																				},
																				"nativeSrc": "18650:40:15",
																				"nodeType": "YulIf",
																				"src": "18650:40:15"
																			},
																			{
																				"nativeSrc": "18703:5:15",
																				"nodeType": "YulLeave",
																				"src": "18703:5:15"
																			}
																		]
																	},
																	"nativeSrc": "18527:191:15",
																	"nodeType": "YulCase",
																	"src": "18527:191:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18532:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18532:1:15",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "18448:4:15",
																"nodeType": "YulIdentifier",
																"src": "18448:4:15"
															},
															"nativeSrc": "18441:277:15",
															"nodeType": "YulSwitch",
															"src": "18441:277:15"
														},
														{
															"body": {
																"nativeSrc": "18850:123:15",
																"nodeType": "YulBlock",
																"src": "18850:123:15",
																"statements": [
																	{
																		"nativeSrc": "18864:28:15",
																		"nodeType": "YulAssignment",
																		"src": "18864:28:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18877:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "18877:4:15"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "18883:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "18883:8:15"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "18873:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "18873:3:15"
																			},
																			"nativeSrc": "18873:19:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18873:19:15"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18864:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18864:5:15"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18923:22:15",
																			"nodeType": "YulBlock",
																			"src": "18923:22:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "18925:16:15",
																							"nodeType": "YulIdentifier",
																							"src": "18925:16:15"
																						},
																						"nativeSrc": "18925:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "18925:18:15"
																					},
																					"nativeSrc": "18925:18:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "18925:18:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "18911:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "18911:5:15"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "18918:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18918:3:15"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "18908:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "18908:2:15"
																			},
																			"nativeSrc": "18908:14:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18908:14:15"
																		},
																		"nativeSrc": "18905:40:15",
																		"nodeType": "YulIf",
																		"src": "18905:40:15"
																	},
																	{
																		"nativeSrc": "18958:5:15",
																		"nodeType": "YulLeave",
																		"src": "18958:5:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18753:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "18753:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18759:2:15",
																						"nodeType": "YulLiteral",
																						"src": "18759:2:15",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18750:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "18750:2:15"
																				},
																				"nativeSrc": "18750:12:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18750:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18767:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "18767:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18777:2:15",
																						"nodeType": "YulLiteral",
																						"src": "18777:2:15",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18764:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "18764:2:15"
																				},
																				"nativeSrc": "18764:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18764:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18746:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18746:3:15"
																		},
																		"nativeSrc": "18746:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18746:35:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "18802:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "18802:4:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18808:3:15",
																						"nodeType": "YulLiteral",
																						"src": "18808:3:15",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18799:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "18799:2:15"
																				},
																				"nativeSrc": "18799:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18799:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "18817:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "18817:8:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18827:2:15",
																						"nodeType": "YulLiteral",
																						"src": "18827:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "18814:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "18814:2:15"
																				},
																				"nativeSrc": "18814:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18814:16:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18795:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18795:3:15"
																		},
																		"nativeSrc": "18795:36:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18795:36:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18730:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "18730:2:15"
																},
																"nativeSrc": "18730:111:15",
																"nodeType": "YulFunctionCall",
																"src": "18730:111:15"
															},
															"nativeSrc": "18727:246:15",
															"nodeType": "YulIf",
															"src": "18727:246:15"
														},
														{
															"nativeSrc": "18983:57:15",
															"nodeType": "YulAssignment",
															"src": "18983:57:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19017:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19017:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "19020:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19020:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "19026:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "19026:8:15"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "19036:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19036:3:15"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "18998:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "18998:18:15"
																},
																"nativeSrc": "18998:42:15",
																"nodeType": "YulFunctionCall",
																"src": "18998:42:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18983:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "18983:5:15"
																},
																{
																	"name": "base",
																	"nativeSrc": "18990:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "18990:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19079:22:15",
																"nodeType": "YulBlock",
																"src": "19079:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19081:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19081:16:15"
																			},
																			"nativeSrc": "19081:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19081:18:15"
																		},
																		"nativeSrc": "19081:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19081:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "19056:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "19056:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "19067:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "19067:3:15"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "19072:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19072:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "19063:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19063:3:15"
																		},
																		"nativeSrc": "19063:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19063:14:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19053:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "19053:2:15"
																},
																"nativeSrc": "19053:25:15",
																"nodeType": "YulFunctionCall",
																"src": "19053:25:15"
															},
															"nativeSrc": "19050:51:15",
															"nodeType": "YulIf",
															"src": "19050:51:15"
														},
														{
															"nativeSrc": "19110:25:15",
															"nodeType": "YulAssignment",
															"src": "19110:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "19123:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "19123:5:15"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "19130:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19130:4:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19119:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19119:3:15"
																},
																"nativeSrc": "19119:16:15",
																"nodeType": "YulFunctionCall",
																"src": "19119:16:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19110:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19110:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "18068:1073:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18098:4:15",
														"nodeType": "YulTypedName",
														"src": "18098:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18104:8:15",
														"nodeType": "YulTypedName",
														"src": "18104:8:15",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "18114:3:15",
														"nodeType": "YulTypedName",
														"src": "18114:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18122:5:15",
														"nodeType": "YulTypedName",
														"src": "18122:5:15",
														"type": ""
													}
												],
												"src": "18068:1073:15"
											},
											{
												"body": {
													"nativeSrc": "19211:217:15",
													"nodeType": "YulBlock",
													"src": "19211:217:15",
													"statements": [
														{
															"nativeSrc": "19221:31:15",
															"nodeType": "YulAssignment",
															"src": "19221:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19247:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19247:4:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19229:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "19229:17:15"
																},
																"nativeSrc": "19229:23:15",
																"nodeType": "YulFunctionCall",
																"src": "19229:23:15"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "19221:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19221:4:15"
																}
															]
														},
														{
															"nativeSrc": "19261:37:15",
															"nodeType": "YulAssignment",
															"src": "19261:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "19289:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "19289:8:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "19273:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "19273:15:15"
																},
																"nativeSrc": "19273:25:15",
																"nodeType": "YulFunctionCall",
																"src": "19273:25:15"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "19261:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "19261:8:15"
																}
															]
														},
														{
															"nativeSrc": "19308:113:15",
															"nodeType": "YulAssignment",
															"src": "19308:113:15",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19338:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19338:4:15"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "19344:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "19344:8:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19354:66:15",
																		"nodeType": "YulLiteral",
																		"src": "19354:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "19317:20:15",
																	"nodeType": "YulIdentifier",
																	"src": "19317:20:15"
																},
																"nativeSrc": "19317:104:15",
																"nodeType": "YulFunctionCall",
																"src": "19317:104:15"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19308:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19308:5:15"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "19147:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "19186:4:15",
														"nodeType": "YulTypedName",
														"src": "19186:4:15",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "19192:8:15",
														"nodeType": "YulTypedName",
														"src": "19192:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "19205:5:15",
														"nodeType": "YulTypedName",
														"src": "19205:5:15",
														"type": ""
													}
												],
												"src": "19147:281:15"
											},
											{
												"body": {
													"nativeSrc": "19462:152:15",
													"nodeType": "YulBlock",
													"src": "19462:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19479:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19479:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19482:77:15",
																		"nodeType": "YulLiteral",
																		"src": "19482:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19472:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19472:6:15"
																},
																"nativeSrc": "19472:88:15",
																"nodeType": "YulFunctionCall",
																"src": "19472:88:15"
															},
															"nativeSrc": "19472:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "19472:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19576:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19576:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19579:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19579:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19569:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19569:6:15"
																},
																"nativeSrc": "19569:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19569:15:15"
															},
															"nativeSrc": "19569:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19569:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19600:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19600:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19603:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19603:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19593:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19593:6:15"
																},
																"nativeSrc": "19593:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19593:15:15"
															},
															"nativeSrc": "19593:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "19593:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19434:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "19434:180:15"
											},
											{
												"body": {
													"nativeSrc": "19662:143:15",
													"nodeType": "YulBlock",
													"src": "19662:143:15",
													"statements": [
														{
															"nativeSrc": "19672:25:15",
															"nodeType": "YulAssignment",
															"src": "19672:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19695:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "19695:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19677:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "19677:17:15"
																},
																"nativeSrc": "19677:20:15",
																"nodeType": "YulFunctionCall",
																"src": "19677:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19672:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "19672:1:15"
																}
															]
														},
														{
															"nativeSrc": "19706:25:15",
															"nodeType": "YulAssignment",
															"src": "19706:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19729:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "19729:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19711:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "19711:17:15"
																},
																"nativeSrc": "19711:20:15",
																"nodeType": "YulFunctionCall",
																"src": "19711:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19706:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "19706:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19753:22:15",
																"nodeType": "YulBlock",
																"src": "19753:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19755:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19755:16:15"
																			},
																			"nativeSrc": "19755:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19755:18:15"
																		},
																		"nativeSrc": "19755:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19755:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19750:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "19750:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19743:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19743:6:15"
																},
																"nativeSrc": "19743:9:15",
																"nodeType": "YulFunctionCall",
																"src": "19743:9:15"
															},
															"nativeSrc": "19740:35:15",
															"nodeType": "YulIf",
															"src": "19740:35:15"
														},
														{
															"nativeSrc": "19785:14:15",
															"nodeType": "YulAssignment",
															"src": "19785:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19794:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "19794:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19797:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "19797:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19790:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19790:3:15"
																},
																"nativeSrc": "19790:9:15",
																"nodeType": "YulFunctionCall",
																"src": "19790:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19785:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "19785:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "19620:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19651:1:15",
														"nodeType": "YulTypedName",
														"src": "19651:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19654:1:15",
														"nodeType": "YulTypedName",
														"src": "19654:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "19660:1:15",
														"nodeType": "YulTypedName",
														"src": "19660:1:15",
														"type": ""
													}
												],
												"src": "19620:185:15"
											},
											{
												"body": {
													"nativeSrc": "19965:288:15",
													"nodeType": "YulBlock",
													"src": "19965:288:15",
													"statements": [
														{
															"nativeSrc": "19975:26:15",
															"nodeType": "YulAssignment",
															"src": "19975:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19987:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "19987:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19998:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19998:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19983:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19983:3:15"
																},
																"nativeSrc": "19983:18:15",
																"nodeType": "YulFunctionCall",
																"src": "19983:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19975:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19975:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20055:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20055:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20068:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20068:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20079:1:15",
																				"nodeType": "YulLiteral",
																				"src": "20079:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20064:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20064:3:15"
																		},
																		"nativeSrc": "20064:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20064:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20011:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20011:43:15"
																},
																"nativeSrc": "20011:71:15",
																"nodeType": "YulFunctionCall",
																"src": "20011:71:15"
															},
															"nativeSrc": "20011:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "20011:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20136:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20136:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20149:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20149:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20160:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20160:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20145:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20145:3:15"
																		},
																		"nativeSrc": "20145:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20145:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20092:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20092:43:15"
																},
																"nativeSrc": "20092:72:15",
																"nodeType": "YulFunctionCall",
																"src": "20092:72:15"
															},
															"nativeSrc": "20092:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "20092:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20218:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20218:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20231:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20231:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20242:2:15",
																				"nodeType": "YulLiteral",
																				"src": "20242:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20227:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20227:3:15"
																		},
																		"nativeSrc": "20227:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20227:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20174:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "20174:43:15"
																},
																"nativeSrc": "20174:72:15",
																"nodeType": "YulFunctionCall",
																"src": "20174:72:15"
															},
															"nativeSrc": "20174:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "20174:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19811:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19921:9:15",
														"nodeType": "YulTypedName",
														"src": "19921:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19933:6:15",
														"nodeType": "YulTypedName",
														"src": "19933:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19941:6:15",
														"nodeType": "YulTypedName",
														"src": "19941:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19949:6:15",
														"nodeType": "YulTypedName",
														"src": "19949:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19960:4:15",
														"nodeType": "YulTypedName",
														"src": "19960:4:15",
														"type": ""
													}
												],
												"src": "19811:442:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be an integer\")\n\n    }\n\n    function abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Total supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1405": [
									{
										"length": 32,
										"start": 2755
									},
									{
										"length": 32,
										"start": 3358
									},
									{
										"length": 32,
										"start": 3602
									}
								],
								"1407": [
									{
										"length": 32,
										"start": 2719
									},
									{
										"length": 32,
										"start": 3105
									},
									{
										"length": 32,
										"start": 3657
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061021a575f3560e01c806395d89b4111610123578063cefaaff6116100ab578063e08ba51a1161007a578063e08ba51a14610646578063e43252d714610662578063e58398361461067e578063eb91d37e146106ae578063f2fde38b146106cc5761021a565b8063cefaaff6146105ac578063d0516650146105c8578063da0239a6146105f8578063dd62ed3e146106165761021a565b8063a9059cbb116100f2578063a9059cbb14610506578063aba6370514610536578063bdd3d82514610554578063c802e3cd14610572578063cb4b73ab146105905761021a565b806395d89b411461047c5780639b19251a1461049a5780639d76ea58146104ca5780639dc341d0146104e85761021a565b806340c10f19116101a657806370a082311161017557806370a08231146103ea578063715018a61461041a5780638ab1d681146104245780638da5cb5b14610440578063902d55a51461045e5761021a565b806340c10f191461037457806354fd4d50146103905780635c975abb146103ae5780636290865d146103cc5761021a565b8063158b1a57116101ed578063158b1a57146102ba57806318160ddd146102ea57806323b872dd146103085780632d38024214610338578063313ce567146103565761021a565b806306fdde031461021e578063095ea7b31461023c57806312cae7af1461026c578063134e18f41461029c575b5f5ffd5b6102266106e8565b6040516102339190611a05565b60405180910390f35b61025660048036038101906102519190611ab6565b610778565b6040516102639190611b0e565b60405180910390f35b61028660048036038101906102819190611b27565b61079a565b6040516102939190611b61565b60405180910390f35b6102a46107ab565b6040516102b19190611b89565b60405180910390f35b6102d460048036038101906102cf9190611b27565b6107b2565b6040516102e19190611b61565b60405180910390f35b6102f26107bb565b6040516102ff9190611b61565b60405180910390f35b610322600480360381019061031d9190611ba2565b6107c4565b60405161032f9190611b0e565b60405180910390f35b61034061082d565b60405161034d9190611b61565b60405180910390f35b61035e610833565b60405161036b9190611c0d565b60405180910390f35b61038e60048036038101906103899190611ab6565b61083a565b005b6103986108bd565b6040516103a59190611a05565b60405180910390f35b6103b66108fa565b6040516103c39190611b0e565b60405180910390f35b6103d4610901565b6040516103e19190611b89565b60405180910390f35b61040460048036038101906103ff9190611b27565b610908565b6040516104119190611b61565b60405180910390f35b61042261094d565b005b61043e60048036038101906104399190611b27565b610960565b005b6104486109bf565b6040516104559190611b89565b60405180910390f35b6104666109e7565b6040516104739190611b61565b60405180910390f35b6104846109f0565b6040516104919190611a05565b60405180910390f35b6104b460048036038101906104af9190611b27565b610a80565b6040516104c19190611b0e565b60405180910390f35b6104d2610a9d565b6040516104df9190611b89565b60405180910390f35b6104f0610ac1565b6040516104fd9190611b89565b60405180910390f35b610520600480360381019061051b9190611ab6565b610ae5565b60405161052d9190611b0e565b60405180910390f35b61053e610b4c565b60405161054b9190611b89565b60405180910390f35b61055c610b53565b6040516105699190611b89565b60405180910390f35b61057a610b78565b6040516105879190611b61565b60405180910390f35b6105aa60048036038101906105a59190611b27565b610b7d565b005b6105c660048036038101906105c19190611c26565b610bdc565b005b6105e260048036038101906105dd9190611b27565b610ebb565b6040516105ef9190611b0e565b60405180910390f35b610600610ed8565b60405161060d9190611b61565b60405180910390f35b610630600480360381019061062b9190611c51565b610ef1565b60405161063d9190611b61565b60405180910390f35b610660600480360381019061065b9190611b27565b610f73565b005b61067c60048036038101906106779190611b27565b610fd3565b005b61069860048036038101906106939190611b27565b611033565b6040516106a59190611b0e565b60405180910390f35b6106b6611085565b6040516106c39190611b61565b60405180910390f35b6106e660048036038101906106e19190611b27565b611174565b005b6060600380546106f790611cbc565b80601f016020809104026020016040519081016040528092919081815260200182805461072390611cbc565b801561076e5780601f106107455761010080835404028352916020019161076e565b820191905f5260205f20905b81548152906001019060200180831161075157829003601f168201915b5050505050905090565b5f5f6107826111f8565b905061078f8185856111ff565b600191505092915050565b5f6107a482610908565b9050919050565b5f5f905090565b5f5f9050919050565b5f600254905090565b5f816fffffffffffffffffffffffffffffffff168214610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081090611d36565b60405180910390fd5b610824848484611211565b90509392505050565b60095481565b5f5f905090565b61084261123f565b64174876e800816009546108569190611d81565b1115610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e90611dfe565b60405180910390fd5b6108a182826112c6565b8060095f8282546108b29190611d81565b925050819055505050565b60606040518060400160405280600581526020017f312e302e30000000000000000000000000000000000000000000000000000000815250905090565b5f5f905090565b5f5f905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095561123f565b61095e5f611345565b565b61096861123f565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b64174876e80081565b6060600480546109ff90611cbc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2b90611cbc565b8015610a765780601f10610a4d57610100808354040283529160200191610a76565b820191905f5260205f20905b815481529060010190602001808311610a5957829003601f168201915b5050505050905090565b6006602052805f5260405f205f915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f816fffffffffffffffffffffffffffffffff168214610b3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3190611d36565b60405180910390fd5b610b448383611408565b905092915050565b5f30905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601481565b610b8561123f565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f8111610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590611e66565b60405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000009050818173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610c7e929190611e84565b602060405180830381865afa158015610c99573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cbd9190611ebf565b1015610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf590611f34565b60405180910390fd5b5f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd337f0000000000000000000000000000000000000000000000000000000000000000866040518463ffffffff1660e01b8152600401610d5c93929190611f52565b6020604051808303815f875af1158015610d78573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9c9190611fb1565b905080610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd590612026565b60405180910390fd5b5f601484610dec9190612044565b9050610df833826112c6565b8060095f828254610e099190611d81565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167fc95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd86604051610ead9190611b61565b60405180910390a350505050565b6007602052805f5260405f205f915054906101000a900460ff1681565b5f60095464174876e800610eec9190612085565b905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610f7b61123f565b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610fdb61123f565b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156110f5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190612179565b50505050505090505f780100000000000000000000000000000000000000000000000060028373ffffffffffffffffffffffffffffffffffffffff1661115f9190612345565b61116991906123bc565b905080935050505090565b61117c61123f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ec575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e39190611b89565b60405180910390fd5b6111f581611345565b50565b5f33905090565b61120c838383600161142a565b505050565b5f5f61121b6111f8565b90506112288582856115f9565b61123385858561168c565b60019150509392505050565b6112476111f8565b73ffffffffffffffffffffffffffffffffffffffff166112656109bf565b73ffffffffffffffffffffffffffffffffffffffff16146112c4576112886111f8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112bb9190611b89565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611336575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161132d9190611b89565b60405180910390fd5b6113415f838361177c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f6114126111f8565b905061141f81858561168c565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361149a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114919190611b89565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361150a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115019190611b89565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156115f3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115ea9190611b61565b60405180910390a35b50505050565b5f6116048484610ef1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156116865781811015611677578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161166e939291906123ec565b60405180910390fd5b61168584848484035f61142a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116fc575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116f39190611b89565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361176c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117639190611b89565b60405180910390fd5b61177783838361177c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117cc578060025f8282546117c09190611d81565b9250508190555061189a565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611855578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161184c939291906123ec565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118e1578060025f828254039250508190555061192b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119889190611b61565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6119d782611995565b6119e1818561199f565b93506119f18185602086016119af565b6119fa816119bd565b840191505092915050565b5f6020820190508181035f830152611a1d81846119cd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611a5282611a29565b9050919050565b611a6281611a48565b8114611a6c575f5ffd5b50565b5f81359050611a7d81611a59565b92915050565b5f819050919050565b611a9581611a83565b8114611a9f575f5ffd5b50565b5f81359050611ab081611a8c565b92915050565b5f5f60408385031215611acc57611acb611a25565b5b5f611ad985828601611a6f565b9250506020611aea85828601611aa2565b9150509250929050565b5f8115159050919050565b611b0881611af4565b82525050565b5f602082019050611b215f830184611aff565b92915050565b5f60208284031215611b3c57611b3b611a25565b5b5f611b4984828501611a6f565b91505092915050565b611b5b81611a83565b82525050565b5f602082019050611b745f830184611b52565b92915050565b611b8381611a48565b82525050565b5f602082019050611b9c5f830184611b7a565b92915050565b5f5f5f60608486031215611bb957611bb8611a25565b5b5f611bc686828701611a6f565b9350506020611bd786828701611a6f565b9250506040611be886828701611aa2565b9150509250925092565b5f60ff82169050919050565b611c0781611bf2565b82525050565b5f602082019050611c205f830184611bfe565b92915050565b5f60208284031215611c3b57611c3a611a25565b5b5f611c4884828501611aa2565b91505092915050565b5f5f60408385031215611c6757611c66611a25565b5b5f611c7485828601611a6f565b9250506020611c8585828601611a6f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611cd357607f821691505b602082108103611ce657611ce5611c8f565b5b50919050565b7f416d6f756e74206d75737420626520616e20696e7465676572000000000000005f82015250565b5f611d2060198361199f565b9150611d2b82611cec565b602082019050919050565b5f6020820190508181035f830152611d4d81611d14565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d8b82611a83565b9150611d9683611a83565b9250828201905080821115611dae57611dad611d54565b5b92915050565b7f546f74616c20737570706c7920657863656564656400000000000000000000005f82015250565b5f611de860158361199f565b9150611df382611db4565b602082019050919050565b5f6020820190508181035f830152611e1581611ddc565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f611e50601d8361199f565b9150611e5b82611e1c565b602082019050919050565b5f6020820190508181035f830152611e7d81611e44565b9050919050565b5f604082019050611e975f830185611b7a565b611ea46020830184611b7a565b9392505050565b5f81519050611eb981611a8c565b92915050565b5f60208284031215611ed457611ed3611a25565b5b5f611ee184828501611eab565b91505092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611f1e60168361199f565b9150611f2982611eea565b602082019050919050565b5f6020820190508181035f830152611f4b81611f12565b9050919050565b5f606082019050611f655f830186611b7a565b611f726020830185611b7a565b611f7f6040830184611b52565b949350505050565b611f9081611af4565b8114611f9a575f5ffd5b50565b5f81519050611fab81611f87565b92915050565b5f60208284031215611fc657611fc5611a25565b5b5f611fd384828501611f9d565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f61201060158361199f565b915061201b82611fdc565b602082019050919050565b5f6020820190508181035f83015261203d81612004565b9050919050565b5f61204e82611a83565b915061205983611a83565b925082820261206781611a83565b9150828204841483151761207e5761207d611d54565b5b5092915050565b5f61208f82611a83565b915061209a83611a83565b92508282039050818111156120b2576120b1611d54565b5b92915050565b6120c181611a29565b81146120cb575f5ffd5b50565b5f815190506120dc816120b8565b92915050565b5f8160020b9050919050565b6120f7816120e2565b8114612101575f5ffd5b50565b5f81519050612112816120ee565b92915050565b5f61ffff82169050919050565b61212e81612118565b8114612138575f5ffd5b50565b5f8151905061214981612125565b92915050565b61215881611bf2565b8114612162575f5ffd5b50565b5f815190506121738161214f565b92915050565b5f5f5f5f5f5f5f60e0888a03121561219457612193611a25565b5b5f6121a18a828b016120ce565b97505060206121b28a828b01612104565b96505060406121c38a828b0161213b565b95505060606121d48a828b0161213b565b94505060806121e58a828b0161213b565b93505060a06121f68a828b01612165565b92505060c06122078a828b01611f9d565b91505092959891949750929550565b5f8160011c9050919050565b5f5f8291508390505b600185111561226b5780860481111561224757612246611d54565b5b60018516156122565780820291505b808102905061226485612216565b945061222b565b94509492505050565b5f82612283576001905061233e565b81612290575f905061233e565b81600181146122a657600281146122b0576122df565b600191505061233e565b60ff8411156122c2576122c1611d54565b5b8360020a9150848211156122d9576122d8611d54565b5b5061233e565b5060208310610133831016604e8410600b84101617156123145782820a90508381111561230f5761230e611d54565b5b61233e565b6123218484846001612222565b9250905081840481111561233857612337611d54565b5b81810290505b9392505050565b5f61234f82611a83565b915061235a83611bf2565b92506123877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612274565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6123c682611a83565b91506123d183611a83565b9250826123e1576123e061238f565b5b828204905092915050565b5f6060820190506123ff5f830186611b7a565b61240c6020830185611b52565b6124196040830184611b52565b94935050505056fea2646970667358221220b4c4abeed4a24a7f7be7d8d6f37e07b98b30a82fc06e80f791e8e821aec808f064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xCEFAAFF6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE08BA51A GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE08BA51A EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6CC JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xCEFAAFF6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xD0516650 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x616 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xABA63705 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xBDD3D825 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0xC802E3CD EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xCB4B73AB EQ PUSH2 0x590 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x9DC341D0 EQ PUSH2 0x4E8 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x45E JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x6290865D EQ PUSH2 0x3CC JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x158B1A57 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x158B1A57 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x2D380242 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x356 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x12CAE7AF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x134E18F4 EQ PUSH2 0x29C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x226 PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x7AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D4 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422 PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH2 0x9BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x484 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D2 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F0 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53E PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55C PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57A PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xB7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DD SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x600 PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x630 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63D SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x660 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x698 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F7 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x723 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x745 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x751 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x782 PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x78F DUP2 DUP6 DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A4 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0x819 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x810 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 PUSH2 0x1211 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x842 PUSH2 0x123F JUMP JUMPDEST PUSH5 0x174876E800 DUP2 PUSH1 0x9 SLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST GT ISZERO PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88E SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 DUP3 DUP3 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x95E PUSH0 PUSH2 0x1345 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x968 PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH5 0x174876E800 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9FF SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2B SWAP1 PUSH2 0x1CBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA76 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA76 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA59 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 EQ PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB31 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB44 DUP4 DUP4 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH2 0xB85 PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP DUP2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7E SWAP3 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC99 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x1EBF JUMP JUMPDEST LT ISZERO PUSH2 0xCFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP1 PUSH2 0x1F34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD5 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x14 DUP5 PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0xDF8 CALLER DUP3 PUSH2 0x12C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC95D558E25335222B51E6424166172914E7CE4404A9647D3631EF320294081FD DUP7 PUSH1 0x40 MLOAD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD PUSH5 0x174876E800 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x123F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xFDB PUSH2 0x123F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1119 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH1 0x2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x117C PUSH2 0x123F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x1345 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x120C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x142A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x121B PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x1228 DUP6 DUP3 DUP6 PUSH2 0x15F9 JUMP JUMPDEST PUSH2 0x1233 DUP6 DUP6 DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1247 PUSH2 0x11F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1265 PUSH2 0x9BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12C4 JUMPI PUSH2 0x1288 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BB SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1336 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1341 PUSH0 DUP4 DUP4 PUSH2 0x177C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1412 PUSH2 0x11F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x141F DUP2 DUP6 DUP6 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x149A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x15F3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP5 DUP5 PUSH2 0xEF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1677 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1685 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x142A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x176C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1777 DUP4 DUP4 DUP4 PUSH2 0x177C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17C0 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x189A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1855 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18E1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x192B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1988 SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D7 DUP3 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x19E1 DUP2 DUP6 PUSH2 0x199F JUMP JUMPDEST SWAP4 POP PUSH2 0x19F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x19FA DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A1D DUP2 DUP5 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 DUP3 PUSH2 0x1A29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x1A48 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A7D DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A95 DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB0 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B21 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3C JUMPI PUSH2 0x1B3B PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B49 DUP5 DUP3 DUP6 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5B DUP2 PUSH2 0x1A83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B74 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B83 DUP2 PUSH2 0x1A48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B9C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH2 0x1BB8 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC6 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C07 DUP2 PUSH2 0x1BF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C20 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3B JUMPI PUSH2 0x1C3A PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C48 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C67 JUMPI PUSH2 0x1C66 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C74 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C85 DUP6 DUP3 DUP7 ADD PUSH2 0x1A6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CE6 JUMPI PUSH2 0x1CE5 PUSH2 0x1C8F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520616E20696E746567657200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D20 PUSH1 0x19 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D4D DUP2 PUSH2 0x1D14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D8B DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D96 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F74616C20737570706C792065786365656465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE8 PUSH1 0x15 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF3 DUP3 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1DDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E50 PUSH1 0x1D DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5B DUP3 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7D DUP2 PUSH2 0x1E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E97 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1EA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B7A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EB9 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED4 JUMPI PUSH2 0x1ED3 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1EAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1E PUSH1 0x16 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F29 DUP3 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F4B DUP2 PUSH2 0x1F12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F65 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1F72 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x1F7F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F90 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FAB DUP2 PUSH2 0x1F87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC5 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FD3 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 PUSH1 0x15 DUP4 PUSH2 0x199F JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203D DUP2 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204E DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x2059 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2067 DUP2 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x207E JUMPI PUSH2 0x207D PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x208F DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x209A DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x20B2 JUMPI PUSH2 0x20B1 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20DC DUP2 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x20E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2112 DUP2 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x212E DUP2 PUSH2 0x2118 JUMP JUMPDEST DUP2 EQ PUSH2 0x2138 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2149 DUP2 PUSH2 0x2125 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2158 DUP2 PUSH2 0x1BF2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2162 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2173 DUP2 PUSH2 0x214F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A1 DUP11 DUP3 DUP12 ADD PUSH2 0x20CE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x21B2 DUP11 DUP3 DUP12 ADD PUSH2 0x2104 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x21C3 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x21D4 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x21E5 DUP11 DUP3 DUP12 ADD PUSH2 0x213B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x21F6 DUP11 DUP3 DUP12 ADD PUSH2 0x2165 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2207 DUP11 DUP3 DUP12 ADD PUSH2 0x1F9D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x226B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2256 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2264 DUP6 PUSH2 0x2216 JUMP JUMPDEST SWAP5 POP PUSH2 0x222B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2283 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP2 PUSH2 0x2290 JUMPI PUSH0 SWAP1 POP PUSH2 0x233E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x22A6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x22B0 JUMPI PUSH2 0x22DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x233E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x22D9 JUMPI PUSH2 0x22D8 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST POP PUSH2 0x233E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2314 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST PUSH2 0x233E JUMP JUMPDEST PUSH2 0x2321 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2222 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2338 JUMPI PUSH2 0x2337 PUSH2 0x1D54 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x234F DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x235A DUP4 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 POP PUSH2 0x2387 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23C6 DUP3 PUSH2 0x1A83 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D1 DUP4 PUSH2 0x1A83 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23E1 JUMPI PUSH2 0x23E0 PUSH2 0x238F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23FF PUSH0 DUP4 ADD DUP7 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0x240C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x2419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xAB RETURNCONTRACT 0xD4 LOG2 BLOBBASEFEE PUSH32 0x7BE7D8D6F37E07B98B30A82FC06E80F791E8E821AEC808F064736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "337:5813:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4450:110:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2620:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3065:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3588:316:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4308:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3954:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2513:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2840:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2733:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1845:108:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;390:54:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:41:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;809:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3259:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2404:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4914:1122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;559:38;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2249:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1982:91:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1705:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2935:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4595:276;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;4450:110:13:-;4510:7;4537:15;4547:4;4537:9;:15::i;:::-;4530:22;;4450:110;;;:::o;2620:105::-;2680:7;2715:1;2700:17;;2620:105;:::o;3065:114::-;3143:7;3170:1;3163:8;;3065:114;;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;3588:316:13:-;3686:4;3795:6;3779:24;;3769:6;:34;3761:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3851:45;3870:6;3878:9;3889:6;3851:18;:45::i;:::-;3844:52;;3588:316;;;;;:::o;677:27::-;;;;:::o;4308:92::-;4366:5;4391:1;4384:8;;4308:92;:::o;3954:267::-;1531:13:0;:11;:13::i;:::-;429:15:13::1;4104:6;4089:12;;:21;;;;:::i;:::-;:37;;4081:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4163:17;4169:2;4173:6;4163:5;:17::i;:::-;4207:6;4191:12;;:22;;;;;;;:::i;:::-;;;;;;;;3954:267:::0;;:::o;2513:99::-;2564:13;2590:14;;;;;;;;;;;;;;;;;;;2513:99;:::o;2840:87::-;2890:4;2914:5;2907:12;;2840:87;:::o;2733:99::-;2787:7;2822:1;2807:17;;2733:99;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1845:108:13:-;1531:13:0;:11;:13::i;:::-;1940:5:13::1;1920:9;:17;1930:6;1920:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1845:108:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;390:54:13:-;429:15;390:54;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;498:41:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;809:37::-;;;:::o;739:41::-;;;:::o;3259:288::-;3337:4;3450:6;3434:24;;3424:6;:34;3416:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3506:33;3521:9;3532:6;3506:14;:33::i;:::-;3499:40;;3259:288;;;;:::o;2404:101::-;2457:7;2492:4;2477:20;;2404:101;:::o;620:26::-;;;;;;;;;;;;;:::o;885:39::-;922:2;885:39;:::o;2102:94::-;1531:13:0;:11;:13::i;:::-;2183:5:13::1;2168:6;:12;2175:4;2168:12;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;2102:94:::0;:::o;4914:1122::-;5054:1;5045:6;:10;5037:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5316:12;5338;5316:35;;5542:6;5496:5;:15;;;5512:10;5532:4;5496:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;5488:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;5634:12;5649:5;:18;;;5668:10;5680:16;5698:6;5649:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5634:71;;5724:7;5716:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5815:17;922:2;5835:6;:19;;;;:::i;:::-;5815:39;;5865:28;5871:10;5883:9;5865:5;:28::i;:::-;5920:9;5904:12;;:25;;;;;;;:::i;:::-;;;;;;;;6003:16;5972:56;;5989:12;5972:56;;;6021:6;5972:56;;;;;;:::i;:::-;;;;;;;;4964:1072;;;4914:1122;:::o;559:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;2249:112::-;2299:7;2341:12;;429:15;2326:27;;;;:::i;:::-;2319:34;;2249:112;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1982:91:13:-;1531:13:0;:11;:13::i;:::-;2061:4:13::1;2046:6;:12;2053:4;2046:12;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;1982:91:::0;:::o;1705:102::-;1531:13:0;:11;:13::i;:::-;1795:4:13::1;1775:9;:17;1785:6;1775:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1705:102:::0;:::o;2935:122::-;3006:4;3030:6;:19;3037:11;3030:19;;;;;;;;;;;;;;;;;;;;;;;;;3023:26;;2935:122;;;:::o;4595:276::-;4645:7;4665:19;4702:11;;;;;;;;;;;4665:49;;4726:20;4762:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4725:49;;;;;;;;4785:13;4831:8;4826:1;4809:12;4801:21;;:26;;;;:::i;:::-;:39;;;;:::i;:::-;4785:55;;4858:5;4851:12;;;;;4595:276;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:15:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:118::-;4113:24;4131:5;4113:24;:::i;:::-;4108:3;4101:37;4026:118;;:::o;4150:222::-;4243:4;4281:2;4270:9;4266:18;4258:26;;4294:71;4362:1;4351:9;4347:17;4338:6;4294:71;:::i;:::-;4150:222;;;;:::o;4378:619::-;4455:6;4463;4471;4520:2;4508:9;4499:7;4495:23;4491:32;4488:119;;;4526:79;;:::i;:::-;4488:119;4646:1;4671:53;4716:7;4707:6;4696:9;4692:22;4671:53;:::i;:::-;4661:63;;4617:117;4773:2;4799:53;4844:7;4835:6;4824:9;4820:22;4799:53;:::i;:::-;4789:63;;4744:118;4901:2;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4872:118;4378:619;;;;;:::o;5003:86::-;5038:7;5078:4;5071:5;5067:16;5056:27;;5003:86;;;:::o;5095:112::-;5178:22;5194:5;5178:22;:::i;:::-;5173:3;5166:35;5095:112;;:::o;5213:214::-;5302:4;5340:2;5329:9;5325:18;5317:26;;5353:67;5417:1;5406:9;5402:17;5393:6;5353:67;:::i;:::-;5213:214;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:175::-;6900:27;6896:1;6888:6;6884:14;6877:51;6760:175;:::o;6941:366::-;7083:3;7104:67;7168:2;7163:3;7104:67;:::i;:::-;7097:74;;7180:93;7269:3;7180:93;:::i;:::-;7298:2;7293:3;7289:12;7282:19;;6941:366;;;:::o;7313:419::-;7479:4;7517:2;7506:9;7502:18;7494:26;;7566:9;7560:4;7556:20;7552:1;7541:9;7537:17;7530:47;7594:131;7720:4;7594:131;:::i;:::-;7586:139;;7313:419;;;:::o;7738:180::-;7786:77;7783:1;7776:88;7883:4;7880:1;7873:15;7907:4;7904:1;7897:15;7924:191;7964:3;7983:20;8001:1;7983:20;:::i;:::-;7978:25;;8017:20;8035:1;8017:20;:::i;:::-;8012:25;;8060:1;8057;8053:9;8046:16;;8081:3;8078:1;8075:10;8072:36;;;8088:18;;:::i;:::-;8072:36;7924:191;;;;:::o;8121:171::-;8261:23;8257:1;8249:6;8245:14;8238:47;8121:171;:::o;8298:366::-;8440:3;8461:67;8525:2;8520:3;8461:67;:::i;:::-;8454:74;;8537:93;8626:3;8537:93;:::i;:::-;8655:2;8650:3;8646:12;8639:19;;8298:366;;;:::o;8670:419::-;8836:4;8874:2;8863:9;8859:18;8851:26;;8923:9;8917:4;8913:20;8909:1;8898:9;8894:17;8887:47;8951:131;9077:4;8951:131;:::i;:::-;8943:139;;8670:419;;;:::o;9095:179::-;9235:31;9231:1;9223:6;9219:14;9212:55;9095:179;:::o;9280:366::-;9422:3;9443:67;9507:2;9502:3;9443:67;:::i;:::-;9436:74;;9519:93;9608:3;9519:93;:::i;:::-;9637:2;9632:3;9628:12;9621:19;;9280:366;;;:::o;9652:419::-;9818:4;9856:2;9845:9;9841:18;9833:26;;9905:9;9899:4;9895:20;9891:1;9880:9;9876:17;9869:47;9933:131;10059:4;9933:131;:::i;:::-;9925:139;;9652:419;;;:::o;10077:332::-;10198:4;10236:2;10225:9;10221:18;10213:26;;10249:71;10317:1;10306:9;10302:17;10293:6;10249:71;:::i;:::-;10330:72;10398:2;10387:9;10383:18;10374:6;10330:72;:::i;:::-;10077:332;;;;;:::o;10415:143::-;10472:5;10503:6;10497:13;10488:22;;10519:33;10546:5;10519:33;:::i;:::-;10415:143;;;;:::o;10564:351::-;10634:6;10683:2;10671:9;10662:7;10658:23;10654:32;10651:119;;;10689:79;;:::i;:::-;10651:119;10809:1;10834:64;10890:7;10881:6;10870:9;10866:22;10834:64;:::i;:::-;10824:74;;10780:128;10564:351;;;;:::o;10921:172::-;11061:24;11057:1;11049:6;11045:14;11038:48;10921:172;:::o;11099:366::-;11241:3;11262:67;11326:2;11321:3;11262:67;:::i;:::-;11255:74;;11338:93;11427:3;11338:93;:::i;:::-;11456:2;11451:3;11447:12;11440:19;;11099:366;;;:::o;11471:419::-;11637:4;11675:2;11664:9;11660:18;11652:26;;11724:9;11718:4;11714:20;11710:1;11699:9;11695:17;11688:47;11752:131;11878:4;11752:131;:::i;:::-;11744:139;;11471:419;;;:::o;11896:442::-;12045:4;12083:2;12072:9;12068:18;12060:26;;12096:71;12164:1;12153:9;12149:17;12140:6;12096:71;:::i;:::-;12177:72;12245:2;12234:9;12230:18;12221:6;12177:72;:::i;:::-;12259;12327:2;12316:9;12312:18;12303:6;12259:72;:::i;:::-;11896:442;;;;;;:::o;12344:116::-;12414:21;12429:5;12414:21;:::i;:::-;12407:5;12404:32;12394:60;;12450:1;12447;12440:12;12394:60;12344:116;:::o;12466:137::-;12520:5;12551:6;12545:13;12536:22;;12567:30;12591:5;12567:30;:::i;:::-;12466:137;;;;:::o;12609:345::-;12676:6;12725:2;12713:9;12704:7;12700:23;12696:32;12693:119;;;12731:79;;:::i;:::-;12693:119;12851:1;12876:61;12929:7;12920:6;12909:9;12905:22;12876:61;:::i;:::-;12866:71;;12822:125;12609:345;;;;:::o;12960:171::-;13100:23;13096:1;13088:6;13084:14;13077:47;12960:171;:::o;13137:366::-;13279:3;13300:67;13364:2;13359:3;13300:67;:::i;:::-;13293:74;;13376:93;13465:3;13376:93;:::i;:::-;13494:2;13489:3;13485:12;13478:19;;13137:366;;;:::o;13509:419::-;13675:4;13713:2;13702:9;13698:18;13690:26;;13762:9;13756:4;13752:20;13748:1;13737:9;13733:17;13726:47;13790:131;13916:4;13790:131;:::i;:::-;13782:139;;13509:419;;;:::o;13934:410::-;13974:7;13997:20;14015:1;13997:20;:::i;:::-;13992:25;;14031:20;14049:1;14031:20;:::i;:::-;14026:25;;14086:1;14083;14079:9;14108:30;14126:11;14108:30;:::i;:::-;14097:41;;14287:1;14278:7;14274:15;14271:1;14268:22;14248:1;14241:9;14221:83;14198:139;;14317:18;;:::i;:::-;14198:139;13982:362;13934:410;;;;:::o;14350:194::-;14390:4;14410:20;14428:1;14410:20;:::i;:::-;14405:25;;14444:20;14462:1;14444:20;:::i;:::-;14439:25;;14488:1;14485;14481:9;14473:17;;14512:1;14506:4;14503:11;14500:37;;;14517:18;;:::i;:::-;14500:37;14350:194;;;;:::o;14550:122::-;14623:24;14641:5;14623:24;:::i;:::-;14616:5;14613:35;14603:63;;14662:1;14659;14652:12;14603:63;14550:122;:::o;14678:143::-;14735:5;14766:6;14760:13;14751:22;;14782:33;14809:5;14782:33;:::i;:::-;14678:143;;;;:::o;14827:90::-;14862:7;14905:5;14902:1;14891:20;14880:31;;14827:90;;;:::o;14923:118::-;14994:22;15010:5;14994:22;:::i;:::-;14987:5;14984:33;14974:61;;15031:1;15028;15021:12;14974:61;14923:118;:::o;15047:139::-;15102:5;15133:6;15127:13;15118:22;;15149:31;15174:5;15149:31;:::i;:::-;15047:139;;;;:::o;15192:89::-;15228:7;15268:6;15261:5;15257:18;15246:29;;15192:89;;;:::o;15287:120::-;15359:23;15376:5;15359:23;:::i;:::-;15352:5;15349:34;15339:62;;15397:1;15394;15387:12;15339:62;15287:120;:::o;15413:141::-;15469:5;15500:6;15494:13;15485:22;;15516:32;15542:5;15516:32;:::i;:::-;15413:141;;;;:::o;15560:118::-;15631:22;15647:5;15631:22;:::i;:::-;15624:5;15621:33;15611:61;;15668:1;15665;15658:12;15611:61;15560:118;:::o;15684:139::-;15739:5;15770:6;15764:13;15755:22;;15786:31;15811:5;15786:31;:::i;:::-;15684:139;;;;:::o;15829:1271::-;15943:6;15951;15959;15967;15975;15983;15991;16040:3;16028:9;16019:7;16015:23;16011:33;16008:120;;;16047:79;;:::i;:::-;16008:120;16167:1;16192:64;16248:7;16239:6;16228:9;16224:22;16192:64;:::i;:::-;16182:74;;16138:128;16305:2;16331:62;16385:7;16376:6;16365:9;16361:22;16331:62;:::i;:::-;16321:72;;16276:127;16442:2;16468:63;16523:7;16514:6;16503:9;16499:22;16468:63;:::i;:::-;16458:73;;16413:128;16580:2;16606:63;16661:7;16652:6;16641:9;16637:22;16606:63;:::i;:::-;16596:73;;16551:128;16718:3;16745:63;16800:7;16791:6;16780:9;16776:22;16745:63;:::i;:::-;16735:73;;16689:129;16857:3;16884:62;16938:7;16929:6;16918:9;16914:22;16884:62;:::i;:::-;16874:72;;16828:128;16995:3;17022:61;17075:7;17066:6;17055:9;17051:22;17022:61;:::i;:::-;17012:71;;16966:127;15829:1271;;;;;;;;;;:::o;17106:102::-;17148:8;17195:5;17192:1;17188:13;17167:34;;17106:102;;;:::o;17214:848::-;17275:5;17282:4;17306:6;17297:15;;17330:5;17321:14;;17344:712;17365:1;17355:8;17352:15;17344:712;;;17460:4;17455:3;17451:14;17445:4;17442:24;17439:50;;;17469:18;;:::i;:::-;17439:50;17519:1;17509:8;17505:16;17502:451;;;17934:4;17927:5;17923:16;17914:25;;17502:451;17984:4;17978;17974:15;17966:23;;18014:32;18037:8;18014:32;:::i;:::-;18002:44;;17344:712;;;17214:848;;;;;;;:::o;18068:1073::-;18122:5;18313:8;18303:40;;18334:1;18325:10;;18336:5;;18303:40;18362:4;18352:36;;18379:1;18370:10;;18381:5;;18352:36;18448:4;18496:1;18491:27;;;;18532:1;18527:191;;;;18441:277;;18491:27;18509:1;18500:10;;18511:5;;;18527:191;18572:3;18562:8;18559:17;18556:43;;;18579:18;;:::i;:::-;18556:43;18628:8;18625:1;18621:16;18612:25;;18663:3;18656:5;18653:14;18650:40;;;18670:18;;:::i;:::-;18650:40;18703:5;;;18441:277;;18827:2;18817:8;18814:16;18808:3;18802:4;18799:13;18795:36;18777:2;18767:8;18764:16;18759:2;18753:4;18750:12;18746:35;18730:111;18727:246;;;18883:8;18877:4;18873:19;18864:28;;18918:3;18911:5;18908:14;18905:40;;;18925:18;;:::i;:::-;18905:40;18958:5;;18727:246;18998:42;19036:3;19026:8;19020:4;19017:1;18998:42;:::i;:::-;18983:57;;;;19072:4;19067:3;19063:14;19056:5;19053:25;19050:51;;;19081:18;;:::i;:::-;19050:51;19130:4;19123:5;19119:16;19110:25;;18068:1073;;;;;;:::o;19147:281::-;19205:5;19229:23;19247:4;19229:23;:::i;:::-;19221:31;;19273:25;19289:8;19273:25;:::i;:::-;19261:37;;19317:104;19354:66;19344:8;19338:4;19317:104;:::i;:::-;19308:113;;19147:281;;;;:::o;19434:180::-;19482:77;19479:1;19472:88;19579:4;19576:1;19569:15;19603:4;19600:1;19593:15;19620:185;19660:1;19677:20;19695:1;19677:20;:::i;:::-;19672:25;;19711:20;19729:1;19711:20;:::i;:::-;19706:25;;19750:1;19740:35;;19755:18;;:::i;:::-;19740:35;19797:1;19794;19790:9;19785:14;;19620:185;;;;:::o;19811:442::-;19960:4;19998:2;19987:9;19983:18;19975:26;;20011:71;20079:1;20068:9;20064:17;20055:6;20011:71;:::i;:::-;20092:72;20160:2;20149:9;20145:18;20136:6;20092:72;:::i;:::-;20174;20242:2;20231:9;20227:18;20218:6;20174:72;:::i;:::-;19811:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1860600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MINT_RATIO()": "436",
								"TOTAL_SUPPLY()": "458",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"balanceOfUser(address)": "2961",
								"compliance()": "491",
								"decimals()": "471",
								"freezeUser(address)": "infinite",
								"frozen(address)": "2900",
								"getCurrentPrice()": "infinite",
								"getFrozenTokens(address)": "686",
								"identityRegistry()": "492",
								"isFrozen(address)": "2958",
								"mint(address,uint256)": "infinite",
								"mintedAmount()": "2537",
								"name()": "infinite",
								"onchainID()": "446",
								"owner()": "2626",
								"paused()": "427",
								"remainingSupply()": "infinite",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"tokenAddress()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferAndMint(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferReceiver()": "infinite",
								"unfreezeUser(address)": "infinite",
								"uniswapPool()": "2597",
								"version()": "infinite",
								"whitelist(address)": "2901"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 954,
									"end": 1667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1112,
									"end": 1122,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "43434B546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1164,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1153,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1143,
									"end": 1160,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1143,
									"end": 1164,
									"modifierDepth": 2,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1135,
									"end": 1210,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1135,
									"end": 1210,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1258,
									"end": 1259,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1260,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1229,
									"end": 1260,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1229,
									"end": 1246,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1229,
									"end": 1260,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1229,
									"end": 1260,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1229,
									"end": 1260,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1221,
									"end": 1289,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1221,
									"end": 1289,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1333,
									"end": 1334,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1308,
									"end": 1335,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1308,
									"end": 1335,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1321,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1335,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1308,
									"end": 1335,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1335,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1300,
									"end": 1361,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1300,
									"end": 1361,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1419,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1431,
									"end": 1432,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 1432,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1419,
									"end": 1432,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1438,
									"end": 1448,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1438,
									"end": 1455,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1435,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1455,
									"modifierDepth": 2,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1504,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1477,
									"end": 1486,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1497,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1498,
									"end": 1499,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1487,
									"end": 1500,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1500,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1508,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1460,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1414,
									"end": 1520,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1603,
									"end": 1620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1584,
									"end": 1620,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1659,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1659,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1667,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 15,
									"value": "115"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3400,
									"end": 3406,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3414,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3422,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3465,
									"end": 3467,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 3453,
									"end": 3462,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3444,
									"end": 3451,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3440,
									"end": 3463,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3468,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 3433,
									"end": 3552,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3433,
									"end": 3552,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 3433,
									"end": 3552,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 3471,
									"end": 3550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 3471,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3433,
									"end": 3552,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 3433,
									"end": 3552,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3612,
									"end": 3613,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3601,
									"end": 3610,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3597,
									"end": 3614,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3591,
									"end": 3615,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3642,
									"end": 3660,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3634,
									"end": 3640,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3631,
									"end": 3661,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 3628,
									"end": 3745,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3628,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 3628,
									"end": 3745,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3743,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 3664,
									"end": 3743,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3743,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 3664,
									"end": 3743,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3628,
									"end": 3745,
									"name": "tag",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 3628,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3769,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 3850,
									"end": 3857,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3841,
									"end": 3847,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3830,
									"end": 3839,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 3826,
									"end": 3848,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3769,
									"end": 3858,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 3769,
									"end": 3858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3769,
									"end": 3858,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 3769,
									"end": 3858,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3759,
									"end": 3858,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3759,
									"end": 3858,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3562,
									"end": 3868,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3907,
									"end": 3909,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3933,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 3989,
									"end": 3996,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3980,
									"end": 3986,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3969,
									"end": 3978,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 3987,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3933,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 3933,
									"end": 3997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3933,
									"end": 3997,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 3933,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3923,
									"end": 3997,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3923,
									"end": 3997,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3878,
									"end": 4007,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4048,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 4072,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4128,
									"end": 4135,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4119,
									"end": 4125,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4108,
									"end": 4117,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 4104,
									"end": 4126,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4072,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 4072,
									"end": 4136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4072,
									"end": 4136,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4072,
									"end": 4136,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4136,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4062,
									"end": 4136,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4017,
									"end": 4146,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3287,
									"end": 4153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4159,
									"end": 4258,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 4159,
									"end": 4258,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4211,
									"end": 4217,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4245,
									"end": 4250,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4239,
									"end": 4251,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4229,
									"end": 4251,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4229,
									"end": 4251,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4159,
									"end": 4258,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4159,
									"end": 4258,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4159,
									"end": 4258,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4159,
									"end": 4258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4264,
									"end": 4444,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 4264,
									"end": 4444,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4312,
									"end": 4389,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4309,
									"end": 4310,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4390,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4409,
									"end": 4413,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 4406,
									"end": 4407,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 4399,
									"end": 4414,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4433,
									"end": 4437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4423,
									"end": 4438,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4770,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 4450,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4494,
									"end": 4500,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4531,
									"end": 4532,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4525,
									"end": 4529,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4521,
									"end": 4533,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4511,
									"end": 4533,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4511,
									"end": 4533,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4578,
									"end": 4579,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4572,
									"end": 4576,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4568,
									"end": 4580,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4599,
									"end": 4617,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4589,
									"end": 4670,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 4589,
									"end": 4670,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 4647,
									"end": 4653,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4643,
									"end": 4660,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4633,
									"end": 4660,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4633,
									"end": 4660,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4589,
									"end": 4670,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 4589,
									"end": 4670,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4709,
									"end": 4715,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4706,
									"end": 4720,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4686,
									"end": 4704,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4683,
									"end": 4721,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4764,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4680,
									"end": 4764,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 4736,
									"end": 4754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4764,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4680,
									"end": 4764,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4501,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4770,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4770,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4917,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 4776,
									"end": 4917,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4825,
									"end": 4829,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4848,
									"end": 4851,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4840,
									"end": 4851,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4840,
									"end": 4851,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4871,
									"end": 4874,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4868,
									"end": 4869,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4861,
									"end": 4875,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4905,
									"end": 4909,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4902,
									"end": 4903,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4892,
									"end": 4910,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 4884,
									"end": 4910,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4884,
									"end": 4910,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4917,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4917,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4917,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4776,
									"end": 4917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4923,
									"end": 5016,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 4923,
									"end": 5016,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4960,
									"end": 4966,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5007,
									"end": 5009,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5002,
									"end": 5004,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4995,
									"end": 5000,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4991,
									"end": 5005,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5010,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 4977,
									"end": 5010,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4977,
									"end": 5010,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4923,
									"end": 5016,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4923,
									"end": 5016,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4923,
									"end": 5016,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4923,
									"end": 5016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5066,
									"end": 5074,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5116,
									"end": 5121,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5110,
									"end": 5114,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5106,
									"end": 5122,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 5085,
									"end": 5122,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5085,
									"end": 5122,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5022,
									"end": 5129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 5242,
									"end": 5252,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5238,
									"end": 5256,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5277,
									"end": 5374,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 5307,
									"end": 5373,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5296,
									"end": 5305,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5277,
									"end": 5374,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5277,
									"end": 5374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5277,
									"end": 5374,
									"name": "tag",
									"source": 15,
									"value": "135"
								},
								{
									"begin": 5277,
									"end": 5374,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5395,
									"end": 5434,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5425,
									"end": 5433,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5414,
									"end": 5423,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5395,
									"end": 5434,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 5395,
									"end": 5434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5395,
									"end": 5434,
									"name": "tag",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5395,
									"end": 5434,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5383,
									"end": 5434,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 5383,
									"end": 5434,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5467,
									"end": 5471,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5463,
									"end": 5472,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5456,
									"end": 5461,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5452,
									"end": 5473,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5443,
									"end": 5473,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 5443,
									"end": 5473,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5506,
									"end": 5514,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5502,
									"end": 5521,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5495,
									"end": 5500,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5492,
									"end": 5522,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5482,
									"end": 5522,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5482,
									"end": 5522,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5211,
									"end": 5528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5211,
									"end": 5528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5534,
									"end": 5611,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 5534,
									"end": 5611,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5571,
									"end": 5578,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5600,
									"end": 5605,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5589,
									"end": 5605,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5589,
									"end": 5605,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5534,
									"end": 5611,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5534,
									"end": 5611,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5534,
									"end": 5611,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5534,
									"end": 5611,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5677,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 5617,
									"end": 5677,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5645,
									"end": 5648,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5666,
									"end": 5671,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5659,
									"end": 5671,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5659,
									"end": 5671,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5677,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5677,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5683,
									"end": 5825,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 5683,
									"end": 5825,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5733,
									"end": 5742,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5766,
									"end": 5819,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5784,
									"end": 5818,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5793,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "142"
								},
								{
									"begin": 5811,
									"end": 5816,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5793,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 5793,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5793,
									"end": 5817,
									"name": "tag",
									"source": 15,
									"value": "142"
								},
								{
									"begin": 5793,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5784,
									"end": 5818,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 5784,
									"end": 5818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5784,
									"end": 5818,
									"name": "tag",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5784,
									"end": 5818,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5766,
									"end": 5819,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 5766,
									"end": 5819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5766,
									"end": 5819,
									"name": "tag",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5766,
									"end": 5819,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5753,
									"end": 5819,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5753,
									"end": 5819,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5683,
									"end": 5825,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5683,
									"end": 5825,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5683,
									"end": 5825,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5683,
									"end": 5825,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5906,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 5831,
									"end": 5906,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5874,
									"end": 5877,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5895,
									"end": 5900,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5888,
									"end": 5900,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5888,
									"end": 5900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5906,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5906,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5906,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6181,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 5912,
									"end": 6181,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6022,
									"end": 6061,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 6053,
									"end": 6060,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6022,
									"end": 6061,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 6022,
									"end": 6061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6022,
									"end": 6061,
									"name": "tag",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 6022,
									"end": 6061,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6083,
									"end": 6174,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "146"
								},
								{
									"begin": 6132,
									"end": 6173,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 6156,
									"end": 6172,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6132,
									"end": 6173,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 6132,
									"end": 6173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6132,
									"end": 6173,
									"name": "tag",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 6132,
									"end": 6173,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6124,
									"end": 6130,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6117,
									"end": 6121,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6111,
									"end": 6122,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 6083,
									"end": 6174,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 6083,
									"end": 6174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6083,
									"end": 6174,
									"name": "tag",
									"source": 15,
									"value": "146"
								},
								{
									"begin": 6083,
									"end": 6174,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6077,
									"end": 6081,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6070,
									"end": 6175,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5988,
									"end": 6181,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6181,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6181,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6181,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6187,
									"end": 6260,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 6187,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6232,
									"end": 6235,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6254,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6246,
									"end": 6254,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6246,
									"end": 6254,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6187,
									"end": 6260,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6187,
									"end": 6260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6266,
									"end": 6455,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 6266,
									"end": 6455,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6343,
									"end": 6375,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 6343,
									"end": 6375,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 6343,
									"end": 6375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6343,
									"end": 6375,
									"name": "tag",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 6343,
									"end": 6375,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6384,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6434,
									"end": 6440,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6428,
									"end": 6432,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6384,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 6384,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6384,
									"end": 6449,
									"name": "tag",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 6384,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6319,
									"end": 6455,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6266,
									"end": 6455,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6266,
									"end": 6455,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6266,
									"end": 6455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6461,
									"end": 6647,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 6461,
									"end": 6647,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "tag",
									"source": 15,
									"value": "153"
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6538,
									"end": 6541,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6531,
									"end": 6536,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6528,
									"end": 6542,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6592,
									"end": 6631,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 6629,
									"end": 6630,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6622,
									"end": 6627,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6592,
									"end": 6631,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 6592,
									"end": 6631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6592,
									"end": 6631,
									"name": "tag",
									"source": 15,
									"value": "156"
								},
								{
									"begin": 6592,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6558,
									"end": 6563,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6554,
									"end": 6567,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6567,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6545,
									"end": 6567,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "153"
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "tag",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 6521,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6461,
									"end": 6647,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6461,
									"end": 6647,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6461,
									"end": 6647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6653,
									"end": 7196,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 6653,
									"end": 7196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6754,
									"end": 6756,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6749,
									"end": 6752,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6746,
									"end": 6757,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 7189,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "158"
								},
								{
									"begin": 6743,
									"end": 7189,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6788,
									"end": 6826,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 6820,
									"end": 6825,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6788,
									"end": 6826,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 6788,
									"end": 6826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6788,
									"end": 6826,
									"name": "tag",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 6788,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6872,
									"end": 6901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6890,
									"end": 6900,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6872,
									"end": 6901,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 6872,
									"end": 6901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6872,
									"end": 6901,
									"name": "tag",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 6872,
									"end": 6901,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6862,
									"end": 6870,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6858,
									"end": 6902,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7055,
									"end": 7057,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 7043,
									"end": 7053,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7040,
									"end": 7058,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 7037,
									"end": 7086,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 7037,
									"end": 7086,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "161"
								},
								{
									"begin": 7037,
									"end": 7086,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 7076,
									"end": 7084,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 7061,
									"end": 7084,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7061,
									"end": 7084,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7037,
									"end": 7086,
									"name": "tag",
									"source": 15,
									"value": "161"
								},
								{
									"begin": 7037,
									"end": 7086,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7099,
									"end": 7179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 7155,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "163"
								},
								{
									"begin": 7173,
									"end": 7176,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 7155,
									"end": 7177,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 7155,
									"end": 7177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7155,
									"end": 7177,
									"name": "tag",
									"source": 15,
									"value": "163"
								},
								{
									"begin": 7155,
									"end": 7177,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7145,
									"end": 7153,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7141,
									"end": 7178,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7128,
									"end": 7139,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7099,
									"end": 7179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 7099,
									"end": 7179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7099,
									"end": 7179,
									"name": "tag",
									"source": 15,
									"value": "162"
								},
								{
									"begin": 7099,
									"end": 7179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6758,
									"end": 7189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6758,
									"end": 7189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6743,
									"end": 7189,
									"name": "tag",
									"source": 15,
									"value": "158"
								},
								{
									"begin": 6743,
									"end": 7189,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6653,
									"end": 7196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6653,
									"end": 7196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6653,
									"end": 7196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6653,
									"end": 7196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7256,
									"end": 7264,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7306,
									"end": 7311,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7300,
									"end": 7304,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7296,
									"end": 7312,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 7275,
									"end": 7312,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7275,
									"end": 7312,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7202,
									"end": 7319,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7369,
									"end": 7375,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7402,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "166"
								},
								{
									"begin": 7450,
									"end": 7451,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7446,
									"end": 7452,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7438,
									"end": 7443,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 7435,
									"end": 7436,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 7431,
									"end": 7444,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7402,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 7402,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7402,
									"end": 7453,
									"name": "tag",
									"source": 15,
									"value": "166"
								},
								{
									"begin": 7402,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7398,
									"end": 7454,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 7483,
									"end": 7487,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7473,
									"end": 7488,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 7463,
									"end": 7488,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7463,
									"end": 7488,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7376,
									"end": 7494,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7325,
									"end": 7494,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7575,
									"end": 7579,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 7721,
									"end": 7750,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 7746,
									"end": 7749,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 7721,
									"end": 7750,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 7721,
									"end": 7750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7721,
									"end": 7750,
									"name": "tag",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 7721,
									"end": 7750,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7713,
									"end": 7750,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7713,
									"end": 7750,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7783,
									"end": 7786,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7780,
									"end": 7781,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 7776,
									"end": 7787,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 7770,
									"end": 7774,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7767,
									"end": 7788,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 7759,
									"end": 7788,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7759,
									"end": 7788,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7499,
									"end": 7794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7799,
									"end": 9194,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 7799,
									"end": 9194,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 7916,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 7949,
									"end": 7952,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 7916,
									"end": 7953,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 7916,
									"end": 7953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7916,
									"end": 7953,
									"name": "tag",
									"source": 15,
									"value": "170"
								},
								{
									"begin": 7916,
									"end": 7953,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8018,
									"end": 8036,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8010,
									"end": 8016,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8007,
									"end": 8037,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 8004,
									"end": 8060,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8004,
									"end": 8060,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 8004,
									"end": 8060,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8040,
									"end": 8058,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 8040,
									"end": 8058,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 8040,
									"end": 8058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8040,
									"end": 8058,
									"name": "tag",
									"source": 15,
									"value": "172"
								},
								{
									"begin": 8040,
									"end": 8058,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8004,
									"end": 8060,
									"name": "tag",
									"source": 15,
									"value": "171"
								},
								{
									"begin": 8004,
									"end": 8060,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8084,
									"end": 8122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "173"
								},
								{
									"begin": 8116,
									"end": 8120,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8110,
									"end": 8121,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 8084,
									"end": 8122,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 8084,
									"end": 8122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8084,
									"end": 8122,
									"name": "tag",
									"source": 15,
									"value": "173"
								},
								{
									"begin": 8084,
									"end": 8122,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8169,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "174"
								},
								{
									"begin": 8229,
									"end": 8235,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8221,
									"end": 8227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8215,
									"end": 8219,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8169,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 8169,
									"end": 8236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8169,
									"end": 8236,
									"name": "tag",
									"source": 15,
									"value": "174"
								},
								{
									"begin": 8169,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 8274,
									"end": 8291,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8274,
									"end": 8291,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8319,
									"end": 8321,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8311,
									"end": 8317,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 8336,
									"end": 8337,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8993,
									"end": 8994,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9010,
									"end": 9016,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 9007,
									"end": 9084,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 9007,
									"end": 9084,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 9007,
									"end": 9084,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 9059,
									"end": 9068,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9054,
									"end": 9057,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 9050,
									"end": 9069,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9044,
									"end": 9070,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9070,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9035,
									"end": 9070,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9007,
									"end": 9084,
									"name": "tag",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 9007,
									"end": 9084,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9110,
									"end": 9177,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "178"
								},
								{
									"begin": 9170,
									"end": 9176,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 9163,
									"end": 9168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9110,
									"end": 9177,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 9110,
									"end": 9177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9110,
									"end": 9177,
									"name": "tag",
									"source": 15,
									"value": "178"
								},
								{
									"begin": 9110,
									"end": 9177,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9104,
									"end": 9108,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 9097,
									"end": 9178,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8966,
									"end": 9188,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8301,
									"end": 9188,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 8301,
									"end": 9188,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "tag",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 8331,
									"end": 8949,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8383,
									"end": 8387,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8379,
									"end": 8388,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 8371,
									"end": 8377,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8367,
									"end": 8389,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8417,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 8449,
									"end": 8453,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8417,
									"end": 8454,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 8417,
									"end": 8454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8417,
									"end": 8454,
									"name": "tag",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 8417,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8476,
									"end": 8477,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "tag",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8504,
									"end": 8511,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8501,
									"end": 8502,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8498,
									"end": 8512,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "182"
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8583,
									"end": 8592,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8578,
									"end": 8581,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8574,
									"end": 8593,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8568,
									"end": 8594,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8560,
									"end": 8566,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8553,
									"end": 8595,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8626,
									"end": 8632,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8622,
									"end": 8636,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8612,
									"end": 8636,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 8612,
									"end": 8636,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8681,
									"end": 8683,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 8670,
									"end": 8679,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 8666,
									"end": 8684,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8653,
									"end": 8684,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 8653,
									"end": 8684,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8527,
									"end": 8531,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 8524,
									"end": 8525,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 8520,
									"end": 8532,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8515,
									"end": 8532,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 8515,
									"end": 8532,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "tag",
									"source": 15,
									"value": "182"
								},
								{
									"begin": 8490,
									"end": 8698,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8726,
									"end": 8732,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 8717,
									"end": 8724,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8714,
									"end": 8733,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 8711,
									"end": 8890,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 8711,
									"end": 8890,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 8711,
									"end": 8890,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 8784,
									"end": 8793,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8775,
									"end": 8794,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8769,
									"end": 8795,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 8827,
									"end": 8875,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "184"
								},
								{
									"begin": 8869,
									"end": 8873,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 8857,
									"end": 8874,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 8846,
									"end": 8855,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 8827,
									"end": 8875,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 8827,
									"end": 8875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 8827,
									"end": 8875,
									"name": "tag",
									"source": 15,
									"value": "184"
								},
								{
									"begin": 8827,
									"end": 8875,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8819,
									"end": 8825,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 8812,
									"end": 8876,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8734,
									"end": 8890,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8711,
									"end": 8890,
									"name": "tag",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 8711,
									"end": 8890,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8936,
									"end": 8937,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 8932,
									"end": 8933,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 8924,
									"end": 8930,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8920,
									"end": 8934,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 8916,
									"end": 8938,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 8910,
									"end": 8914,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 8903,
									"end": 8939,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 8338,
									"end": 8949,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8338,
									"end": 8949,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8338,
									"end": 8949,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 8301,
									"end": 9188,
									"name": "tag",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 8301,
									"end": 9188,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 8301,
									"end": 9188,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7891,
									"end": 9194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7891,
									"end": 9194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7891,
									"end": 9194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7799,
									"end": 9194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7799,
									"end": 9194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7799,
									"end": 9194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9200,
									"end": 9318,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 9200,
									"end": 9318,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9287,
									"end": 9311,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 9305,
									"end": 9310,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 9287,
									"end": 9311,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 9287,
									"end": 9311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9287,
									"end": 9311,
									"name": "tag",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 9287,
									"end": 9311,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9282,
									"end": 9285,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9275,
									"end": 9312,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9200,
									"end": 9318,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9200,
									"end": 9318,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9200,
									"end": 9318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9417,
									"end": 9421,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9455,
									"end": 9457,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9444,
									"end": 9453,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9440,
									"end": 9458,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9432,
									"end": 9458,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9432,
									"end": 9458,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9468,
									"end": 9539,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9525,
									"end": 9534,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 9521,
									"end": 9538,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9512,
									"end": 9518,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 9468,
									"end": 9539,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 9468,
									"end": 9539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9468,
									"end": 9539,
									"name": "tag",
									"source": 15,
									"value": "188"
								},
								{
									"begin": 9468,
									"end": 9539,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9324,
									"end": 9546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "tag",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9636,
									"end": 9647,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9670,
									"end": 9676,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9665,
									"end": 9668,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9658,
									"end": 9677,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9710,
									"end": 9714,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9705,
									"end": 9708,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9701,
									"end": 9715,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9686,
									"end": 9715,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9686,
									"end": 9715,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9552,
									"end": 9721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9727,
									"end": 9955,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 9727,
									"end": 9955,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 9867,
									"end": 9901,
									"name": "PUSH",
									"source": 15,
									"value": "4174206C65617374206F6E652077686974656C69737465642061646472657373"
								},
								{
									"begin": 9863,
									"end": 9864,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 9855,
									"end": 9861,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9851,
									"end": 9865,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9844,
									"end": 9902,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9936,
									"end": 9947,
									"name": "PUSH",
									"source": 15,
									"value": "2072657175697265640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9931,
									"end": 9933,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 9923,
									"end": 9929,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 9919,
									"end": 9934,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 9912,
									"end": 9948,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 9727,
									"end": 9955,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9727,
									"end": 9955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 9961,
									"end": 10327,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 9961,
									"end": 10327,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10103,
									"end": 10106,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10124,
									"end": 10191,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 10188,
									"end": 10190,
									"name": "PUSH",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 10183,
									"end": 10186,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 10124,
									"end": 10191,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 10124,
									"end": 10191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10124,
									"end": 10191,
									"name": "tag",
									"source": 15,
									"value": "192"
								},
								{
									"begin": 10124,
									"end": 10191,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10117,
									"end": 10191,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10117,
									"end": 10191,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10200,
									"end": 10293,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 10289,
									"end": 10292,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10200,
									"end": 10293,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 10200,
									"end": 10293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10200,
									"end": 10293,
									"name": "tag",
									"source": 15,
									"value": "193"
								},
								{
									"begin": 10200,
									"end": 10293,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10318,
									"end": 10320,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 10313,
									"end": 10316,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10309,
									"end": 10321,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10302,
									"end": 10321,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10302,
									"end": 10321,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9961,
									"end": 10327,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 9961,
									"end": 10327,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 9961,
									"end": 10327,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 9961,
									"end": 10327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10333,
									"end": 10752,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10333,
									"end": 10752,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10499,
									"end": 10503,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10537,
									"end": 10539,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 10526,
									"end": 10535,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10522,
									"end": 10540,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10514,
									"end": 10540,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10514,
									"end": 10540,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10586,
									"end": 10595,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10580,
									"end": 10584,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10576,
									"end": 10596,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 10572,
									"end": 10573,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10561,
									"end": 10570,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 10557,
									"end": 10574,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10550,
									"end": 10597,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10614,
									"end": 10745,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 10740,
									"end": 10744,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 10614,
									"end": 10745,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 10614,
									"end": 10745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10614,
									"end": 10745,
									"name": "tag",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 10614,
									"end": 10745,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10606,
									"end": 10745,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10606,
									"end": 10745,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10333,
									"end": 10752,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10333,
									"end": 10752,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10333,
									"end": 10752,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10333,
									"end": 10752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10758,
									"end": 10932,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 10758,
									"end": 10932,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 10898,
									"end": 10924,
									"name": "PUSH",
									"source": 15,
									"value": "496E76616C696420726563656976657220616464726573730000000000000000"
								},
								{
									"begin": 10894,
									"end": 10895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 10886,
									"end": 10892,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 10882,
									"end": 10896,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10875,
									"end": 10925,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 10758,
									"end": 10932,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10758,
									"end": 10932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10938,
									"end": 11304,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 10938,
									"end": 11304,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11080,
									"end": 11083,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11101,
									"end": 11168,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "198"
								},
								{
									"begin": 11165,
									"end": 11167,
									"name": "PUSH",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 11160,
									"end": 11163,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11101,
									"end": 11168,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 11101,
									"end": 11168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11101,
									"end": 11168,
									"name": "tag",
									"source": 15,
									"value": "198"
								},
								{
									"begin": 11101,
									"end": 11168,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11094,
									"end": 11168,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11094,
									"end": 11168,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11177,
									"end": 11270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "199"
								},
								{
									"begin": 11266,
									"end": 11269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11177,
									"end": 11270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 11177,
									"end": 11270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11177,
									"end": 11270,
									"name": "tag",
									"source": 15,
									"value": "199"
								},
								{
									"begin": 11177,
									"end": 11270,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11295,
									"end": 11297,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11290,
									"end": 11293,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11286,
									"end": 11298,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11279,
									"end": 11298,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11279,
									"end": 11298,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10938,
									"end": 11304,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 10938,
									"end": 11304,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 10938,
									"end": 11304,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 10938,
									"end": 11304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11310,
									"end": 11729,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 11310,
									"end": 11729,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11476,
									"end": 11480,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11514,
									"end": 11516,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 11503,
									"end": 11512,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11499,
									"end": 11517,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11491,
									"end": 11517,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11491,
									"end": 11517,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11563,
									"end": 11572,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 11557,
									"end": 11561,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 11553,
									"end": 11573,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 11549,
									"end": 11550,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11538,
									"end": 11547,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 11534,
									"end": 11551,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11527,
									"end": 11574,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 11591,
									"end": 11722,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "201"
								},
								{
									"begin": 11717,
									"end": 11721,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 11591,
									"end": 11722,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 11591,
									"end": 11722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11591,
									"end": 11722,
									"name": "tag",
									"source": 15,
									"value": "201"
								},
								{
									"begin": 11591,
									"end": 11722,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11583,
									"end": 11722,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11583,
									"end": 11722,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11310,
									"end": 11729,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11310,
									"end": 11729,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11310,
									"end": 11729,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11310,
									"end": 11729,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11735,
									"end": 11906,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 11735,
									"end": 11906,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 11875,
									"end": 11898,
									"name": "PUSH",
									"source": 15,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 11871,
									"end": 11872,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 11863,
									"end": 11869,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 11859,
									"end": 11873,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 11852,
									"end": 11899,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 11735,
									"end": 11906,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11735,
									"end": 11906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 11912,
									"end": 12278,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 11912,
									"end": 12278,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12054,
									"end": 12057,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 12075,
									"end": 12142,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "204"
								},
								{
									"begin": 12139,
									"end": 12141,
									"name": "PUSH",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 12134,
									"end": 12137,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 12075,
									"end": 12142,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "71"
								},
								{
									"begin": 12075,
									"end": 12142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 12075,
									"end": 12142,
									"name": "tag",
									"source": 15,
									"value": "204"
								},
								{
									"begin": 12075,
									"end": 12142,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12068,
									"end": 12142,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 12068,
									"end": 12142,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 12151,
									"end": 12244,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "205"
								},
								{
									"begin": 12240,
									"end": 12243,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 12151,
									"end": 12244,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 12151,
									"end": 12244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 12151,
									"end": 12244,
									"name": "tag",
									"source": 15,
									"value": "205"
								},
								{
									"begin": 12151,
									"end": 12244,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12269,
									"end": 12271,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 12264,
									"end": 12267,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 12260,
									"end": 12272,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 12253,
									"end": 12272,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 12253,
									"end": 12272,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11912,
									"end": 12278,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 11912,
									"end": 12278,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 11912,
									"end": 12278,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 11912,
									"end": 12278,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 12284,
									"end": 12703,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 12284,
									"end": 12703,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12450,
									"end": 12454,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 12488,
									"end": 12490,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 12477,
									"end": 12486,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 12473,
									"end": 12491,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 12465,
									"end": 12491,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 12465,
									"end": 12491,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 12537,
									"end": 12546,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 12531,
									"end": 12535,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 12527,
									"end": 12547,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 12523,
									"end": 12524,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 12512,
									"end": 12521,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 12508,
									"end": 12525,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 12501,
									"end": 12548,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 12565,
									"end": 12696,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "207"
								},
								{
									"begin": 12691,
									"end": 12695,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 12565,
									"end": 12696,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 12565,
									"end": 12696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 12565,
									"end": 12696,
									"name": "tag",
									"source": 15,
									"value": "207"
								},
								{
									"begin": 12565,
									"end": 12696,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12557,
									"end": 12696,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 12557,
									"end": 12696,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 12284,
									"end": 12703,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 12284,
									"end": 12703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 12284,
									"end": 12703,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 12284,
									"end": 12703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 12709,
									"end": 12889,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 12709,
									"end": 12889,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 12757,
									"end": 12834,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12754,
									"end": 12755,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 12747,
									"end": 12835,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 12854,
									"end": 12858,
									"name": "PUSH",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 12851,
									"end": 12852,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 12844,
									"end": 12859,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 12878,
									"end": 12882,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 12875,
									"end": 12876,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 12868,
									"end": 12883,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1407"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "1405"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 6150,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4abeed4a24a7f7be7d8d6f37e07b98b30a82fc06e80f791e8e821aec808f064736f6c634300081e0033",
									".code": [
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "CEFAAFF6"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "E08BA51A"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "E08BA51A"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "E43252D7"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "E5839836"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "EB91D37E"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "CEFAAFF6"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "D0516650"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "DA0239A6"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "ABA63705"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "BDD3D825"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "C802E3CD"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "CB4B73AB"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "9B19251A"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "9D76EA58"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "9DC341D0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "8AB1D681"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "902D55A5"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "40C10F19"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "54FD4D50"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "6290865D"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "158B1A57"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "158B1A57"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "2D380242"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "313CE567"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "12CAE7AF"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "134E18F4"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 6150,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 4450,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4450,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4450,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2620,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2620,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3065,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3065,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 3065,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3588,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3588,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 3588,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 677,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 677,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4308,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4308,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3954,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 3954,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2513,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 2513,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2840,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 2840,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2733,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2733,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1845,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1845,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 390,
											"end": 444,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 390,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 390,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 498,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 498,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 498,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 498,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 809,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 809,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 739,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 739,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3259,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3259,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 3259,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2404,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2404,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 620,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 620,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 885,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 885,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2102,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2102,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 4914,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 4914,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 559,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 559,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 559,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2249,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2249,
											"end": 2361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1982,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1982,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1705,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 1705,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2935,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2935,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 2935,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4595,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4595,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 4547,
											"end": 4551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 4537,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4530,
											"end": 4552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4530,
											"end": 4552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2700,
											"end": 2717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3163,
											"end": 3171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3761,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3761,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3870,
											"end": 3876,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 3887,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3851,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3896,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3851,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3844,
											"end": 3896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3588,
											"end": 3904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 677,
											"end": 704,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4308,
											"end": 4400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 429,
											"end": 444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "174876E800"
										},
										{
											"begin": 4104,
											"end": 4110,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4089,
											"end": 4101,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4089,
											"end": 4110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4089,
											"end": 4110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4126,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4081,
											"end": 4152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4081,
											"end": 4152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4169,
											"end": 4171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4179,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4163,
											"end": 4180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4163,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4191,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4191,
											"end": 4213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4213,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 4221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "312E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1936,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 444,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 429,
											"end": 444,
											"name": "PUSH",
											"source": 13,
											"value": "174876E800"
										},
										{
											"begin": 390,
											"end": 444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 390,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 498,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 498,
											"end": 539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 498,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1407"
										},
										{
											"begin": 809,
											"end": 846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 809,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1405"
										},
										{
											"begin": 739,
											"end": 780,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 739,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3337,
											"end": 3341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3458,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3416,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3416,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3521,
											"end": 3530,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3506,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 646,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 620,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 922,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 885,
											"end": 924,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 885,
											"end": 924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2179,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5037,
											"end": 5089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5037,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1407"
										},
										{
											"begin": 5316,
											"end": 5351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5542,
											"end": 5548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5496,
											"end": 5511,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 5512,
											"end": 5522,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 5496,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 5496,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5496,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5548,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5496,
											"end": 5548,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 5488,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5488,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5646,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 5668,
											"end": 5678,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5680,
											"end": 5696,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1405"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5649,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 5649,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 5649,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5724,
											"end": 5731,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5716,
											"end": 5757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5716,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 5835,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5835,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 5865,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5893,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 5865,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5916,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 5904,
											"end": 5916,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 5904,
											"end": 5929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6003,
											"end": 6019,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1405"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "1407"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "C95D558E25335222B51E6424166172914E7CE4404A9647D3631EF320294081FD"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 5972,
											"end": 6028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 6028,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 6036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 6036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 6036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 6036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 559,
											"end": 597,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 559,
											"end": 597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2353,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2341,
											"end": 2353,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 429,
											"end": 444,
											"name": "PUSH",
											"source": 13,
											"value": "174876E800"
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 2326,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2326,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1982,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1775,
											"end": 1784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1791,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3036,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3030,
											"end": 3049,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 3057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4726,
											"end": 4746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4772,
											"name": "PUSH",
											"source": 13,
											"value": "3850C7BD"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4762,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 4762,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4839,
											"name": "PUSH",
											"source": 13,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4809,
											"end": 4821,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4801,
											"end": 4827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4801,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4801,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4801,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4840,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4858,
											"end": 4863,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 4113,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 4113,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4101,
											"end": 4138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4026,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4347,
											"end": 4364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4294,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 4294,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4150,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4522,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4495,
											"end": 4518,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4491,
											"end": 4523,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 4526,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 4526,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 4488,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 4671,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 4671,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4661,
											"end": 4724,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4617,
											"end": 4734,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 4799,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 4799,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4852,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4744,
											"end": 4862,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4901,
											"end": 4903,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4872,
											"end": 4990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4378,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5038,
											"end": 5045,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 5071,
											"end": 5076,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5067,
											"end": 5083,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5056,
											"end": 5083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 5178,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 5178,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5166,
											"end": 5201,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5095,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5342,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5353,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6900,
											"end": 6927,
											"name": "PUSH",
											"source": 15,
											"value": "416D6F756E74206D75737420626520616E20696E746567657200000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6877,
											"end": 6928,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6760,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7083,
											"end": 7086,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "PUSH",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 7104,
											"end": 7171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 7104,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7097,
											"end": 7171,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 7269,
											"end": 7272,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 7180,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 7180,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7289,
											"end": 7301,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7519,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7502,
											"end": 7520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7494,
											"end": 7520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7566,
											"end": 7575,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7530,
											"end": 7577,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 7594,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 7594,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7313,
											"end": 7732,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7313,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7738,
											"end": 7918,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 7738,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7786,
											"end": 7863,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7783,
											"end": 7784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7776,
											"end": 7864,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7883,
											"end": 7887,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 7880,
											"end": 7881,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7873,
											"end": 7888,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7907,
											"end": 7911,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7912,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7964,
											"end": 7967,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 7983,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7978,
											"end": 8003,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7978,
											"end": 8003,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 8035,
											"end": 8036,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 8017,
											"end": 8037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8037,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 8017,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8012,
											"end": 8037,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8012,
											"end": 8037,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8060,
											"end": 8061,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8057,
											"end": 8058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8053,
											"end": 8062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8046,
											"end": 8062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8046,
											"end": 8062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8081,
											"end": 8084,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8075,
											"end": 8085,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 8088,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 8088,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 8072,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8121,
											"end": 8292,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 8121,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8261,
											"end": 8284,
											"name": "PUSH",
											"source": 15,
											"value": "546F74616C20737570706C792065786365656465640000000000000000000000"
										},
										{
											"begin": 8257,
											"end": 8258,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8245,
											"end": 8259,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8238,
											"end": 8285,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8121,
											"end": 8292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8121,
											"end": 8292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8664,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 8298,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8440,
											"end": 8443,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8461,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 8525,
											"end": 8527,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 8520,
											"end": 8523,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8461,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 8461,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8461,
											"end": 8528,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 8461,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8454,
											"end": 8528,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8454,
											"end": 8528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8537,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 8626,
											"end": 8629,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8537,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 8537,
											"end": 8630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8537,
											"end": 8630,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 8537,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8646,
											"end": 8658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8639,
											"end": 8658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8639,
											"end": 8658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8664,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 9089,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 8670,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8876,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8863,
											"end": 8872,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 8877,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8851,
											"end": 8877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8917,
											"end": 8921,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8898,
											"end": 8907,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8887,
											"end": 8934,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8951,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8951,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 8951,
											"end": 9082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8951,
											"end": 9082,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 8951,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8943,
											"end": 9082,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8943,
											"end": 9082,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 9089,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 9089,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 9089,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 9089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9095,
											"end": 9274,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 9095,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9235,
											"end": 9266,
											"name": "PUSH",
											"source": 15,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9229,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9233,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9212,
											"end": 9267,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9095,
											"end": 9274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9095,
											"end": 9274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9646,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 9280,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9422,
											"end": 9425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 15,
											"value": "1D"
										},
										{
											"begin": 9502,
											"end": 9505,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 9443,
											"end": 9510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9510,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 9443,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9436,
											"end": 9510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9436,
											"end": 9510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9519,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 9608,
											"end": 9611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9519,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 9519,
											"end": 9612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9519,
											"end": 9612,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 9519,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9637,
											"end": 9639,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9632,
											"end": 9635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9628,
											"end": 9640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9621,
											"end": 9640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9621,
											"end": 9640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9646,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9646,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9646,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9818,
											"end": 9822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9858,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9854,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9841,
											"end": 9859,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9833,
											"end": 9859,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9833,
											"end": 9859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9895,
											"end": 9915,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9889,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9876,
											"end": 9893,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9869,
											"end": 9916,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 10059,
											"end": 10063,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 9933,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 9933,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9925,
											"end": 10064,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9925,
											"end": 10064,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9652,
											"end": 10071,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9652,
											"end": 10071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10198,
											"end": 10202,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10238,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10225,
											"end": 10234,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10213,
											"end": 10239,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10213,
											"end": 10239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10293,
											"end": 10299,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 10249,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 10330,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 10330,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10077,
											"end": 10409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10472,
											"end": 10477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10497,
											"end": 10510,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10488,
											"end": 10510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10488,
											"end": 10510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 10546,
											"end": 10551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 10519,
											"end": 10552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10519,
											"end": 10552,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 10519,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10415,
											"end": 10558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10634,
											"end": 10640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10685,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10680,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10662,
											"end": 10669,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10658,
											"end": 10681,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10654,
											"end": 10686,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10651,
											"end": 10770,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10651,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 10651,
											"end": 10770,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 10689,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 10689,
											"end": 10768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10689,
											"end": 10768,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 10689,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10651,
											"end": 10770,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 10651,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10809,
											"end": 10810,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10881,
											"end": 10887,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10870,
											"end": 10879,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10866,
											"end": 10888,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10834,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 10834,
											"end": 10898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10834,
											"end": 10898,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 10834,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10824,
											"end": 10898,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10824,
											"end": 10898,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10780,
											"end": 10908,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10564,
											"end": 10915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10921,
											"end": 11093,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 10921,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11061,
											"end": 11085,
											"name": "PUSH",
											"source": 15,
											"value": "496E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 11057,
											"end": 11058,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11055,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11045,
											"end": 11059,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11038,
											"end": 11086,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10921,
											"end": 11093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10921,
											"end": 11093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11465,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 11099,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11241,
											"end": 11244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11262,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 11326,
											"end": 11328,
											"name": "PUSH",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 11321,
											"end": 11324,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11262,
											"end": 11329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 11262,
											"end": 11329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11262,
											"end": 11329,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 11262,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11329,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11338,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11338,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 11338,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11338,
											"end": 11431,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 11338,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11456,
											"end": 11458,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11440,
											"end": 11459,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11440,
											"end": 11459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11465,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11465,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11465,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11099,
											"end": 11465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11890,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 11471,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11652,
											"end": 11678,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11652,
											"end": 11678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11718,
											"end": 11722,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11714,
											"end": 11734,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11710,
											"end": 11711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11699,
											"end": 11708,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11695,
											"end": 11712,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11752,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11752,
											"end": 11883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 11752,
											"end": 11883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11752,
											"end": 11883,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 11752,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11744,
											"end": 11883,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11744,
											"end": 11883,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11890,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11890,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11471,
											"end": 11890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12045,
											"end": 12049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12085,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12072,
											"end": 12081,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12060,
											"end": 12086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12060,
											"end": 12086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12162,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12149,
											"end": 12166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12140,
											"end": 12146,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12096,
											"end": 12167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12234,
											"end": 12243,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12230,
											"end": 12248,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12221,
											"end": 12227,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12177,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12259,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 12327,
											"end": 12329,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12316,
											"end": 12325,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12312,
											"end": 12330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12309,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12259,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12259,
											"end": 12331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12259,
											"end": 12331,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 12259,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11896,
											"end": 12338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12344,
											"end": 12460,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12344,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 12429,
											"end": 12434,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12414,
											"end": 12435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12435,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 12414,
											"end": 12435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12407,
											"end": 12412,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12404,
											"end": 12436,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 12394,
											"end": 12454,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12450,
											"end": 12451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12454,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 12394,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12344,
											"end": 12460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12344,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12520,
											"end": 12525,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12557,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12545,
											"end": 12558,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12567,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 12591,
											"end": 12596,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12567,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 12567,
											"end": 12597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12567,
											"end": 12597,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 12567,
											"end": 12597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12676,
											"end": 12682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12725,
											"end": 12727,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12713,
											"end": 12722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12704,
											"end": 12711,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12700,
											"end": 12723,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12696,
											"end": 12728,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12693,
											"end": 12812,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12693,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 12693,
											"end": 12812,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12731,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 12731,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12731,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12731,
											"end": 12810,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 12731,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12693,
											"end": 12812,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 12693,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 12929,
											"end": 12936,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12920,
											"end": 12926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12909,
											"end": 12918,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12905,
											"end": 12927,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12876,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 12876,
											"end": 12937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12876,
											"end": 12937,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 12876,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12866,
											"end": 12937,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12866,
											"end": 12937,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12822,
											"end": 12947,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13131,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 12960,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13100,
											"end": 13123,
											"name": "PUSH",
											"source": 15,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 13096,
											"end": 13097,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13084,
											"end": 13098,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13077,
											"end": 13124,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12960,
											"end": 13131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13279,
											"end": 13282,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 13364,
											"end": 13366,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 13359,
											"end": 13362,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 13300,
											"end": 13367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 13300,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13293,
											"end": 13367,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13293,
											"end": 13367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 13465,
											"end": 13468,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 13376,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 13376,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13494,
											"end": 13496,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13489,
											"end": 13492,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13485,
											"end": 13497,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13478,
											"end": 13497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13478,
											"end": 13497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13137,
											"end": 13503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13675,
											"end": 13679,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13715,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13702,
											"end": 13711,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13698,
											"end": 13716,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13690,
											"end": 13716,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13690,
											"end": 13716,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13756,
											"end": 13760,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13752,
											"end": 13772,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13748,
											"end": 13749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13733,
											"end": 13750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13726,
											"end": 13773,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 13790,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 13790,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13782,
											"end": 13921,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13782,
											"end": 13921,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13928,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13974,
											"end": 13981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 14015,
											"end": 14016,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13997,
											"end": 14017,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 13997,
											"end": 14017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13997,
											"end": 14017,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 13997,
											"end": 14017,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14017,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13992,
											"end": 14017,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14031,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 14049,
											"end": 14050,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14031,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 14031,
											"end": 14051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14031,
											"end": 14051,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 14031,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14026,
											"end": 14051,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14026,
											"end": 14051,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14086,
											"end": 14087,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14083,
											"end": 14084,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 14108,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 14126,
											"end": 14137,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14108,
											"end": 14138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 14108,
											"end": 14138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14108,
											"end": 14138,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 14108,
											"end": 14138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14097,
											"end": 14138,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14097,
											"end": 14138,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14287,
											"end": 14288,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14274,
											"end": 14289,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 14271,
											"end": 14272,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14268,
											"end": 14290,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14248,
											"end": 14249,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14241,
											"end": 14250,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14221,
											"end": 14304,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 14198,
											"end": 14337,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 14317,
											"end": 14335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14337,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 14198,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13982,
											"end": 14344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13934,
											"end": 14344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "tag",
											"source": 15,
											"value": "266"
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14390,
											"end": 14394,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14410,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 14428,
											"end": 14429,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14410,
											"end": 14430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 14410,
											"end": 14430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14410,
											"end": 14430,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 14410,
											"end": 14430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14405,
											"end": 14430,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14405,
											"end": 14430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 14462,
											"end": 14463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 14444,
											"end": 14464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14444,
											"end": 14464,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 14444,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14439,
											"end": 14464,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14439,
											"end": 14464,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14488,
											"end": 14489,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14485,
											"end": 14486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14481,
											"end": 14490,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14473,
											"end": 14490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14473,
											"end": 14490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14512,
											"end": 14513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14506,
											"end": 14510,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14503,
											"end": 14514,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 14500,
											"end": 14537,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14500,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 14500,
											"end": 14537,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14517,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 14517,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 14517,
											"end": 14535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14517,
											"end": 14535,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 14517,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14500,
											"end": 14537,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 14500,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14550,
											"end": 14672,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 14550,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14623,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 14641,
											"end": 14646,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14623,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 14623,
											"end": 14647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14623,
											"end": 14647,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 14623,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14616,
											"end": 14621,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14613,
											"end": 14648,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14603,
											"end": 14666,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 14603,
											"end": 14666,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14662,
											"end": 14663,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14660,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14652,
											"end": 14664,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14603,
											"end": 14666,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 14603,
											"end": 14666,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14550,
											"end": 14672,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14550,
											"end": 14672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14735,
											"end": 14740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14772,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14760,
											"end": 14773,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14751,
											"end": 14773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14751,
											"end": 14773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14782,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 14809,
											"end": 14814,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14782,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 14782,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14782,
											"end": 14815,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 14782,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14678,
											"end": 14821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14827,
											"end": 14917,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 14827,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14862,
											"end": 14869,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14905,
											"end": 14910,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14902,
											"end": 14903,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 14891,
											"end": 14911,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14827,
											"end": 14917,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14827,
											"end": 14917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14827,
											"end": 14917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14827,
											"end": 14917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14923,
											"end": 15041,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 14923,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14994,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 15010,
											"end": 15015,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14994,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 14994,
											"end": 15016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14994,
											"end": 15016,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 14994,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14987,
											"end": 14992,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14984,
											"end": 15017,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15029,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15021,
											"end": 15033,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 14974,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14923,
											"end": 15041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14923,
											"end": 15041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15102,
											"end": 15107,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15133,
											"end": 15139,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15127,
											"end": 15140,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15118,
											"end": 15140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15118,
											"end": 15140,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15149,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 15174,
											"end": 15179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15149,
											"end": 15180,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 15149,
											"end": 15180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15149,
											"end": 15180,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 15149,
											"end": 15180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15281,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 15192,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15235,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15268,
											"end": 15274,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15257,
											"end": 15275,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 15246,
											"end": 15275,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15246,
											"end": 15275,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15281,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15281,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15192,
											"end": 15281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15287,
											"end": 15407,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 15287,
											"end": 15407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15359,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 15376,
											"end": 15381,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15359,
											"end": 15382,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 15359,
											"end": 15382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15359,
											"end": 15382,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 15359,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15352,
											"end": 15357,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15349,
											"end": 15383,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 15339,
											"end": 15401,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15394,
											"end": 15395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15387,
											"end": 15399,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15401,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 15339,
											"end": 15401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15287,
											"end": 15407,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15287,
											"end": 15407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15469,
											"end": 15474,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15500,
											"end": 15506,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15494,
											"end": 15507,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15485,
											"end": 15507,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15485,
											"end": 15507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15516,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 15542,
											"end": 15547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15516,
											"end": 15548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 15516,
											"end": 15548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15516,
											"end": 15548,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 15516,
											"end": 15548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15413,
											"end": 15554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15678,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 15560,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15631,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15647,
											"end": 15652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15631,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 15631,
											"end": 15653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15631,
											"end": 15653,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15631,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15624,
											"end": 15629,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15621,
											"end": 15654,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 15611,
											"end": 15672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 15611,
											"end": 15672,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15668,
											"end": 15669,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15658,
											"end": 15670,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 15611,
											"end": 15672,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 15611,
											"end": 15672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15560,
											"end": 15678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15739,
											"end": 15744,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15770,
											"end": 15776,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15764,
											"end": 15777,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15755,
											"end": 15777,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15755,
											"end": 15777,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15786,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 15811,
											"end": 15816,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15786,
											"end": 15817,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 15786,
											"end": 15817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15786,
											"end": 15817,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 15786,
											"end": 15817,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15684,
											"end": 15823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15943,
											"end": 15949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15951,
											"end": 15957,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15973,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15975,
											"end": 15981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15983,
											"end": 15989,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16040,
											"end": 16043,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16019,
											"end": 16026,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16015,
											"end": 16038,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16011,
											"end": 16044,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16008,
											"end": 16128,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16008,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 16008,
											"end": 16128,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 16047,
											"end": 16126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16008,
											"end": 16128,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 16008,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 16248,
											"end": 16255,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16228,
											"end": 16237,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16224,
											"end": 16246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 16192,
											"end": 16256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16182,
											"end": 16256,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 16182,
											"end": 16256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16138,
											"end": 16266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16305,
											"end": 16307,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 16385,
											"end": 16392,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16376,
											"end": 16382,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16365,
											"end": 16374,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16361,
											"end": 16383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 16331,
											"end": 16393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16393,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 16331,
											"end": 16393,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16321,
											"end": 16393,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 16321,
											"end": 16393,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16276,
											"end": 16403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16442,
											"end": 16444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16468,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 16523,
											"end": 16530,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16514,
											"end": 16520,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16503,
											"end": 16512,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16499,
											"end": 16521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16468,
											"end": 16531,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 16468,
											"end": 16531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16468,
											"end": 16531,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 16468,
											"end": 16531,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16458,
											"end": 16531,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 16458,
											"end": 16531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16541,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16580,
											"end": 16582,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16606,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 16661,
											"end": 16668,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16652,
											"end": 16658,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16641,
											"end": 16650,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16637,
											"end": 16659,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16606,
											"end": 16669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 16606,
											"end": 16669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16606,
											"end": 16669,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 16606,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16596,
											"end": 16669,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16596,
											"end": 16669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16551,
											"end": 16679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16718,
											"end": 16721,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16745,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 16800,
											"end": 16807,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16791,
											"end": 16797,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16780,
											"end": 16789,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16776,
											"end": 16798,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 16745,
											"end": 16808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16808,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 16745,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16808,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16689,
											"end": 16818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16857,
											"end": 16860,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16884,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 16938,
											"end": 16945,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 16929,
											"end": 16935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16918,
											"end": 16927,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 16914,
											"end": 16936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16884,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 16884,
											"end": 16946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16884,
											"end": 16946,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 16884,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16874,
											"end": 16946,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16874,
											"end": 16946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16828,
											"end": 16956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16995,
											"end": 16998,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 17022,
											"end": 17083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 17075,
											"end": 17082,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 17066,
											"end": 17072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17055,
											"end": 17064,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 17051,
											"end": 17073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17022,
											"end": 17083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 17022,
											"end": 17083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17022,
											"end": 17083,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 17022,
											"end": 17083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17012,
											"end": 17083,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17012,
											"end": 17083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16966,
											"end": 17093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP9",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 17100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17208,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 17106,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17148,
											"end": 17156,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17195,
											"end": 17200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17192,
											"end": 17193,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 17188,
											"end": 17201,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 17167,
											"end": 17201,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17167,
											"end": 17201,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17208,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17208,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17208,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17275,
											"end": 17280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17306,
											"end": 17312,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17297,
											"end": 17312,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17297,
											"end": 17312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17330,
											"end": 17335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17321,
											"end": 17335,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17321,
											"end": 17335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17365,
											"end": 17366,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 17355,
											"end": 17363,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17352,
											"end": 17367,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17460,
											"end": 17464,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17455,
											"end": 17458,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17451,
											"end": 17465,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 17445,
											"end": 17449,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17442,
											"end": 17466,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17439,
											"end": 17489,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17439,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 17439,
											"end": 17489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17469,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 17469,
											"end": 17487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 17469,
											"end": 17487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17469,
											"end": 17487,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 17469,
											"end": 17487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17439,
											"end": 17489,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 17439,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17519,
											"end": 17520,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 17509,
											"end": 17517,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17505,
											"end": 17521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 17502,
											"end": 17953,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17502,
											"end": 17953,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 17502,
											"end": 17953,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17934,
											"end": 17938,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17927,
											"end": 17932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17923,
											"end": 17939,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 17914,
											"end": 17939,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17914,
											"end": 17939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17502,
											"end": 17953,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 17502,
											"end": 17953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17984,
											"end": 17988,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17978,
											"end": 17982,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17974,
											"end": 17989,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 17966,
											"end": 17989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17966,
											"end": 17989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18014,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 18037,
											"end": 18045,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18014,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 18014,
											"end": 18046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18014,
											"end": 18046,
											"name": "tag",
											"source": 15,
											"value": "579"
										},
										{
											"begin": 18014,
											"end": 18046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18002,
											"end": 18046,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 18002,
											"end": 18046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 17344,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17214,
											"end": 18062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18122,
											"end": 18127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18313,
											"end": 18321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18303,
											"end": 18343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 18303,
											"end": 18343,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18334,
											"end": 18335,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18325,
											"end": 18335,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18325,
											"end": 18335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18336,
											"end": 18341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18336,
											"end": 18341,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18303,
											"end": 18343,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 18303,
											"end": 18343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18362,
											"end": 18366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18388,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 18352,
											"end": 18388,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18379,
											"end": 18380,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18370,
											"end": 18380,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18370,
											"end": 18380,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18381,
											"end": 18386,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18381,
											"end": 18386,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18388,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 18352,
											"end": 18388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18448,
											"end": 18452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18497,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18532,
											"end": 18533,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18441,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 18441,
											"end": 18718,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 18491,
											"end": 18518,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18509,
											"end": 18510,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18500,
											"end": 18510,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18500,
											"end": 18510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18511,
											"end": 18516,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18511,
											"end": 18516,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18511,
											"end": 18516,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 18527,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18572,
											"end": 18575,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 18562,
											"end": 18570,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18559,
											"end": 18576,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 18556,
											"end": 18599,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18556,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 18556,
											"end": 18599,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18579,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 18579,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 18579,
											"end": 18597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18579,
											"end": 18597,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 18579,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18556,
											"end": 18599,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 18556,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18628,
											"end": 18636,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18625,
											"end": 18626,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 18621,
											"end": 18637,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 18612,
											"end": 18637,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18612,
											"end": 18637,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18663,
											"end": 18666,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18656,
											"end": 18661,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18653,
											"end": 18667,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 18650,
											"end": 18690,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18650,
											"end": 18690,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 18650,
											"end": 18690,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18670,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 18670,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 18670,
											"end": 18688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18670,
											"end": 18688,
											"name": "tag",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 18670,
											"end": 18688,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18650,
											"end": 18690,
											"name": "tag",
											"source": 15,
											"value": "588"
										},
										{
											"begin": 18650,
											"end": 18690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18703,
											"end": 18708,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18703,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18703,
											"end": 18708,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18441,
											"end": 18718,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 18441,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18441,
											"end": 18718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18827,
											"end": 18829,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18817,
											"end": 18825,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18814,
											"end": 18830,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18808,
											"end": 18811,
											"name": "PUSH",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 18802,
											"end": 18806,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18799,
											"end": 18812,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18795,
											"end": 18831,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18777,
											"end": 18779,
											"name": "PUSH",
											"source": 15,
											"value": "4E"
										},
										{
											"begin": 18767,
											"end": 18775,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18764,
											"end": 18780,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18759,
											"end": 18761,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 18753,
											"end": 18757,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18750,
											"end": 18762,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18746,
											"end": 18781,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18730,
											"end": 18841,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 18727,
											"end": 18973,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18727,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 18727,
											"end": 18973,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18883,
											"end": 18891,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18877,
											"end": 18881,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18873,
											"end": 18892,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 18864,
											"end": 18892,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18864,
											"end": 18892,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18918,
											"end": 18921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18911,
											"end": 18916,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18908,
											"end": 18922,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 18905,
											"end": 18945,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18905,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 18905,
											"end": 18945,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18925,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 18925,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 18925,
											"end": 18943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18925,
											"end": 18943,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 18925,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18905,
											"end": 18945,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 18905,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18958,
											"end": 18963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18958,
											"end": 18963,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18727,
											"end": 18973,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 18727,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18998,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 19036,
											"end": 19039,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19026,
											"end": 19034,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19020,
											"end": 19024,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19017,
											"end": 19018,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18998,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 18998,
											"end": 19040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18998,
											"end": 19040,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 18998,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19040,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19040,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18983,
											"end": 19040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19072,
											"end": 19076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19067,
											"end": 19070,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19063,
											"end": 19077,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 19056,
											"end": 19061,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19053,
											"end": 19078,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 19050,
											"end": 19101,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19050,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 19050,
											"end": 19101,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 19081,
											"end": 19099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19050,
											"end": 19101,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 19050,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19130,
											"end": 19134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19123,
											"end": 19128,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19119,
											"end": 19135,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 19110,
											"end": 19135,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19110,
											"end": 19135,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18068,
											"end": 19141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "tag",
											"source": 15,
											"value": "281"
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19205,
											"end": 19210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19229,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 19247,
											"end": 19251,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19229,
											"end": 19252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 19229,
											"end": 19252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19229,
											"end": 19252,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 19229,
											"end": 19252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19221,
											"end": 19252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19221,
											"end": 19252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19273,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 19289,
											"end": 19297,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19273,
											"end": 19298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 19273,
											"end": 19298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19273,
											"end": 19298,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 19273,
											"end": 19298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19261,
											"end": 19298,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19261,
											"end": 19298,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19317,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 19354,
											"end": 19420,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19344,
											"end": 19352,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19338,
											"end": 19342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 19317,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 19317,
											"end": 19421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19317,
											"end": 19421,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 19317,
											"end": 19421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19308,
											"end": 19421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19308,
											"end": 19421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19147,
											"end": 19428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19434,
											"end": 19614,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 19434,
											"end": 19614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19482,
											"end": 19559,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19479,
											"end": 19480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19472,
											"end": 19560,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19579,
											"end": 19583,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 19576,
											"end": 19577,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 19569,
											"end": 19584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19603,
											"end": 19607,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 19600,
											"end": 19601,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19593,
											"end": 19608,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "tag",
											"source": 15,
											"value": "283"
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19660,
											"end": 19661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19677,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 19695,
											"end": 19696,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19677,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 19677,
											"end": 19697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19677,
											"end": 19697,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 19677,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19672,
											"end": 19697,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19672,
											"end": 19697,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19711,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 19729,
											"end": 19730,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19711,
											"end": 19731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 19711,
											"end": 19731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19711,
											"end": 19731,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 19711,
											"end": 19731,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19706,
											"end": 19731,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19706,
											"end": 19731,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19750,
											"end": 19751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19740,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 19740,
											"end": 19775,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 19755,
											"end": 19773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 19755,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19740,
											"end": 19775,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 19740,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19797,
											"end": 19798,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19794,
											"end": 19795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19790,
											"end": 19799,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 19785,
											"end": 19799,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19785,
											"end": 19799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19620,
											"end": 19805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19960,
											"end": 19964,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19998,
											"end": 20000,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 19987,
											"end": 19996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19983,
											"end": 20001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19975,
											"end": 20001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19975,
											"end": 20001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 20079,
											"end": 20080,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20068,
											"end": 20077,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20064,
											"end": 20081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20055,
											"end": 20061,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 20011,
											"end": 20082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20082,
											"name": "tag",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 20011,
											"end": 20082,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20092,
											"end": 20164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 20160,
											"end": 20162,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20149,
											"end": 20158,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20145,
											"end": 20163,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20136,
											"end": 20142,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20092,
											"end": 20164,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 20092,
											"end": 20164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20092,
											"end": 20164,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 20092,
											"end": 20164,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20174,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 20242,
											"end": 20244,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20231,
											"end": 20240,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20227,
											"end": 20245,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20218,
											"end": 20224,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20174,
											"end": 20246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 20174,
											"end": 20246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20174,
											"end": 20246,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 20174,
											"end": 20246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19811,
											"end": 20253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/CCK/CC2/b.sol",
								"contracts/CCK/ERC3643.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MINT_RATIO()": "c802e3cd",
							"TOTAL_SUPPLY()": "902d55a5",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUser(address)": "12cae7af",
							"compliance()": "6290865d",
							"decimals()": "313ce567",
							"freezeUser(address)": "e08ba51a",
							"frozen(address)": "d0516650",
							"getCurrentPrice()": "eb91d37e",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"mint(address,uint256)": "40c10f19",
							"mintedAmount()": "2d380242",
							"name()": "06fdde03",
							"onchainID()": "aba63705",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"remainingSupply()": "da0239a6",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"tokenAddress()": "9d76ea58",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndMint(uint256)": "cefaaff6",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferReceiver()": "9dc341d0",
							"unfreezeUser(address)": "cb4b73ab",
							"uniswapPool()": "bdd3d825",
							"version()": "54fd4d50",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_transferReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINT_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOfUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"freezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unfreezeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CC2/b.sol\":\"CCKToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/CCK/CC2/b.sol\":{\"keccak256\":\"0x9c76a76929a0906977d59f82766722debf541c9ba54a1674458dadaffc73edb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://610c7d974421f396b33e69f2e6bcedccb8d2c46c0b11172c20ec350f24de3930\",\"dweb:/ipfs/QmRJavxsNHM3UXPm8SNPNTEGUszi9r8XouQ4iaB4D7yeG4\"]},\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0xd208c81552c0162bc660d08f9a22876de20247e40b8a161e411e8f00df1dcd67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14523991ce6c5d1fc9a789108e878f9d74823a36700c9be83f4bdc7d35e5ea84\",\"dweb:/ipfs/QmPWt8jCPU7rafXDoL9biEvtMpm7cznbnNm6cttokSHeou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1395,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "whitelist",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1399,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "frozen",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1401,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "uniswapPool",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1403,
								"contract": "contracts/CCK/CC2/b.sol:CCKToken",
								"label": "mintedAmount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CCK/ERC3643.sol": {
				"IERC3643": {
					"abi": [
						{
							"inputs": [],
							"name": "compliance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getFrozenTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "identityRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onchainID",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for on-chain identity management and compliance.",
						"kind": "dev",
						"methods": {
							"compliance()": {
								"details": "Returns the compliance address.",
								"returns": {
									"_0": "address The compliance address."
								}
							},
							"getFrozenTokens(address)": {
								"details": "Returns the number of frozen tokens for a user.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "uint256 Amount of frozen tokens."
								}
							},
							"identityRegistry()": {
								"details": "Returns the identity registry address.",
								"returns": {
									"_0": "address The identity registry address."
								}
							},
							"isFrozen(address)": {
								"details": "Checks if a user is frozen.",
								"params": {
									"userAddress": "Address of the user to check."
								},
								"returns": {
									"_0": "bool Indicates if the user is frozen."
								}
							},
							"onchainID()": {
								"details": "Returns the on-chain ID of the contract.",
								"returns": {
									"_0": "address The address of the contract."
								}
							},
							"paused()": {
								"details": "Checks if the contract is paused.",
								"returns": {
									"_0": "bool Indicates if the contract is paused."
								}
							},
							"version()": {
								"details": "Returns the version of the contract.",
								"returns": {
									"_0": "string The version string."
								}
							}
						},
						"title": "IERC3643",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compliance()": "6290865d",
							"getFrozenTokens(address)": "158b1a57",
							"identityRegistry()": "134e18f4",
							"isFrozen(address)": "e5839836",
							"onchainID()": "aba63705",
							"paused()": "5c975abb",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"compliance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getFrozenTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onchainID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for on-chain identity management and compliance.\",\"kind\":\"dev\",\"methods\":{\"compliance()\":{\"details\":\"Returns the compliance address.\",\"returns\":{\"_0\":\"address The compliance address.\"}},\"getFrozenTokens(address)\":{\"details\":\"Returns the number of frozen tokens for a user.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"uint256 Amount of frozen tokens.\"}},\"identityRegistry()\":{\"details\":\"Returns the identity registry address.\",\"returns\":{\"_0\":\"address The identity registry address.\"}},\"isFrozen(address)\":{\"details\":\"Checks if a user is frozen.\",\"params\":{\"userAddress\":\"Address of the user to check.\"},\"returns\":{\"_0\":\"bool Indicates if the user is frozen.\"}},\"onchainID()\":{\"details\":\"Returns the on-chain ID of the contract.\",\"returns\":{\"_0\":\"address The address of the contract.\"}},\"paused()\":{\"details\":\"Checks if the contract is paused.\",\"returns\":{\"_0\":\"bool Indicates if the contract is paused.\"}},\"version()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"string The version string.\"}}},\"title\":\"IERC3643\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/ERC3643.sol\":\"IERC3643\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CCK/ERC3643.sol\":{\"keccak256\":\"0xd208c81552c0162bc660d08f9a22876de20247e40b8a161e411e8f00df1dcd67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14523991ce6c5d1fc9a789108e878f9d74823a36700c9be83f4bdc7d35e5ea84\",\"dweb:/ipfs/QmPWt8jCPU7rafXDoL9biEvtMpm7cznbnNm6cttokSHeou\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CCK/CC2/b.sol:89:30:\n   |\n89 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |                              ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3109,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 3090
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CC2/b.sol:69:5:\n   |\n69 |     function version() external view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2612,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 2513
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CC2/b.sol:73:5:\n   |\n73 |     function identityRegistry() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2725,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 2620
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CC2/b.sol:77:5:\n   |\n77 |     function compliance() external view override returns (address) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2832,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 2733
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CC2/b.sol:81:5:\n   |\n81 |     function paused() external view override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2927,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 2840
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/CCK/CC2/b.sol:89:5:\n   |\n89 |     function getFrozenTokens(address userAddress) external view override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3179,
					"file": "contracts/CCK/CC2/b.sol",
					"start": 3065
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							955
						],
						"IUniswapV3PoolActions": [
							1051
						],
						"IUniswapV3PoolDerivedState": [
							1082
						],
						"IUniswapV3PoolEvents": [
							1201
						],
						"IUniswapV3PoolImmutables": [
							1241
						],
						"IUniswapV3PoolOwnerActions": [
							1267
						],
						"IUniswapV3PoolState": [
							1375
						]
					},
					"id": 956,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1242,
							"src": "71:45:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1376,
							"src": "117:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1083,
							"src": "158:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1052,
							"src": "206:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 940,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1268,
							"src": "249:47:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 956,
							"sourceUnit": 1202,
							"src": "297:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 943,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1241,
										"src": "637:24:6"
									},
									"id": 944,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:6"
								},
								{
									"baseName": {
										"id": 945,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "667:19:6"
									},
									"id": 946,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:6"
								},
								{
									"baseName": {
										"id": 947,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1082,
										"src": "692:26:6"
									},
									"id": 948,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:6"
								},
								{
									"baseName": {
										"id": 949,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1051,
										"src": "724:21:6"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:6"
								},
								{
									"baseName": {
										"id": 951,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1267,
										"src": "751:26:6"
									},
									"id": 952,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:6"
								},
								{
									"baseName": {
										"id": 953,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1201,
										"src": "783:20:6"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:6"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 942,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:6",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 955,
							"linearizedBaseContracts": [
								955,
								1201,
								1267,
								1051,
								1082,
								1375,
								1241
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 956,
							"src": "605:203:6",
							"usedErrors": [],
							"usedEvents": [
								1092,
								1109,
								1124,
								1139,
								1156,
								1171,
								1178,
								1189,
								1200
							]
						}
					],
					"src": "45:764:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1051
						]
					},
					"id": 1052,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 957,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:7",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:7",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "442:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 960,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:7"
									},
									"scope": 1051,
									"src": "422:51:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:7",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1536:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1563:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 968,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1588:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 970,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1613:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 972,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1637:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:7"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1681:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1698:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:7"
									},
									"scope": 1051,
									"src": "1513:202:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:7",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2805:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2832:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 986,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2857:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 988,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2882:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 990,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2916:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 992,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:7"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2965:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 995,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2982:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 997,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:7"
									},
									"scope": 1051,
									"src": "2779:220:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:7",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3664:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1002,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3689:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1004,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3714:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1006,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3753:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3770:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:7"
									},
									"scope": 1051,
									"src": "3641:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:7",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4836:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4863:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4888:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4920:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1022,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4955:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:7"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4999:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1027,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5015:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:7"
									},
									"scope": 1051,
									"src": "4813:218:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:7",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5723:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5750:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5775:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "5800:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:7"
									},
									"scope": 1051,
									"src": "5699:136:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:7",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "6257:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:7"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:7"
									},
									"scope": 1051,
									"src": "6213:88:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1052,
							"src": "173:6130:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1082
						]
					},
					"id": 1083,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:8",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1082,
							"linearizedBaseContracts": [
								1082
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:8",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1403:29:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1056,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1057,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1481:30:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1060,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1061,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1513:51:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1063,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1064,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:8"
									},
									"scope": 1082,
									"src": "1386:180:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:8",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2383:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1069,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1071,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:8"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2477:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1074,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2517:37:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1076,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "2568:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1078,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:8"
									},
									"scope": 1082,
									"src": "2348:251:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1083,
							"src": "293:2308:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1201
						]
					},
					"id": 1202,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1084,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1085,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:9",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1201,
							"linearizedBaseContracts": [
								1201
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:9",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 1092,
									"name": "Initialize",
									"nameLocation": "551:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "562:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1087,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "584:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1089,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:9"
									},
									"src": "545:51:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:9",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 1109,
									"name": "Mint",
									"nameLocation": "1164:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1178:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1202:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1233:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1098,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1266:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1100,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1299:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1102,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1323:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "1348:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:9"
									},
									"src": "1158:212:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:9",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 1124,
									"name": "Collect",
									"nameLocation": "1880:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1897:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1928:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1955:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1115,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1988:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1117,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2021:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "2046:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1121,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:9"
									},
									"src": "1874:194:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:9",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 1139,
									"name": "Burn",
									"nameLocation": "2608:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2622:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2653:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1128,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2686:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1130,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2719:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1132,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2743:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "2768:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:9"
									},
									"src": "2602:188:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:9",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 1156,
									"name": "Swap",
									"nameLocation": "3407:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3421:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3453:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3512:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1147,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3536:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1149,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3566:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1151,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "3593:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1153,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:9"
									},
									"src": "3401:209:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:9",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 1171,
									"name": "Flash",
									"nameLocation": "4189:5:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4204:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4236:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4271:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4296:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4321:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "4344:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:9"
									},
									"src": "4183:181:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:9",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 1178,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4876:36:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1173,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4922:36:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1175,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:9"
									},
									"src": "4826:139:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:9",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 1189,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5367:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5390:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5413:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1184,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "5436:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:9"
									},
									"src": "5346:113:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:9",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 1200,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5876:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5900:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5927:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1195,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "5944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1197,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:9"
									},
									"src": "5854:107:9"
								}
							],
							"scope": 1202,
							"src": "159:5804:9",
							"usedErrors": [],
							"usedEvents": [
								1092,
								1109,
								1124,
								1139,
								1156,
								1171,
								1178,
								1189,
								1200
							]
						}
					],
					"src": "45:5919:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1241
						]
					},
					"id": 1242,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1203,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1204,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:10",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1241,
							"linearizedBaseContracts": [
								1241
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:10",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:10"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "450:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:10"
									},
									"scope": 1241,
									"src": "408:51:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:10",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "624:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:10"
									},
									"scope": 1241,
									"src": "583:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:10",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:10"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "799:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:10"
									},
									"scope": 1241,
									"src": "758:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:10",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:10"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "941:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1225,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:10"
									},
									"scope": 1241,
									"src": "903:46:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:10",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:10"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1364:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1231,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:10"
									},
									"scope": 1241,
									"src": "1318:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:10",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:10"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1799:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1237,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:10"
									},
									"scope": 1241,
									"src": "1745:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1242,
							"src": "224:1586:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1267
						]
					},
					"id": 1268,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1243,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:11",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1267,
							"linearizedBaseContracts": [
								1267
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:11",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "464:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "484:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1248,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:11"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:11"
									},
									"scope": 1267,
									"src": "440:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:11",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1068:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1256,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1102:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1258,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:11"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1151:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1261,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "1168:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1263,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:11"
									},
									"scope": 1267,
									"src": "1007:178:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1268,
							"src": "187:1000:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:11"
				},
				"id": 11
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1375
						]
					},
					"id": 1376,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1269,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1270,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:12",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1375,
							"linearizedBaseContracts": [
								1375
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:12",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:12"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1498:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1273,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1532:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1275,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1556:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1277,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1593:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1279,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1636:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1281,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1683:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1283,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1714:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:12"
									},
									"scope": 1375,
									"src": "1421:317:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:12",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:12"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1972:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:12"
									},
									"scope": 1375,
									"src": "1917:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:12",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:12"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2215:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:12"
									},
									"scope": 1375,
									"src": "2160:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:12",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:12"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2429:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2445:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1305,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:12"
									},
									"scope": 1375,
									"src": "2382:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:12",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:12"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2666:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:12"
									},
									"scope": 1375,
									"src": "2622:53:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:12",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "3945:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1316,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:12"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4017:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4053:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1321,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4086:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4129:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4172:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1327,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4213:38:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1329,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4265:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1331,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "4300:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:12"
									},
									"scope": 1375,
									"src": "3930:397:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:12",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4457:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1338,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:12"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "4500:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:12"
									},
									"scope": 1375,
									"src": "4437:72:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:12",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5239:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:12"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5312:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5344:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5390:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5436:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1355,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5469:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1357,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:12"
									},
									"scope": 1375,
									"src": "5220:279:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:12",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6281:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:12"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6356:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1365,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6391:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1367,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6425:41:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1369,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "6480:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:12"
									},
									"scope": 1375,
									"src": "6259:248:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1376,
							"src": "240:6269:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:12"
				},
				"id": 12
			},
			"contracts/CCK/CC2/b.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/CC2/b.sol",
					"exportedSymbols": {
						"CCKToken": [
							1858
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC3643": [
							1908
						],
						"IUniswapV3Pool": [
							955
						],
						"IUniswapV3PoolActions": [
							1051
						],
						"IUniswapV3PoolDerivedState": [
							1082
						],
						"IUniswapV3PoolEvents": [
							1201
						],
						"IUniswapV3PoolImmutables": [
							1241
						],
						"IUniswapV3PoolOwnerActions": [
							1267
						],
						"IUniswapV3PoolState": [
							1375
						],
						"Ownable": [
							147
						]
					},
					"id": 1859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 956,
							"src": "60:66:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 878,
							"src": "129:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 800,
							"src": "187:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1381,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 148,
							"src": "244:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/CCK/ERC3643.sol",
							"file": "contracts/CCK/ERC3643.sol",
							"id": 1382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1859,
							"sourceUnit": 1909,
							"src": "298:35:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1383,
										"name": "ERC20",
										"nameLocations": [
											"358:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "358:5:13"
									},
									"id": 1384,
									"nodeType": "InheritanceSpecifier",
									"src": "358:5:13"
								},
								{
									"baseName": {
										"id": 1385,
										"name": "Ownable",
										"nameLocations": [
											"365:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "365:7:13"
									},
									"id": 1386,
									"nodeType": "InheritanceSpecifier",
									"src": "365:7:13"
								},
								{
									"baseName": {
										"id": 1387,
										"name": "IERC3643",
										"nameLocations": [
											"374:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1908,
										"src": "374:8:13"
									},
									"id": 1388,
									"nodeType": "InheritanceSpecifier",
									"src": "374:8:13"
								}
							],
							"canonicalName": "CCKToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1858,
							"linearizedBaseContracts": [
								1858,
								1908,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CCKToken",
							"nameLocation": "346:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1391,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "414:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "390:54:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "390:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130305f3030305f3030305f303030",
										"id": 1390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "429:15:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000_by_1",
											"typeString": "int_const 100000000000"
										},
										"value": "100_000_000_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 1395,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "530:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "498:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1394,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1392,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1393,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "517:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0516650",
									"id": 1399,
									"mutability": "mutable",
									"name": "frozen",
									"nameLocation": "591:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "559:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1398,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1396,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "567:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "559:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1397,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "578:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdd3d825",
									"id": 1401,
									"mutability": "mutable",
									"name": "uniswapPool",
									"nameLocation": "635:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "620:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1400,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d380242",
									"id": 1403,
									"mutability": "mutable",
									"name": "mintedAmount",
									"nameLocation": "692:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "677:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9dc341d0",
									"id": 1405,
									"mutability": "immutable",
									"name": "transferReceiver",
									"nameLocation": "764:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "739:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1404,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 1407,
									"mutability": "immutable",
									"name": "tokenAddress",
									"nameLocation": "834:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "809:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1406,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c802e3cd",
									"id": 1410,
									"mutability": "constant",
									"name": "MINT_RATIO",
									"nameLocation": "909:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1858,
									"src": "885:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "922:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "1124:543:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1429,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "1143:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1154:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1143:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1163:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1143:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e652077686974656c69737465642061646472657373207265717569726564",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1166:43:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															},
															"value": "At least one whitelisted address required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00d276f89b9212bdcba568d75b220e5c056cd10e143ee190c55b5823ad22f21a",
																"typeString": "literal_string \"At least one whitelisted address required\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1135:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:75:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "1135:75:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "_transferReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "1229:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1258:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1250:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1250:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1250:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1229:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072656365697665722061646472657373",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1262:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																"typeString": "literal_string \"Invalid receiver address\""
															},
															"value": "Invalid receiver address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																"typeString": "literal_string \"Invalid receiver address\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1221:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "1221:68:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "1308:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1333:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1325:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1448,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1325:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1325:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1308:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1337:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1300:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "1300:61:13"
											},
											{
												"body": {
													"id": 1475,
													"nodeType": "Block",
													"src": "1462:58:13",
													"statements": [
														{
															"expression": {
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1467,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "1477:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1471,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1468,
																			"name": "_whitelist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "1487:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1470,
																		"indexExpression": {
																			"id": 1469,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "1498:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1487:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1477:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1504:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1477:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1474,
															"nodeType": "ExpressionStatement",
															"src": "1477:31:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1460,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "1434:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1461,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1438:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1449:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1438:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1434:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1476,
												"initializationExpression": {
													"assignments": [
														1457
													],
													"declarations": [
														{
															"constant": false,
															"id": 1457,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1427:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1476,
															"src": "1419:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1456,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1419:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1459,
													"initialValue": {
														"hexValue": "30",
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1431:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1419:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1457:3:13",
														"subExpression": {
															"id": 1464,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "1457:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1466,
													"nodeType": "ExpressionStatement",
													"src": "1457:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1414:106:13"
											},
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1477,
														"name": "transferReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "1584:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1478,
														"name": "_transferReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "1603:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1584:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "1584:36:13"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1481,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1631:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1482,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1646:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1631:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "1631:28:13"
											}
										]
									},
									"id": 1486,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43434b",
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1085:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b9a5f037894ffdbfd170c3e33522506fac6d418d0ae463405bfdc89b929f3fe",
														"typeString": "literal_string \"CCK\""
													},
													"value": "CCK"
												},
												{
													"hexValue": "43434b546f6b656e",
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1092:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b5d9a3f72c870395b1e121755ebb533b62562bd20a00ef4719a2a0c57562ea01",
														"typeString": "literal_string \"CCKToken\""
													},
													"value": "CCKToken"
												}
											],
											"id": 1422,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1419,
												"name": "ERC20",
												"nameLocations": [
													"1079:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1079:5:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1079:24:13"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1424,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1112:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1116:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1112:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1426,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1423,
												"name": "Ownable",
												"nameLocations": [
													"1104:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1104:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1104:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_whitelist",
												"nameLocation": "993:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "976:27:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1411,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "976:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1412,
													"nodeType": "ArrayTypeName",
													"src": "976:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "_transferReceiver",
												"nameLocation": "1022:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1014:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1058:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1050:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:113:13"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:13"
									},
									"scope": 1858,
									"src": "954:713:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "1764:43:13",
										"statements": [
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1493,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "1775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1494,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "1785:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1775:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1795:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1775:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "1775:24:13"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1491,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1490,
												"name": "onlyOwner",
												"nameLocations": [
													"1754:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1754:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1754:9:13"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1714:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1737:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1729:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:16:13"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1764:0:13"
									},
									"scope": 1858,
									"src": "1705:102:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "1909:44:13",
										"statements": [
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1507,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "1920:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1509,
														"indexExpression": {
															"id": 1508,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "1930:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1920:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1940:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1920:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "1920:25:13"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1504,
												"name": "onlyOwner",
												"nameLocations": [
													"1899:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1899:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1899:9:13"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1854:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1882:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "1874:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:16:13"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1909:0:13"
									},
									"scope": 1858,
									"src": "1845:108:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "2035:38:13",
										"statements": [
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1521,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "2046:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1523,
														"indexExpression": {
															"id": 1522,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "2053:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2046:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2061:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2046:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "2046:19:13"
											}
										]
									},
									"functionSelector": "e08ba51a",
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1518,
												"name": "onlyOwner",
												"nameLocations": [
													"2025:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2025:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2025:9:13"
										}
									],
									"name": "freezeUser",
									"nameLocation": "1991:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2010:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2002:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:14:13"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:13"
									},
									"scope": 1858,
									"src": "1982:91:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "2157:39:13",
										"statements": [
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1535,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "2168:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"id": 1536,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "2175:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2168:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2183:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "2168:20:13"
											}
										]
									},
									"functionSelector": "cb4b73ab",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1533,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1532,
												"name": "onlyOwner",
												"nameLocations": [
													"2147:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2147:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:9:13"
										}
									],
									"name": "unfreezeUser",
									"nameLocation": "2111:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2132:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "2124:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:14:13"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2157:0:13"
									},
									"scope": 1858,
									"src": "2102:94:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "2308:53:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1547,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "2326:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1548,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2341:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2326:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1550,
												"nodeType": "Return",
												"src": "2319:34:13"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "2258:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2273:2:13"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "2299:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:9:13"
									},
									"scope": 1858,
									"src": "2249:112:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1867
									],
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "2466:39:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2492:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CCKToken_$1858",
																"typeString": "contract CCKToken"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_CCKToken_$1858",
																"typeString": "contract CCKToken"
															}
														],
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2484:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1558,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2484:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1562,
												"nodeType": "Return",
												"src": "2477:20:13"
											}
										]
									},
									"functionSelector": "aba63705",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "2413:9:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1554,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2439:8:13"
									},
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:2:13"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2457:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:9:13"
									},
									"scope": 1858,
									"src": "2404:101:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1873
									],
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2579:33:13",
										"statements": [
											{
												"expression": {
													"hexValue": "312e302e30",
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2597:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
														"typeString": "literal_string \"1.0.0\""
													},
													"value": "1.0.0"
												},
												"functionReturnParameters": 1569,
												"id": 1571,
												"nodeType": "Return",
												"src": "2590:14:13"
											}
										]
									},
									"functionSelector": "54fd4d50",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "2522:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1566,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2546:8:13"
									},
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2529:2:13"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2564:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:13"
									},
									"scope": 1858,
									"src": "2513:99:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1879
									],
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2689:36:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2715:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2707:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2707:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2707:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1583,
												"nodeType": "Return",
												"src": "2700:17:13"
											}
										]
									},
									"functionSelector": "134e18f4",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "2629:16:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1575,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2662:8:13"
									},
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2645:2:13"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "2680:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2680:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:9:13"
									},
									"scope": 1858,
									"src": "2620:105:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1885
									],
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "2796:36:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2822:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2814:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2814:7:13",
															"typeDescriptions": {}
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1590,
												"id": 1595,
												"nodeType": "Return",
												"src": "2807:17:13"
											}
										]
									},
									"functionSelector": "6290865d",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "2742:10:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1587,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2769:8:13"
									},
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:2:13"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2787:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:9:13"
									},
									"scope": 1858,
									"src": "2733:99:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1891
									],
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "2896:31:13",
										"statements": [
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2914:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1602,
												"id": 1604,
												"nodeType": "Return",
												"src": "2907:12:13"
											}
										]
									},
									"functionSelector": "5c975abb",
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2849:6:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1599,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2872:8:13"
									},
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:13"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "2890:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2890:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:6:13"
									},
									"scope": 1858,
									"src": "2840:87:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1899
									],
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "3012:45:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1614,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "3030:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1616,
													"indexExpression": {
														"id": 1615,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "3037:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3030:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1613,
												"id": 1617,
												"nodeType": "Return",
												"src": "3023:26:13"
											}
										]
									},
									"functionSelector": "e5839836",
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "2944:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1610,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2988:8:13"
									},
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "2961:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2953:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:21:13"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "3006:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3006:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:6:13"
									},
									"scope": 1858,
									"src": "2935:122:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1907
									],
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "3152:27:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3170:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1626,
												"id": 1628,
												"nodeType": "Return",
												"src": "3163:8:13"
											}
										]
									},
									"functionSelector": "158b1a57",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "3074:15:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1623,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3125:8:13"
									},
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "3098:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3090:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:21:13"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3143:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:9:13"
									},
									"scope": 1858,
									"src": "3065:114:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "3343:204:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1641,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "3424:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1646,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "3450:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3442:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1644,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3442:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3442:15:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3434:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3434:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3434:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3424:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3460:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3416:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:72:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "3416:72:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "3521:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "3532:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1653,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3506:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1858_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3512:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3506:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3506:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1658,
												"nodeType": "Return",
												"src": "3499:40:13"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3268:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3319:8:13"
									},
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3285:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "3277:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3304:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "3296:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3276:35:13"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "3337:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3337:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3336:6:13"
									},
									"scope": 1858,
									"src": "3259:288:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "3692:212:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "3769:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1678,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1666,
																				"src": "3795:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3787:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 1676,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3787:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3787:15:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3779:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1674,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3779:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3779:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3769:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520616e20696e7465676572",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3805:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															},
															"value": "Amount must be an integer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b535c0468e9f9e033c9c819c814f36b4b4085ed6152c578f6b630346cbeca243",
																"typeString": "literal_string \"Amount must be an integer\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3761:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3761:72:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "3761:72:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1687,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "3870:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3878:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3889:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1685,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3851:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_CCKToken_$1858_$",
																"typeString": "type(contract super CCKToken)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3857:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "3851:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1671,
												"id": 1691,
												"nodeType": "Return",
												"src": "3844:52:13"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3597:12:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1668,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3668:8:13"
									},
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3618:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3610:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3634:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3626:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3653:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3645:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:51:13"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "3686:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3686:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:6:13"
									},
									"scope": 1858,
									"src": "3588:316:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "4015:206:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1703,
																	"name": "mintedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "4089:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1704,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "4104:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4089:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1706,
																"name": "TOTAL_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "4114:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4089:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f74616c20737570706c79206578636565646564",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4128:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															},
															"value": "Total supply exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b093e630b9d0aa04ae9eacbb44fd1c33b8fdee577e01c6d5d848a584e96c82d",
																"typeString": "literal_string \"Total supply exceeded\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4081:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4081:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "4081:71:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "4169:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "4173:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1711,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4163:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4163:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "4163:17:13"
											},
											{
												"expression": {
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1716,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "4191:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1717,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "4207:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4191:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "4191:22:13"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1700,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1699,
												"name": "onlyOwner",
												"nameLocations": [
													"4005:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4005:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4005:9:13"
										}
									],
									"name": "mint",
									"nameLocation": "3963:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3976:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "3968:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3988:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "3980:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:28:13"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4015:0:13"
									},
									"scope": 1858,
									"src": "3954:267:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "4373:27:13",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4391:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1726,
												"id": 1728,
												"nodeType": "Return",
												"src": "4384:8:13"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4317:8:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4348:8:13"
									},
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:13"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "4366:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1724,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4366:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:7:13"
									},
									"scope": 1858,
									"src": "4308:92:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "4519:41:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1738,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "4547:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1737,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "4537:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4537:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1740,
												"nodeType": "Return",
												"src": "4530:22:13"
											}
										]
									},
									"functionSelector": "12cae7af",
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUser",
									"nameLocation": "4459:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4481:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "4473:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:14:13"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "4510:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:9:13"
									},
									"scope": 1858,
									"src": "4450:110:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "4654:217:13",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4680:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "4665:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 1748,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1747,
																"name": "IUniswapV3Pool",
																"nameLocations": [
																	"4665:14:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 955,
																"src": "4665:14:13"
															},
															"referencedDeclaration": 955,
															"src": "4665:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"arguments": [
														{
															"id": 1751,
															"name": "uniswapPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "4702:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1750,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4687:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$955_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4665:49:13"
											},
											{
												"assignments": [
													1755,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "4734:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "4726:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1754,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "4726:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1759,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1756,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "4762:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$955",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4767:5:13",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "4762:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4762:12:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4725:49:13"
											},
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4793:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "4785:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4785:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1773,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1764,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "4809:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4801:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4801:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "32",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4826:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "4801:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4831:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "313932",
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4836:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_192_by_1",
																		"typeString": "int_const 192"
																	},
																	"value": "192"
																},
																"src": "4831:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2896"
																}
															}
														],
														"id": 1771,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4830:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
															"typeString": "int_const 6277...(50 digits omitted)...2896"
														}
													},
													"src": "4801:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4785:55:13"
											},
											{
												"expression": {
													"id": 1774,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1761,
													"src": "4858:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1775,
												"nodeType": "Return",
												"src": "4851:12:13"
											}
										]
									},
									"functionSelector": "eb91d37e",
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "4604:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:13"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "4645:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4644:9:13"
									},
									"scope": 1858,
									"src": "4595:276:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "4964:1072:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "5045:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5054:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5045:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5057:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5037:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5037:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "5037:52:13"
											},
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "5323:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1848,
														"src": "5316:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$877",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1790,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1789,
																"name": "IERC20",
																"nameLocations": [
																	"5316:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 877,
																"src": "5316:6:13"
															},
															"referencedDeclaration": 877,
															"src": "5316:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"arguments": [
														{
															"id": 1793,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5338:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1792,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5331:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5331:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:35:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1799,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5512:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5516:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5512:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1803,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5532:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CCKToken_$1858",
																					"typeString": "contract CCKToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CCKToken_$1858",
																					"typeString": "contract CCKToken"
																				}
																			],
																			"id": 1802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5524:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1801,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5524:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5524:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1797,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "5496:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:9:13",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "5496:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5496:42:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "5542:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:52:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5550:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 1796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:87:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "5488:87:13"
											},
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5639:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1848,
														"src": "5634:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1811,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5634:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5668:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5672:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5668:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1817,
															"name": "transferReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "5680:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "5698:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1813,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "5649:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5655:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 876,
														"src": "5649:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5649:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5634:71:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1822,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "5724:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5716:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5716:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "5716:41:13"
											},
											{
												"assignments": [
													1827
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "cckAmount",
														"nameLocation": "5823:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1848,
														"src": "5815:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5815:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1828,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "5835:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1829,
														"name": "MINT_RATIO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "5844:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5835:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5815:39:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5871:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5875:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5871:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "cckAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "5883:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1832,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "5865:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5865:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "5865:28:13"
											},
											{
												"expression": {
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1838,
														"name": "mintedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "5904:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1839,
														"name": "cckAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "5920:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5904:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "5904:25:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1843,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5989:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1844,
															"name": "transferReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6003:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1845,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "6021:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1842,
														"name": "TransferExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "5972:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5972:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1847,
												"nodeType": "EmitStatement",
												"src": "5967:61:13"
											}
										]
									},
									"functionSelector": "cefaaff6",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndMint",
									"nameLocation": "4923:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4947:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4939:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4939:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4938:16:13"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4964:0:13"
									},
									"scope": 1858,
									"src": "4914:1122:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "c95d558e25335222b51e6424166172914e7ce4404a9647d3631ef320294081fd",
									"id": 1857,
									"name": "TransferExecuted",
									"nameLocation": "6071:16:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6104:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6088:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6127:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6111:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6111:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6139:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "6131:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:59:13"
									},
									"src": "6065:82:13"
								}
							],
							"scope": 1859,
							"src": "337:5813:13",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1857
							]
						}
					],
					"src": "33:6117:13"
				},
				"id": 13
			},
			"contracts/CCK/ERC3643.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/ERC3643.sol",
					"exportedSymbols": {
						"IERC3643": [
							1908
						]
					},
					"id": 1909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3643",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1861,
								"nodeType": "StructuredDocumentation",
								"src": "60:96:14",
								"text": " @title IERC3643\n @dev Interface for on-chain identity management and compliance."
							},
							"fullyImplemented": false,
							"id": 1908,
							"linearizedBaseContracts": [
								1908
							],
							"name": "IERC3643",
							"nameLocation": "168:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "184:119:14",
										"text": " @dev Returns the on-chain ID of the contract.\n @return address The address of the contract."
									},
									"functionSelector": "aba63705",
									"id": 1867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onchainID",
									"nameLocation": "318:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:2:14"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "353:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:9:14"
									},
									"scope": 1908,
									"src": "309:53:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "374:105:14",
										"text": " @dev Returns the version of the contract.\n @return string The version string."
									},
									"functionSelector": "54fd4d50",
									"id": 1873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "494:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:14"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "527:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "527:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:15:14"
									},
									"scope": 1908,
									"src": "485:57:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "554:119:14",
										"text": " @dev Returns the identity registry address.\n @return address The identity registry address."
									},
									"functionSelector": "134e18f4",
									"id": 1879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "identityRegistry",
									"nameLocation": "688:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:14"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "730:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:9:14"
									},
									"scope": 1908,
									"src": "679:60:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "751:105:14",
										"text": " @dev Returns the compliance address.\n @return address The compliance address."
									},
									"functionSelector": "6290865d",
									"id": 1885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compliance",
									"nameLocation": "871:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:14"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "907:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:9:14"
									},
									"scope": 1908,
									"src": "862:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "928:117:14",
										"text": " @dev Checks if the contract is paused.\n @return bool Indicates if the contract is paused."
									},
									"functionSelector": "5c975abb",
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:2:14"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "1092:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:6:14"
									},
									"scope": 1908,
									"src": "1051:47:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "1110:164:14",
										"text": " @dev Checks if a user is frozen.\n @param userAddress Address of the user to check.\n @return bool Indicates if the user is frozen."
									},
									"functionSelector": "e5839836",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFrozen",
									"nameLocation": "1289:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1306:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1298:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:21:14"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1342:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1342:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:6:14"
									},
									"scope": 1908,
									"src": "1280:68:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "1360:179:14",
										"text": " @dev Returns the number of frozen tokens for a user.\n @param userAddress Address of the user to check.\n @return uint256 Amount of frozen tokens."
									},
									"functionSelector": "158b1a57",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFrozenTokens",
									"nameLocation": "1554:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "1578:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "1570:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:21:14"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "1614:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:9:14"
									},
									"scope": 1908,
									"src": "1545:78:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1909,
							"src": "158:1468:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1593:14"
				},
				"id": 14
			}
		}
	}
}