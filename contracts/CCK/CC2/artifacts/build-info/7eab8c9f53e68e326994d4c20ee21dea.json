{
	"id": "7eab8c9f53e68e326994d4c20ee21dea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CCK/CC2/ctoc.sol": {
				"content": "//  Ethereum token (smart contract) that subtracts fee on each transfer\r\n//\r\n//  Token subtrai uma taxa a cada transferência (alem da taxa dos mineiradores)\r\n//  Dorival A. Cardozo - dorivalac@gmail.com - Inverno/2021\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\ncontract TokenHH {\r\n    IERC20 public token; // 已存在的 ERC20 代币合约\r\n    mapping(address => uint) public balances;\r\n    mapping(address => mapping(address => uint)) public allowance;\r\n\r\n    string public versao = \"1.0\";\r\n\r\n\r\n    address public donate;    \t\r\n    uint    public donateValue;  \r\n    address public contractOwner;    \r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n\r\n   constructor(address _token) {\r\n        token = IERC20(_token);\r\n        contractOwner = msg.sender;       \r\n        donate = contractOwner;\r\n        donateValue = 5 * 10 ** 18; // 捐赠值（以最小单位表示）\r\n    }\r\n   \r\n    function balanceOf(address owner) public view returns(uint) {\r\n        return balances[owner];\r\n    }\r\n    \r\n    function transfer(address to, uint value) public returns(bool) {\r\n        require(balanceOf(msg.sender) >= value, 'Saldo insuficiente para operacao( Insufficient funds )');\r\n\r\n\r\n        if ( ( donateValue * 10 )  < value ) {\r\n            balances[ donate ]   +=  donateValue;\r\n            balances[to]         +=  ( value - donateValue );\r\n        } else {\r\n            balances[to]         +=  value;\r\n        }    \r\n                    \r\n        balances[msg.sender] -= value;\r\n        \r\n        emit Transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address from, address to, uint value ) public returns(bool) {\r\n        require(balanceOf(from) >= value, 'Saldo insuficiente para operacao( Insufficient funds )' );\r\n        require(allowance[from][msg.sender] >= value, 'Sem permissao para transacao (allowance too low)');\r\n\r\n        if ( ( donateValue * 10 )  < value ) {\r\n            balances[ donate ]   +=  donateValue;\r\n            balances[to]         +=  ( value - donateValue );\r\n        } else {\r\n            balances[to]         +=  value;\r\n        }    \r\n\r\n        balances[from] -= value;      \t\r\n\r\n        emit Transfer(from, to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    \r\n    function approve(address spender, uint value) public returns(bool) {\r\n        allowance[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n   function changeAddressDonate(  address pDonateValue  )  public {\t\r\n     donate = pDonateValue;\t\t\r\n   }\t\r\n\r\n   function changeValueDonate(  uint  pDonateValue ) public  {\t\r\n        donateValue = pDonateValue;\t\t\r\n   }\t\r\n\r\n    \r\n}\r\n\r\n\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CCK/CC2/ctoc.sol": {
				"TokenHH": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pDonateValue",
									"type": "address"
								}
							],
							"name": "changeAddressDonate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pDonateValue",
									"type": "uint256"
								}
							],
							"name": "changeValueDonate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "donateValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "versao",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CCK/CC2/ctoc.sol\":395:2924  contract TokenHH {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CCK/CC2/ctoc.sol\":597:625  string public versao = \"1.0\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x312e300000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x03\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":902:1125  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  revert(0x00, 0x00)\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/CCK/CC2/ctoc.sol\":956:962  _token */\n  dup1\n    /* \"contracts/CCK/CC2/ctoc.sol\":941:946  token */\n  0x00\n  0x00\n    /* \"contracts/CCK/CC2/ctoc.sol\":941:963  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":990:1000  msg.sender */\n  caller\n    /* \"contracts/CCK/CC2/ctoc.sol\":974:987  contractOwner */\n  0x06\n  0x00\n    /* \"contracts/CCK/CC2/ctoc.sol\":974:1000  contractOwner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":1027:1040  contractOwner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/CCK/CC2/ctoc.sol\":1018:1024  donate */\n  0x04\n  0x00\n    /* \"contracts/CCK/CC2/ctoc.sol\":1018:1040  donate = contractOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":1065:1077  5 * 10 ** 18 */\n  0x4563918244f40000\n    /* \"contracts/CCK/CC2/ctoc.sol\":1051:1062  donateValue */\n  0x05\n    /* \"contracts/CCK/CC2/ctoc.sol\":1051:1077  donateValue = 5 * 10 ** 18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":902:1125  constructor(address _token) {... */\n  pop\n    /* \"contracts/CCK/CC2/ctoc.sol\":395:2924  contract TokenHH {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:106   */\ntag_9:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_10:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_11:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_12:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_41:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_43\n  tag_11\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":714:798   */\ntag_42:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_13:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_14:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_15:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_16:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_48\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_15\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1429:1468   */\n  tag_49\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_15\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_17:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_18:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_19:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_53\n    /* \"#utility.yul\":1818:1852   */\n  tag_54\n    /* \"#utility.yul\":1827:1851   */\n  tag_55\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_17\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1818:1852   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1800:1853   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_20:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_21:\n    /* \"#utility.yul\":2056:2095   */\n  tag_58\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2117:2208   */\n  tag_59\n    /* \"#utility.yul\":2166:2207   */\n  tag_60\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_20\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_22:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_23:\n    /* \"#utility.yul\":2377:2409   */\n  tag_63\n  tag_22\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2418:2483   */\n  tag_64\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_21\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_24:\n    /* \"#utility.yul\":2555:2675   */\ntag_66:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_69\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_25:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_72\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_13\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2906:2935   */\n  tag_73\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_14\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_74:\n    /* \"#utility.yul\":3133:3213   */\n  tag_75\n    /* \"#utility.yul\":3189:3211   */\n  tag_76\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_14\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_24\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_71:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_26:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_27:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_79\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_28:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_81\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_27\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_83\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_9\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_85\n  tag_10\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4038:4094   */\ntag_84:\n    /* \"#utility.yul\":4118:4156   */\n  tag_86\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_12\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4203:4270   */\n  tag_87\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_25\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_89\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_90:\n    /* \"#utility.yul\":5144:5211   */\n  tag_91\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_88)\n    /* \"#utility.yul\":4365:4983   */\ntag_89:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_92\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_13\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_93:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_97\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_27\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_96:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_88:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5315:5432   */\ntag_30:\n    /* \"#utility.yul\":5424:5425   */\n  0x00\n    /* \"#utility.yul\":5421:5422   */\n  0x00\n    /* \"#utility.yul\":5414:5426   */\n  revert\n    /* \"#utility.yul\":5561:5687   */\ntag_32:\n    /* \"#utility.yul\":5598:5605   */\n  0x00\n    /* \"#utility.yul\":5638:5680   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5631:5636   */\n  dup3\n    /* \"#utility.yul\":5627:5681   */\n  and\n    /* \"#utility.yul\":5616:5681   */\n  swap1\n  pop\n    /* \"#utility.yul\":5561:5687   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5693:5789   */\ntag_33:\n    /* \"#utility.yul\":5730:5737   */\n  0x00\n    /* \"#utility.yul\":5759:5783   */\n  tag_103\n    /* \"#utility.yul\":5777:5782   */\n  dup3\n    /* \"#utility.yul\":5759:5783   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5748:5783   */\n  swap1\n  pop\n    /* \"#utility.yul\":5693:5789   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5795:5917   */\ntag_34:\n    /* \"#utility.yul\":5868:5892   */\n  tag_105\n    /* \"#utility.yul\":5886:5891   */\n  dup2\n    /* \"#utility.yul\":5868:5892   */\n  tag_33\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5861:5866   */\n  dup2\n    /* \"#utility.yul\":5858:5893   */\n  eq\n    /* \"#utility.yul\":5848:5911   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5907:5908   */\n  0x00\n    /* \"#utility.yul\":5904:5905   */\n  0x00\n    /* \"#utility.yul\":5897:5909   */\n  revert\n    /* \"#utility.yul\":5848:5911   */\ntag_106:\n    /* \"#utility.yul\":5795:5917   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6066   */\ntag_35:\n    /* \"#utility.yul\":5980:5985   */\n  0x00\n    /* \"#utility.yul\":6011:6017   */\n  dup2\n    /* \"#utility.yul\":6005:6018   */\n  mload\n    /* \"#utility.yul\":5996:6018   */\n  swap1\n  pop\n    /* \"#utility.yul\":6027:6060   */\n  tag_108\n    /* \"#utility.yul\":6054:6059   */\n  dup2\n    /* \"#utility.yul\":6027:6060   */\n  tag_34\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5923:6066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6072:6423   */\ntag_5:\n    /* \"#utility.yul\":6142:6148   */\n  0x00\n    /* \"#utility.yul\":6191:6193   */\n  0x20\n    /* \"#utility.yul\":6179:6188   */\n  dup3\n    /* \"#utility.yul\":6170:6177   */\n  dup5\n    /* \"#utility.yul\":6166:6189   */\n  sub\n    /* \"#utility.yul\":6162:6194   */\n  slt\n    /* \"#utility.yul\":6159:6278   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6197:6276   */\n  tag_111\n  tag_30\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":6159:6278   */\ntag_110:\n    /* \"#utility.yul\":6317:6318   */\n  0x00\n    /* \"#utility.yul\":6342:6406   */\n  tag_112\n    /* \"#utility.yul\":6398:6405   */\n  dup5\n    /* \"#utility.yul\":6389:6395   */\n  dup3\n    /* \"#utility.yul\":6378:6387   */\n  dup6\n    /* \"#utility.yul\":6374:6396   */\n  add\n    /* \"#utility.yul\":6342:6406   */\n  tag_35\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":6332:6406   */\n  swap2\n  pop\n    /* \"#utility.yul\":6288:6416   */\n  pop\n    /* \"#utility.yul\":6072:6423   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CCK/CC2/ctoc.sol\":395:2924  contract TokenHH {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CCK/CC2/ctoc.sol\":395:2924  contract TokenHH {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa2f7c857\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xce606ee0\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0xa2f7c857\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xad0ef018\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x260f5cf1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x677aa7ae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CCK/CC2/ctoc.sol\":2492:2690  function approve(address spender, uint value) public returns(bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":1825:2478  function transferFrom(address from, address to, uint value ) public returns(bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":597:625  string public versao = \"1.0\" */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":480:520  mapping(address => uint) public balances */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":669:695  uint    public donateValue */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":1136:1237  function balanceOf(address owner) public view returns(uint) {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":2697:2799  function changeAddressDonate(  address pDonateValue  )  public {\t... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1249:1813  function transfer(address to, uint value) public returns(bool) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":2807:2912  function changeValueDonate(  uint  pDonateValue ) public  {\t... */\n    tag_11:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/CCK/CC2/ctoc.sol\":704:732  address public contractOwner */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":527:588  mapping(address => mapping(address => uint)) public allowance */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":636:657  address public donate */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":419:438  IERC20 public token */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CCK/CC2/ctoc.sol\":2492:2690  function approve(address spender, uint value) public returns(bool) {... */\n    tag_21:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2553:2557  bool */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2603:2608  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2579  allowance */\n      0x02\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2591  allowance[msg.sender] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2580:2590  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2591  allowance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2600  allowance[msg.sender][spender] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2592:2599  spender */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2600  allowance[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CC2/ctoc.sol\":2570:2608  allowance[msg.sender][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2645:2652  spender */\n      dup3\n        /* \"contracts/CCK/CC2/ctoc.sol\":2624:2660  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/ctoc.sol\":2633:2643  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":2624:2660  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/CCK/CC2/ctoc.sol\":2654:2659  value */\n      dup5\n        /* \"contracts/CCK/CC2/ctoc.sol\":2624:2660  Approval(msg.sender, spender, value) */\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CC2/ctoc.sol\":2678:2682  true */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2671:2682  return true */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2492:2690  function approve(address spender, uint value) public returns(bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":1825:2478  function transferFrom(address from, address to, uint value ) public returns(bool) {... */\n    tag_27:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1901:1905  bool */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1945:1950  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":1926:1941  balanceOf(from) */\n      tag_76\n        /* \"contracts/CCK/CC2/ctoc.sol\":1936:1940  from */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":1926:1935  balanceOf */\n      tag_44\n        /* \"contracts/CCK/CC2/ctoc.sol\":1926:1941  balanceOf(from) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1926:1950  balanceOf(from) >= value */\n      lt\n      iszero\n        /* \"contracts/CCK/CC2/ctoc.sol\":1918:2010  require(balanceOf(from) >= value, 'Saldo insuficiente para operacao( Insufficient funds )' ) */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2060:2065  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2038  allowance */\n      0x02\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2044  allowance[from] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2039:2043  from */\n      dup7\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2044  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2056  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2045:2055  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2056  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/CC2/ctoc.sol\":2029:2065  allowance[from][msg.sender] >= value */\n      lt\n      iszero\n        /* \"contracts/CCK/CC2/ctoc.sol\":2021:2118  require(allowance[from][msg.sender] >= value, 'Sem permissao para transacao (allowance too low)') */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2160:2165  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":2152:2154  10 */\n      0x0a\n        /* \"contracts/CCK/CC2/ctoc.sol\":2138:2149  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":2138:2154  donateValue * 10 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2136:2165  ( donateValue * 10 )  < value */\n      lt\n        /* \"contracts/CCK/CC2/ctoc.sol\":2131:2357  if ( ( donateValue * 10 )  < value ) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/CCK/CC2/ctoc.sol\":2208:2219  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":2183:2191  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2183:2201  balances[ donate ] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2193:2199  donate */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/ctoc.sol\":2183:2201  balances[ donate ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2183:2219  balances[ donate ]   +=  donateValue */\n      dup3\n      dup3\n      sload\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2269:2280  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":2261:2266  value */\n      dup3\n        /* \"contracts/CCK/CC2/ctoc.sol\":2261:2280  value - donateValue */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2234:2242  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2234:2246  balances[to] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2243:2245  to */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":2234:2246  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2234:2282  balances[to]         +=  ( value - donateValue ) */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2131:2357  if ( ( donateValue * 10 )  < value ) {... */\n      jump(tag_91)\n    tag_85:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2340:2345  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":2315:2323  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2315:2327  balances[to] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2324:2326  to */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":2315:2327  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2315:2345  balances[to]         +=  value */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2131:2357  if ( ( donateValue * 10 )  < value ) {... */\n    tag_91:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2391:2396  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":2373:2381  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2373:2387  balances[from] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2382:2386  from */\n      dup7\n        /* \"contracts/CCK/CC2/ctoc.sol\":2373:2387  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2373:2396  balances[from] -= value */\n      dup3\n      dup3\n      sload\n      tag_93\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_93:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2436:2438  to */\n      dup3\n        /* \"contracts/CCK/CC2/ctoc.sol\":2421:2446  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/ctoc.sol\":2430:2434  from */\n      dup5\n        /* \"contracts/CCK/CC2/ctoc.sol\":2421:2446  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/CCK/CC2/ctoc.sol\":2440:2445  value */\n      dup5\n        /* \"contracts/CCK/CC2/ctoc.sol\":2421:2446  Transfer(from, to, value) */\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CC2/ctoc.sol\":2466:2470  true */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":2459:2470  return true */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1825:2478  function transferFrom(address from, address to, uint value ) public returns(bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":597:625  string public versao = \"1.0\" */\n    tag_30:\n      0x03\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":480:520  mapping(address => uint) public balances */\n    tag_36:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":669:695  uint    public donateValue */\n    tag_40:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":1136:1237  function balanceOf(address owner) public view returns(uint) {... */\n    tag_44:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1190:1194  uint */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1214:1222  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1214:1229  balances[owner] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1223:1228  owner */\n      dup4\n        /* \"contracts/CCK/CC2/ctoc.sol\":1214:1229  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CCK/CC2/ctoc.sol\":1207:1229  return balances[owner] */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1136:1237  function balanceOf(address owner) public view returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":2697:2799  function changeAddressDonate(  address pDonateValue  )  public {\t... */\n    tag_48:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2778:2790  pDonateValue */\n      dup1\n        /* \"contracts/CCK/CC2/ctoc.sol\":2769:2775  donate */\n      0x04\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":2769:2790  donate = pDonateValue */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2697:2799  function changeAddressDonate(  address pDonateValue  )  public {\t... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":1249:1813  function transfer(address to, uint value) public returns(bool) {... */\n    tag_51:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1306:1310  bool */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1356:1361  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":1331:1352  balanceOf(msg.sender) */\n      tag_104\n        /* \"contracts/CCK/CC2/ctoc.sol\":1341:1351  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":1331:1340  balanceOf */\n      tag_44\n        /* \"contracts/CCK/CC2/ctoc.sol\":1331:1352  balanceOf(msg.sender) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1331:1361  balanceOf(msg.sender) >= value */\n      lt\n      iszero\n        /* \"contracts/CCK/CC2/ctoc.sol\":1323:1420  require(balanceOf(msg.sender) >= value, 'Saldo insuficiente para operacao( Insufficient funds )') */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_79\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1464:1469  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":1456:1458  10 */\n      0x0a\n        /* \"contracts/CCK/CC2/ctoc.sol\":1442:1453  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":1442:1458  donateValue * 10 */\n      tag_107\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_107:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1440:1469  ( donateValue * 10 )  < value */\n      lt\n        /* \"contracts/CCK/CC2/ctoc.sol\":1435:1661  if ( ( donateValue * 10 )  < value ) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/CCK/CC2/ctoc.sol\":1512:1523  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":1487:1495  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1487:1505  balances[ donate ] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1497:1503  donate */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/ctoc.sol\":1487:1505  balances[ donate ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1487:1523  balances[ donate ]   +=  donateValue */\n      dup3\n      dup3\n      sload\n      tag_109\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_109:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1573:1584  donateValue */\n      sload(0x05)\n        /* \"contracts/CCK/CC2/ctoc.sol\":1565:1570  value */\n      dup3\n        /* \"contracts/CCK/CC2/ctoc.sol\":1565:1584  value - donateValue */\n      tag_110\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_110:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1538:1546  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1538:1550  balances[to] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1547:1549  to */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":1538:1550  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1538:1586  balances[to]         +=  ( value - donateValue ) */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_111:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1435:1661  if ( ( donateValue * 10 )  < value ) {... */\n      jump(tag_112)\n    tag_108:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1644:1649  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":1619:1627  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1619:1631  balances[to] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1628:1630  to */\n      dup6\n        /* \"contracts/CCK/CC2/ctoc.sol\":1619:1631  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1619:1649  balances[to]         +=  value */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1435:1661  if ( ( donateValue * 10 )  < value ) {... */\n    tag_112:\n        /* \"contracts/CCK/CC2/ctoc.sol\":1721:1726  value */\n      dup2\n        /* \"contracts/CCK/CC2/ctoc.sol\":1697:1705  balances */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1697:1717  balances[msg.sender] */\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1706:1716  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":1697:1717  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CCK/CC2/ctoc.sol\":1697:1726  balances[msg.sender] -= value */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1773:1775  to */\n      dup3\n        /* \"contracts/CCK/CC2/ctoc.sol\":1752:1783  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CCK/CC2/ctoc.sol\":1761:1771  msg.sender */\n      caller\n        /* \"contracts/CCK/CC2/ctoc.sol\":1752:1783  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/CCK/CC2/ctoc.sol\":1777:1782  value */\n      dup5\n        /* \"contracts/CCK/CC2/ctoc.sol\":1752:1783  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CCK/CC2/ctoc.sol\":1801:1805  true */\n      0x01\n        /* \"contracts/CCK/CC2/ctoc.sol\":1794:1805  return true */\n      swap1\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":1249:1813  function transfer(address to, uint value) public returns(bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":2807:2912  function changeValueDonate(  uint  pDonateValue ) public  {\t... */\n    tag_56:\n        /* \"contracts/CCK/CC2/ctoc.sol\":2891:2903  pDonateValue */\n      dup1\n        /* \"contracts/CCK/CC2/ctoc.sol\":2877:2888  donateValue */\n      0x05\n        /* \"contracts/CCK/CC2/ctoc.sol\":2877:2903  donateValue = pDonateValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CCK/CC2/ctoc.sol\":2807:2912  function changeValueDonate(  uint  pDonateValue ) public  {\t... */\n      pop\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":704:732  address public contractOwner */\n    tag_58:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":527:588  mapping(address => mapping(address => uint)) public allowance */\n    tag_64:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":636:657  address public donate */\n    tag_67:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CCK/CC2/ctoc.sol\":419:438  IERC20 public token */\n    tag_70:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_118:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_120:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_121:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_153\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_120\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_122:\n        /* \"#utility.yul\":641:665   */\n      tag_155\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_121\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_156:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_123:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_158\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_122\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_124:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_125:\n        /* \"#utility.yul\":997:1021   */\n      tag_161\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_124\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_162:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_126:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_164\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_125\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_20:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_167\n      tag_118\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1290:1409   */\n    tag_166:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_168\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_123\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_169\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_126\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_127:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_128:\n        /* \"#utility.yul\":1854:1875   */\n      tag_172\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_127\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_23:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_174\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_128\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2723   */\n    tag_26:\n        /* \"#utility.yul\":2181:2187   */\n      0x00\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x60\n        /* \"#utility.yul\":2234:2243   */\n      dup5\n        /* \"#utility.yul\":2225:2232   */\n      dup7\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2333   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2252:2331   */\n      tag_177\n      tag_118\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2214:2333   */\n    tag_176:\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2397:2450   */\n      tag_178\n        /* \"#utility.yul\":2442:2449   */\n      dup7\n        /* \"#utility.yul\":2433:2439   */\n      dup3\n        /* \"#utility.yul\":2422:2431   */\n      dup8\n        /* \"#utility.yul\":2418:2440   */\n      add\n        /* \"#utility.yul\":2397:2450   */\n      tag_123\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2387:2450   */\n      swap4\n      pop\n        /* \"#utility.yul\":2343:2460   */\n      pop\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2525:2578   */\n      tag_179\n        /* \"#utility.yul\":2570:2577   */\n      dup7\n        /* \"#utility.yul\":2561:2567   */\n      dup3\n        /* \"#utility.yul\":2550:2559   */\n      dup8\n        /* \"#utility.yul\":2546:2568   */\n      add\n        /* \"#utility.yul\":2525:2578   */\n      tag_123\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2515:2578   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2588   */\n      pop\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2653:2706   */\n      tag_180\n        /* \"#utility.yul\":2698:2705   */\n      dup7\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2678:2687   */\n      dup8\n        /* \"#utility.yul\":2674:2696   */\n      add\n        /* \"#utility.yul\":2653:2706   */\n      tag_126\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2643:2706   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2716   */\n      pop\n        /* \"#utility.yul\":2104:2723   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2729:2828   */\n    tag_129:\n        /* \"#utility.yul\":2781:2787   */\n      0x00\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2809:2821   */\n      mload\n        /* \"#utility.yul\":2799:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2729:2828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2834:3003   */\n    tag_130:\n        /* \"#utility.yul\":2918:2929   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup3\n        /* \"#utility.yul\":2947:2950   */\n      dup3\n        /* \"#utility.yul\":2940:2959   */\n      mstore\n        /* \"#utility.yul\":2992:2996   */\n      0x20\n        /* \"#utility.yul\":2987:2990   */\n      dup3\n        /* \"#utility.yul\":2983:2997   */\n      add\n        /* \"#utility.yul\":2968:2997   */\n      swap1\n      pop\n        /* \"#utility.yul\":2834:3003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3009:3148   */\n    tag_131:\n        /* \"#utility.yul\":3098:3104   */\n      dup3\n        /* \"#utility.yul\":3093:3096   */\n      dup2\n        /* \"#utility.yul\":3088:3091   */\n      dup4\n        /* \"#utility.yul\":3082:3105   */\n      mcopy\n        /* \"#utility.yul\":3139:3140   */\n      0x00\n        /* \"#utility.yul\":3130:3136   */\n      dup4\n        /* \"#utility.yul\":3125:3128   */\n      dup4\n        /* \"#utility.yul\":3121:3137   */\n      add\n        /* \"#utility.yul\":3114:3141   */\n      mstore\n        /* \"#utility.yul\":3009:3148   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3154:3256   */\n    tag_132:\n        /* \"#utility.yul\":3195:3201   */\n      0x00\n        /* \"#utility.yul\":3246:3248   */\n      0x1f\n        /* \"#utility.yul\":3242:3249   */\n      not\n        /* \"#utility.yul\":3237:3239   */\n      0x1f\n        /* \"#utility.yul\":3230:3235   */\n      dup4\n        /* \"#utility.yul\":3226:3240   */\n      add\n        /* \"#utility.yul\":3222:3250   */\n      and\n        /* \"#utility.yul\":3212:3250   */\n      swap1\n      pop\n        /* \"#utility.yul\":3154:3256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3262:3639   */\n    tag_133:\n        /* \"#utility.yul\":3350:3353   */\n      0x00\n        /* \"#utility.yul\":3378:3417   */\n      tag_186\n        /* \"#utility.yul\":3411:3416   */\n      dup3\n        /* \"#utility.yul\":3378:3417   */\n      tag_129\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3433:3504   */\n      tag_187\n        /* \"#utility.yul\":3497:3503   */\n      dup2\n        /* \"#utility.yul\":3492:3495   */\n      dup6\n        /* \"#utility.yul\":3433:3504   */\n      tag_130\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3426:3504   */\n      swap4\n      pop\n        /* \"#utility.yul\":3513:3578   */\n      tag_188\n        /* \"#utility.yul\":3571:3577   */\n      dup2\n        /* \"#utility.yul\":3566:3569   */\n      dup6\n        /* \"#utility.yul\":3559:3563   */\n      0x20\n        /* \"#utility.yul\":3552:3557   */\n      dup7\n        /* \"#utility.yul\":3548:3564   */\n      add\n        /* \"#utility.yul\":3513:3578   */\n      tag_131\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3603:3632   */\n      tag_189\n        /* \"#utility.yul\":3625:3631   */\n      dup2\n        /* \"#utility.yul\":3603:3632   */\n      tag_132\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3598:3601   */\n      dup5\n        /* \"#utility.yul\":3594:3633   */\n      add\n        /* \"#utility.yul\":3587:3633   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3639   */\n      pop\n        /* \"#utility.yul\":3262:3639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:3958   */\n    tag_32:\n        /* \"#utility.yul\":3758:3762   */\n      0x00\n        /* \"#utility.yul\":3796:3798   */\n      0x20\n        /* \"#utility.yul\":3785:3794   */\n      dup3\n        /* \"#utility.yul\":3781:3799   */\n      add\n        /* \"#utility.yul\":3773:3799   */\n      swap1\n      pop\n        /* \"#utility.yul\":3845:3854   */\n      dup2\n        /* \"#utility.yul\":3839:3843   */\n      dup2\n        /* \"#utility.yul\":3835:3855   */\n      sub\n        /* \"#utility.yul\":3831:3832   */\n      0x00\n        /* \"#utility.yul\":3820:3829   */\n      dup4\n        /* \"#utility.yul\":3816:3833   */\n      add\n        /* \"#utility.yul\":3809:3856   */\n      mstore\n        /* \"#utility.yul\":3873:3951   */\n      tag_191\n        /* \"#utility.yul\":3946:3950   */\n      dup2\n        /* \"#utility.yul\":3937:3943   */\n      dup5\n        /* \"#utility.yul\":3873:3951   */\n      tag_133\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3865:3951   */\n      swap1\n      pop\n        /* \"#utility.yul\":3645:3958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4293   */\n    tag_35:\n        /* \"#utility.yul\":4023:4029   */\n      0x00\n        /* \"#utility.yul\":4072:4074   */\n      0x20\n        /* \"#utility.yul\":4060:4069   */\n      dup3\n        /* \"#utility.yul\":4051:4058   */\n      dup5\n        /* \"#utility.yul\":4047:4070   */\n      sub\n        /* \"#utility.yul\":4043:4075   */\n      slt\n        /* \"#utility.yul\":4040:4159   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4078:4157   */\n      tag_194\n      tag_118\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4040:4159   */\n    tag_193:\n        /* \"#utility.yul\":4198:4199   */\n      0x00\n        /* \"#utility.yul\":4223:4276   */\n      tag_195\n        /* \"#utility.yul\":4268:4275   */\n      dup5\n        /* \"#utility.yul\":4259:4265   */\n      dup3\n        /* \"#utility.yul\":4248:4257   */\n      dup6\n        /* \"#utility.yul\":4244:4266   */\n      add\n        /* \"#utility.yul\":4223:4276   */\n      tag_123\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4213:4276   */\n      swap2\n      pop\n        /* \"#utility.yul\":4169:4286   */\n      pop\n        /* \"#utility.yul\":3964:4293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4299:4417   */\n    tag_134:\n        /* \"#utility.yul\":4386:4410   */\n      tag_197\n        /* \"#utility.yul\":4404:4409   */\n      dup2\n        /* \"#utility.yul\":4386:4410   */\n      tag_124\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4381:4384   */\n      dup3\n        /* \"#utility.yul\":4374:4411   */\n      mstore\n        /* \"#utility.yul\":4299:4417   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4645   */\n    tag_38:\n        /* \"#utility.yul\":4516:4520   */\n      0x00\n        /* \"#utility.yul\":4554:4556   */\n      0x20\n        /* \"#utility.yul\":4543:4552   */\n      dup3\n        /* \"#utility.yul\":4539:4557   */\n      add\n        /* \"#utility.yul\":4531:4557   */\n      swap1\n      pop\n        /* \"#utility.yul\":4567:4638   */\n      tag_199\n        /* \"#utility.yul\":4635:4636   */\n      0x00\n        /* \"#utility.yul\":4624:4633   */\n      dup4\n        /* \"#utility.yul\":4620:4637   */\n      add\n        /* \"#utility.yul\":4611:4617   */\n      dup5\n        /* \"#utility.yul\":4567:4638   */\n      tag_134\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4423:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4980   */\n    tag_55:\n        /* \"#utility.yul\":4710:4716   */\n      0x00\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4747:4756   */\n      dup3\n        /* \"#utility.yul\":4738:4745   */\n      dup5\n        /* \"#utility.yul\":4734:4757   */\n      sub\n        /* \"#utility.yul\":4730:4762   */\n      slt\n        /* \"#utility.yul\":4727:4846   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4765:4844   */\n      tag_202\n      tag_118\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4727:4846   */\n    tag_201:\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4910:4963   */\n      tag_203\n        /* \"#utility.yul\":4955:4962   */\n      dup5\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4935:4944   */\n      dup6\n        /* \"#utility.yul\":4931:4953   */\n      add\n        /* \"#utility.yul\":4910:4963   */\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4900:4963   */\n      swap2\n      pop\n        /* \"#utility.yul\":4856:4973   */\n      pop\n        /* \"#utility.yul\":4651:4980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4986:5104   */\n    tag_135:\n        /* \"#utility.yul\":5073:5097   */\n      tag_205\n        /* \"#utility.yul\":5091:5096   */\n      dup2\n        /* \"#utility.yul\":5073:5097   */\n      tag_121\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5068:5071   */\n      dup3\n        /* \"#utility.yul\":5061:5098   */\n      mstore\n        /* \"#utility.yul\":4986:5104   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5332   */\n    tag_60:\n        /* \"#utility.yul\":5203:5207   */\n      0x00\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"#utility.yul\":5230:5239   */\n      dup3\n        /* \"#utility.yul\":5226:5244   */\n      add\n        /* \"#utility.yul\":5218:5244   */\n      swap1\n      pop\n        /* \"#utility.yul\":5254:5325   */\n      tag_207\n        /* \"#utility.yul\":5322:5323   */\n      0x00\n        /* \"#utility.yul\":5311:5320   */\n      dup4\n        /* \"#utility.yul\":5307:5324   */\n      add\n        /* \"#utility.yul\":5298:5304   */\n      dup5\n        /* \"#utility.yul\":5254:5325   */\n      tag_135\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5110:5332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5338:5812   */\n    tag_63:\n        /* \"#utility.yul\":5406:5412   */\n      0x00\n        /* \"#utility.yul\":5414:5420   */\n      0x00\n        /* \"#utility.yul\":5463:5465   */\n      0x40\n        /* \"#utility.yul\":5451:5460   */\n      dup4\n        /* \"#utility.yul\":5442:5449   */\n      dup6\n        /* \"#utility.yul\":5438:5461   */\n      sub\n        /* \"#utility.yul\":5434:5466   */\n      slt\n        /* \"#utility.yul\":5431:5550   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5469:5548   */\n      tag_210\n      tag_118\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5431:5550   */\n    tag_209:\n        /* \"#utility.yul\":5589:5590   */\n      0x00\n        /* \"#utility.yul\":5614:5667   */\n      tag_211\n        /* \"#utility.yul\":5659:5666   */\n      dup6\n        /* \"#utility.yul\":5650:5656   */\n      dup3\n        /* \"#utility.yul\":5639:5648   */\n      dup7\n        /* \"#utility.yul\":5635:5657   */\n      add\n        /* \"#utility.yul\":5614:5667   */\n      tag_123\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5604:5667   */\n      swap3\n      pop\n        /* \"#utility.yul\":5560:5677   */\n      pop\n        /* \"#utility.yul\":5716:5718   */\n      0x20\n        /* \"#utility.yul\":5742:5795   */\n      tag_212\n        /* \"#utility.yul\":5787:5794   */\n      dup6\n        /* \"#utility.yul\":5778:5784   */\n      dup3\n        /* \"#utility.yul\":5767:5776   */\n      dup7\n        /* \"#utility.yul\":5763:5785   */\n      add\n        /* \"#utility.yul\":5742:5795   */\n      tag_123\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5732:5795   */\n      swap2\n      pop\n        /* \"#utility.yul\":5687:5805   */\n      pop\n        /* \"#utility.yul\":5338:5812   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5818:5878   */\n    tag_136:\n        /* \"#utility.yul\":5846:5849   */\n      0x00\n        /* \"#utility.yul\":5867:5872   */\n      dup2\n        /* \"#utility.yul\":5860:5872   */\n      swap1\n      pop\n        /* \"#utility.yul\":5818:5878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5884:6026   */\n    tag_137:\n        /* \"#utility.yul\":5934:5943   */\n      0x00\n        /* \"#utility.yul\":5967:6020   */\n      tag_215\n        /* \"#utility.yul\":5985:6019   */\n      tag_216\n        /* \"#utility.yul\":5994:6018   */\n      tag_217\n        /* \"#utility.yul\":6012:6017   */\n      dup5\n        /* \"#utility.yul\":5994:6018   */\n      tag_120\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5985:6019   */\n      tag_136\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5967:6020   */\n      tag_120\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5954:6020   */\n      swap1\n      pop\n        /* \"#utility.yul\":5884:6026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6158   */\n    tag_138:\n        /* \"#utility.yul\":6082:6091   */\n      0x00\n        /* \"#utility.yul\":6115:6152   */\n      tag_219\n        /* \"#utility.yul\":6146:6151   */\n      dup3\n        /* \"#utility.yul\":6115:6152   */\n      tag_137\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6102:6152   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6164:6304   */\n    tag_139:\n        /* \"#utility.yul\":6228:6237   */\n      0x00\n        /* \"#utility.yul\":6261:6298   */\n      tag_221\n        /* \"#utility.yul\":6292:6297   */\n      dup3\n        /* \"#utility.yul\":6261:6298   */\n      tag_138\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6248:6298   */\n      swap1\n      pop\n        /* \"#utility.yul\":6164:6304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6310:6469   */\n    tag_140:\n        /* \"#utility.yul\":6411:6462   */\n      tag_223\n        /* \"#utility.yul\":6456:6461   */\n      dup2\n        /* \"#utility.yul\":6411:6462   */\n      tag_139\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6406:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6463   */\n      mstore\n        /* \"#utility.yul\":6310:6469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6475:6725   */\n    tag_72:\n        /* \"#utility.yul\":6582:6586   */\n      0x00\n        /* \"#utility.yul\":6620:6622   */\n      0x20\n        /* \"#utility.yul\":6609:6618   */\n      dup3\n        /* \"#utility.yul\":6605:6623   */\n      add\n        /* \"#utility.yul\":6597:6623   */\n      swap1\n      pop\n        /* \"#utility.yul\":6633:6718   */\n      tag_225\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6704:6713   */\n      dup4\n        /* \"#utility.yul\":6700:6717   */\n      add\n        /* \"#utility.yul\":6691:6697   */\n      dup5\n        /* \"#utility.yul\":6633:6718   */\n      tag_140\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6475:6725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6731:6972   */\n    tag_141:\n        /* \"#utility.yul\":6871:6905   */\n      0x53616c646f20696e737566696369656e74652070617261206f7065726163616f\n        /* \"#utility.yul\":6867:6868   */\n      0x00\n        /* \"#utility.yul\":6859:6865   */\n      dup3\n        /* \"#utility.yul\":6855:6869   */\n      add\n        /* \"#utility.yul\":6848:6906   */\n      mstore\n        /* \"#utility.yul\":6940:6964   */\n      0x2820496e73756666696369656e742066756e6473202900000000000000000000\n        /* \"#utility.yul\":6935:6937   */\n      0x20\n        /* \"#utility.yul\":6927:6933   */\n      dup3\n        /* \"#utility.yul\":6923:6938   */\n      add\n        /* \"#utility.yul\":6916:6965   */\n      mstore\n        /* \"#utility.yul\":6731:6972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6978:7344   */\n    tag_142:\n        /* \"#utility.yul\":7120:7123   */\n      0x00\n        /* \"#utility.yul\":7141:7208   */\n      tag_228\n        /* \"#utility.yul\":7205:7207   */\n      0x36\n        /* \"#utility.yul\":7200:7203   */\n      dup4\n        /* \"#utility.yul\":7141:7208   */\n      tag_130\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":7134:7208   */\n      swap2\n      pop\n        /* \"#utility.yul\":7217:7310   */\n      tag_229\n        /* \"#utility.yul\":7306:7309   */\n      dup3\n        /* \"#utility.yul\":7217:7310   */\n      tag_141\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7335:7337   */\n      0x40\n        /* \"#utility.yul\":7330:7333   */\n      dup3\n        /* \"#utility.yul\":7326:7338   */\n      add\n        /* \"#utility.yul\":7319:7338   */\n      swap1\n      pop\n        /* \"#utility.yul\":6978:7344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7769   */\n    tag_79:\n        /* \"#utility.yul\":7516:7520   */\n      0x00\n        /* \"#utility.yul\":7554:7556   */\n      0x20\n        /* \"#utility.yul\":7543:7552   */\n      dup3\n        /* \"#utility.yul\":7539:7557   */\n      add\n        /* \"#utility.yul\":7531:7557   */\n      swap1\n      pop\n        /* \"#utility.yul\":7603:7612   */\n      dup2\n        /* \"#utility.yul\":7597:7601   */\n      dup2\n        /* \"#utility.yul\":7593:7613   */\n      sub\n        /* \"#utility.yul\":7589:7590   */\n      0x00\n        /* \"#utility.yul\":7578:7587   */\n      dup4\n        /* \"#utility.yul\":7574:7591   */\n      add\n        /* \"#utility.yul\":7567:7614   */\n      mstore\n        /* \"#utility.yul\":7631:7762   */\n      tag_231\n        /* \"#utility.yul\":7757:7761   */\n      dup2\n        /* \"#utility.yul\":7631:7762   */\n      tag_142\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7623:7762   */\n      swap1\n      pop\n        /* \"#utility.yul\":7350:7769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8010   */\n    tag_143:\n        /* \"#utility.yul\":7915:7949   */\n      0x53656d207065726d697373616f2070617261207472616e736163616f2028616c\n        /* \"#utility.yul\":7911:7912   */\n      0x00\n        /* \"#utility.yul\":7903:7909   */\n      dup3\n        /* \"#utility.yul\":7899:7913   */\n      add\n        /* \"#utility.yul\":7892:7950   */\n      mstore\n        /* \"#utility.yul\":7984:8002   */\n      0x6c6f77616e636520746f6f206c6f772900000000000000000000000000000000\n        /* \"#utility.yul\":7979:7981   */\n      0x20\n        /* \"#utility.yul\":7971:7977   */\n      dup3\n        /* \"#utility.yul\":7967:7982   */\n      add\n        /* \"#utility.yul\":7960:8003   */\n      mstore\n        /* \"#utility.yul\":7775:8010   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8382   */\n    tag_144:\n        /* \"#utility.yul\":8158:8161   */\n      0x00\n        /* \"#utility.yul\":8179:8246   */\n      tag_234\n        /* \"#utility.yul\":8243:8245   */\n      0x30\n        /* \"#utility.yul\":8238:8241   */\n      dup4\n        /* \"#utility.yul\":8179:8246   */\n      tag_130\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8172:8246   */\n      swap2\n      pop\n        /* \"#utility.yul\":8255:8348   */\n      tag_235\n        /* \"#utility.yul\":8344:8347   */\n      dup3\n        /* \"#utility.yul\":8255:8348   */\n      tag_143\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8373:8375   */\n      0x40\n        /* \"#utility.yul\":8368:8371   */\n      dup3\n        /* \"#utility.yul\":8364:8376   */\n      add\n        /* \"#utility.yul\":8357:8376   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8388:8807   */\n    tag_82:\n        /* \"#utility.yul\":8554:8558   */\n      0x00\n        /* \"#utility.yul\":8592:8594   */\n      0x20\n        /* \"#utility.yul\":8581:8590   */\n      dup3\n        /* \"#utility.yul\":8577:8595   */\n      add\n        /* \"#utility.yul\":8569:8595   */\n      swap1\n      pop\n        /* \"#utility.yul\":8641:8650   */\n      dup2\n        /* \"#utility.yul\":8635:8639   */\n      dup2\n        /* \"#utility.yul\":8631:8651   */\n      sub\n        /* \"#utility.yul\":8627:8628   */\n      0x00\n        /* \"#utility.yul\":8616:8625   */\n      dup4\n        /* \"#utility.yul\":8612:8629   */\n      add\n        /* \"#utility.yul\":8605:8652   */\n      mstore\n        /* \"#utility.yul\":8669:8800   */\n      tag_237\n        /* \"#utility.yul\":8795:8799   */\n      dup2\n        /* \"#utility.yul\":8669:8800   */\n      tag_144\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":8661:8800   */\n      swap1\n      pop\n        /* \"#utility.yul\":8388:8807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8813:8993   */\n    tag_145:\n        /* \"#utility.yul\":8861:8938   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8858:8859   */\n      0x00\n        /* \"#utility.yul\":8851:8939   */\n      mstore\n        /* \"#utility.yul\":8958:8962   */\n      0x11\n        /* \"#utility.yul\":8955:8956   */\n      0x04\n        /* \"#utility.yul\":8948:8963   */\n      mstore\n        /* \"#utility.yul\":8982:8986   */\n      0x24\n        /* \"#utility.yul\":8979:8980   */\n      0x00\n        /* \"#utility.yul\":8972:8987   */\n      revert\n        /* \"#utility.yul\":8999:9409   */\n    tag_84:\n        /* \"#utility.yul\":9039:9046   */\n      0x00\n        /* \"#utility.yul\":9062:9082   */\n      tag_240\n        /* \"#utility.yul\":9080:9081   */\n      dup3\n        /* \"#utility.yul\":9062:9082   */\n      tag_124\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9057:9082   */\n      swap2\n      pop\n        /* \"#utility.yul\":9096:9116   */\n      tag_241\n        /* \"#utility.yul\":9114:9115   */\n      dup4\n        /* \"#utility.yul\":9096:9116   */\n      tag_124\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9091:9116   */\n      swap3\n      pop\n        /* \"#utility.yul\":9151:9152   */\n      dup3\n        /* \"#utility.yul\":9148:9149   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      mul\n        /* \"#utility.yul\":9173:9203   */\n      tag_242\n        /* \"#utility.yul\":9191:9202   */\n      dup2\n        /* \"#utility.yul\":9173:9203   */\n      tag_124\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9162:9203   */\n      swap2\n      pop\n        /* \"#utility.yul\":9352:9353   */\n      dup3\n        /* \"#utility.yul\":9343:9350   */\n      dup3\n        /* \"#utility.yul\":9339:9354   */\n      div\n        /* \"#utility.yul\":9336:9337   */\n      dup5\n        /* \"#utility.yul\":9333:9355   */\n      eq\n        /* \"#utility.yul\":9313:9314   */\n      dup4\n        /* \"#utility.yul\":9306:9315   */\n      iszero\n        /* \"#utility.yul\":9286:9369   */\n      or\n        /* \"#utility.yul\":9263:9402   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":9382:9400   */\n      tag_244\n      tag_145\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9263:9402   */\n    tag_243:\n        /* \"#utility.yul\":9047:9409   */\n      pop\n        /* \"#utility.yul\":8999:9409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9606   */\n    tag_87:\n        /* \"#utility.yul\":9455:9458   */\n      0x00\n        /* \"#utility.yul\":9474:9494   */\n      tag_246\n        /* \"#utility.yul\":9492:9493   */\n      dup3\n        /* \"#utility.yul\":9474:9494   */\n      tag_124\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9469:9494   */\n      swap2\n      pop\n        /* \"#utility.yul\":9508:9528   */\n      tag_247\n        /* \"#utility.yul\":9526:9527   */\n      dup4\n        /* \"#utility.yul\":9508:9528   */\n      tag_124\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9503:9528   */\n      swap3\n      pop\n        /* \"#utility.yul\":9551:9552   */\n      dup3\n        /* \"#utility.yul\":9548:9549   */\n      dup3\n        /* \"#utility.yul\":9544:9553   */\n      add\n        /* \"#utility.yul\":9537:9553   */\n      swap1\n      pop\n        /* \"#utility.yul\":9572:9575   */\n      dup1\n        /* \"#utility.yul\":9569:9570   */\n      dup3\n        /* \"#utility.yul\":9566:9576   */\n      gt\n        /* \"#utility.yul\":9563:9599   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":9579:9597   */\n      tag_249\n      tag_145\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":9563:9599   */\n    tag_248:\n        /* \"#utility.yul\":9415:9606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9612:9806   */\n    tag_89:\n        /* \"#utility.yul\":9652:9656   */\n      0x00\n        /* \"#utility.yul\":9672:9692   */\n      tag_251\n        /* \"#utility.yul\":9690:9691   */\n      dup3\n        /* \"#utility.yul\":9672:9692   */\n      tag_124\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9667:9692   */\n      swap2\n      pop\n        /* \"#utility.yul\":9706:9726   */\n      tag_252\n        /* \"#utility.yul\":9724:9725   */\n      dup4\n        /* \"#utility.yul\":9706:9726   */\n      tag_124\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9701:9726   */\n      swap3\n      pop\n        /* \"#utility.yul\":9750:9751   */\n      dup3\n        /* \"#utility.yul\":9747:9748   */\n      dup3\n        /* \"#utility.yul\":9743:9752   */\n      sub\n        /* \"#utility.yul\":9735:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9774:9775   */\n      dup2\n        /* \"#utility.yul\":9768:9772   */\n      dup2\n        /* \"#utility.yul\":9765:9776   */\n      gt\n        /* \"#utility.yul\":9762:9799   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":9779:9797   */\n      tag_254\n      tag_145\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9762:9799   */\n    tag_253:\n        /* \"#utility.yul\":9612:9806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9812:9992   */\n    tag_146:\n        /* \"#utility.yul\":9860:9937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9850:9938   */\n      mstore\n        /* \"#utility.yul\":9957:9961   */\n      0x22\n        /* \"#utility.yul\":9954:9955   */\n      0x04\n        /* \"#utility.yul\":9947:9962   */\n      mstore\n        /* \"#utility.yul\":9981:9985   */\n      0x24\n        /* \"#utility.yul\":9978:9979   */\n      0x00\n        /* \"#utility.yul\":9971:9986   */\n      revert\n        /* \"#utility.yul\":9998:10318   */\n    tag_96:\n        /* \"#utility.yul\":10042:10048   */\n      0x00\n        /* \"#utility.yul\":10079:10080   */\n      0x02\n        /* \"#utility.yul\":10073:10077   */\n      dup3\n        /* \"#utility.yul\":10069:10081   */\n      div\n        /* \"#utility.yul\":10059:10081   */\n      swap1\n      pop\n        /* \"#utility.yul\":10126:10127   */\n      0x01\n        /* \"#utility.yul\":10120:10124   */\n      dup3\n        /* \"#utility.yul\":10116:10128   */\n      and\n        /* \"#utility.yul\":10147:10165   */\n      dup1\n        /* \"#utility.yul\":10137:10218   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":10203:10207   */\n      0x7f\n        /* \"#utility.yul\":10195:10201   */\n      dup3\n        /* \"#utility.yul\":10191:10208   */\n      and\n        /* \"#utility.yul\":10181:10208   */\n      swap2\n      pop\n        /* \"#utility.yul\":10137:10218   */\n    tag_257:\n        /* \"#utility.yul\":10265:10267   */\n      0x20\n        /* \"#utility.yul\":10257:10263   */\n      dup3\n        /* \"#utility.yul\":10254:10268   */\n      lt\n        /* \"#utility.yul\":10234:10252   */\n      dup2\n        /* \"#utility.yul\":10231:10269   */\n      sub\n        /* \"#utility.yul\":10228:10312   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":10284:10302   */\n      tag_259\n      tag_146\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10228:10312   */\n    tag_258:\n        /* \"#utility.yul\":10049:10318   */\n      pop\n        /* \"#utility.yul\":9998:10318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc53d44a72dd72e8dd2362f1c7e5e070ea293490ae8a8fe8470adc569f15c2de64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_856": {
									"entryPoint": null,
									"id": 856,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6426:6",
										"nodeType": "YulBlock",
										"src": "0:6426:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "140:152:6",
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:6",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nativeSrc": "150:88:6",
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nativeSrc": "150:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:6",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:6",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nativeSrc": "247:15:6",
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nativeSrc": "247:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:6",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nativeSrc": "271:15:6",
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nativeSrc": "271:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nativeSrc": "326:152:6",
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:6",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:6",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nativeSrc": "336:88:6",
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nativeSrc": "336:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:6",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:15:6",
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nativeSrc": "433:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nativeSrc": "457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nativeSrc": "457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nativeSrc": "535:269:6",
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nativeSrc": "545:22:6",
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nativeSrc": "555:12:6",
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nativeSrc": "576:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nativeSrc": "602:12:6",
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:6",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:6",
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nativeSrc": "667:27:6",
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:6",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nativeSrc": "677:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nativeSrc": "626:26:6",
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nativeSrc": "623:81:6",
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nativeSrc": "756:42:6",
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nativeSrc": "770:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nativeSrc": "770:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:6",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nativeSrc": "740:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nativeSrc": "717:38:6",
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nativeSrc": "714:84:6",
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:6",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:6",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nativeSrc": "864:87:6",
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nativeSrc": "874:11:6",
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:6",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nativeSrc": "895:14:6",
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nativeSrc": "895:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:6",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:6",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nativeSrc": "1001:49:6",
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nativeSrc": "1011:33:6",
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nativeSrc": "1025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nativeSrc": "1021:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:6",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:6",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nativeSrc": "1109:54:6",
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nativeSrc": "1119:37:6",
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:6",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:6",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:6",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nativeSrc": "1245:317:6",
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nativeSrc": "1255:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nativeSrc": "1311:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:6",
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nativeSrc": "1429:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nativeSrc": "1477:30:6",
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nativeSrc": "1486:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nativeSrc": "1516:40:6",
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nativeSrc": "1536:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nativeSrc": "1526:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:6",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:6",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:6",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:6",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nativeSrc": "1613:32:6",
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nativeSrc": "1623:16:6",
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:6",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:6",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nativeSrc": "1683:28:6",
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nativeSrc": "1693:12:6",
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:6",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:6",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:6",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nativeSrc": "1777:82:6",
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nativeSrc": "1787:66:6",
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nativeSrc": "1827:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nativeSrc": "1818:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nativeSrc": "1800:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:6",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:6",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nativeSrc": "1912:28:6",
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nativeSrc": "1922:12:6",
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:6",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:6",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:6",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nativeSrc": "2022:193:6",
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nativeSrc": "2032:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nativeSrc": "2056:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nativeSrc": "2145:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nativeSrc": "2166:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nativeSrc": "2117:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nativeSrc": "2104:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nativeSrc": "2104:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:6",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:6",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:6",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nativeSrc": "2270:24:6",
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nativeSrc": "2280:8:6",
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:6",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:6",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nativeSrc": "2353:136:6",
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nativeSrc": "2363:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nativeSrc": "2377:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nativeSrc": "2418:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nativeSrc": "2418:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:6",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nativeSrc": "2545:136:6",
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:6",
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nativeSrc": "2626:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nativeSrc": "2626:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nativeSrc": "2562:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nativeSrc": "2555:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:6",
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nativeSrc": "2579:22:6",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nativeSrc": "2588:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:6",
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:6",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:6",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nativeSrc": "2766:464:6",
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:6",
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nativeSrc": "2806:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nativeSrc": "2822:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:6",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nativeSrc": "2906:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nativeSrc": "2892:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:6",
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nativeSrc": "3074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nativeSrc": "3071:49:6",
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nativeSrc": "3189:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nativeSrc": "3175:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nativeSrc": "3133:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nativeSrc": "3133:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nativeSrc": "2777:446:6",
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:6",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:6",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:6",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nativeSrc": "3299:54:6",
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nativeSrc": "3309:37:6",
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nativeSrc": "3330:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:6",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:6",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:6",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nativeSrc": "3410:118:6",
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nativeSrc": "3420:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nativeSrc": "3465:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nativeSrc": "3480:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nativeSrc": "3436:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nativeSrc": "3432:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:6",
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nativeSrc": "3507:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:6",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:6",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:6",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nativeSrc": "3614:214:6",
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nativeSrc": "3747:37:6",
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nativeSrc": "3755:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nativeSrc": "3793:29:6",
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nativeSrc": "3810:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nativeSrc": "3801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:6",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:6",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:6",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:6",
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nativeSrc": "3936:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nativeSrc": "3950:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:6",
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nativeSrc": "4074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nativeSrc": "4074:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nativeSrc": "4038:56:6",
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nativeSrc": "4104:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nativeSrc": "4144:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nativeSrc": "4118:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nativeSrc": "4203:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nativeSrc": "4203:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nativeSrc": "4280:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:6",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:6",
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:6",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:6",
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:6",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nativeSrc": "4413:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nativeSrc": "4401:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nativeSrc": "4451:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:6",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:6",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:6",
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nativeSrc": "4608:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nativeSrc": "4602:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nativeSrc": "4587:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nativeSrc": "4587:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nativeSrc": "4646:24:6",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:6",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nativeSrc": "4656:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:6",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:6",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nativeSrc": "4700:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nativeSrc": "4532:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nativeSrc": "4524:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:6",
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:6",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:6",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nativeSrc": "4554:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:6",
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:6",
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nativeSrc": "4809:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nativeSrc": "4803:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:6",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:6",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nativeSrc": "4891:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nativeSrc": "4861:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nativeSrc": "4846:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nativeSrc": "4846:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nativeSrc": "4748:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nativeSrc": "4745:179:6",
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nativeSrc": "4954:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nativeSrc": "4950:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nativeSrc": "4937:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nativeSrc": "4937:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:6",
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:6",
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:6",
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nativeSrc": "5084:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nativeSrc": "5078:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nativeSrc": "5041:77:6",
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nativeSrc": "5144:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nativeSrc": "5131:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nativeSrc": "5131:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:6",
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nativeSrc": "4342:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nativeSrc": "4335:887:6",
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:6",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:6",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											},
											{
												"body": {
													"nativeSrc": "5274:35:6",
													"nodeType": "YulBlock",
													"src": "5274:35:6",
													"statements": [
														{
															"nativeSrc": "5284:19:6",
															"nodeType": "YulAssignment",
															"src": "5284:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5300:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5300:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5294:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:5:6"
																},
																"nativeSrc": "5294:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5294:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5284:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5234:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5267:6:6",
														"nodeType": "YulTypedName",
														"src": "5267:6:6",
														"type": ""
													}
												],
												"src": "5234:75:6"
											},
											{
												"body": {
													"nativeSrc": "5404:28:6",
													"nodeType": "YulBlock",
													"src": "5404:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5421:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5421:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:6"
																},
																"nativeSrc": "5414:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5414:12:6"
															},
															"nativeSrc": "5414:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5414:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5315:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5315:117:6"
											},
											{
												"body": {
													"nativeSrc": "5527:28:6",
													"nodeType": "YulBlock",
													"src": "5527:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5547:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5547:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5537:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:6"
																},
																"nativeSrc": "5537:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5537:12:6"
															},
															"nativeSrc": "5537:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "5537:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5438:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5438:117:6"
											},
											{
												"body": {
													"nativeSrc": "5606:81:6",
													"nodeType": "YulBlock",
													"src": "5606:81:6",
													"statements": [
														{
															"nativeSrc": "5616:65:6",
															"nodeType": "YulAssignment",
															"src": "5616:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5631:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5631:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:42:6",
																		"nodeType": "YulLiteral",
																		"src": "5638:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5627:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:6"
																},
																"nativeSrc": "5627:54:6",
																"nodeType": "YulFunctionCall",
																"src": "5627:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5616:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5616:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5561:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5588:5:6",
														"nodeType": "YulTypedName",
														"src": "5588:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5598:7:6",
														"nodeType": "YulTypedName",
														"src": "5598:7:6",
														"type": ""
													}
												],
												"src": "5561:126:6"
											},
											{
												"body": {
													"nativeSrc": "5738:51:6",
													"nodeType": "YulBlock",
													"src": "5738:51:6",
													"statements": [
														{
															"nativeSrc": "5748:35:6",
															"nodeType": "YulAssignment",
															"src": "5748:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5777:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5777:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5759:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5759:17:6"
																},
																"nativeSrc": "5759:24:6",
																"nodeType": "YulFunctionCall",
																"src": "5759:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5748:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5748:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5693:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5720:5:6",
														"nodeType": "YulTypedName",
														"src": "5720:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5730:7:6",
														"nodeType": "YulTypedName",
														"src": "5730:7:6",
														"type": ""
													}
												],
												"src": "5693:96:6"
											},
											{
												"body": {
													"nativeSrc": "5838:79:6",
													"nodeType": "YulBlock",
													"src": "5838:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5895:16:6",
																"nodeType": "YulBlock",
																"src": "5895:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5904:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5904:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5907:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5907:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5897:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:6"
																			},
																			"nativeSrc": "5897:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5897:12:6"
																		},
																		"nativeSrc": "5897:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5897:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5861:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5861:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5886:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5886:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5868:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5868:17:6"
																				},
																				"nativeSrc": "5868:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5868:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5858:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5858:2:6"
																		},
																		"nativeSrc": "5858:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5858:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:6"
																},
																"nativeSrc": "5851:43:6",
																"nodeType": "YulFunctionCall",
																"src": "5851:43:6"
															},
															"nativeSrc": "5848:63:6",
															"nodeType": "YulIf",
															"src": "5848:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5795:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5831:5:6",
														"nodeType": "YulTypedName",
														"src": "5831:5:6",
														"type": ""
													}
												],
												"src": "5795:122:6"
											},
											{
												"body": {
													"nativeSrc": "5986:80:6",
													"nodeType": "YulBlock",
													"src": "5986:80:6",
													"statements": [
														{
															"nativeSrc": "5996:22:6",
															"nodeType": "YulAssignment",
															"src": "5996:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6011:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6011:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6005:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6005:5:6"
																},
																"nativeSrc": "6005:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6005:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5996:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5996:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6054:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6054:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6027:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "6027:26:6"
																},
																"nativeSrc": "6027:33:6",
																"nodeType": "YulFunctionCall",
																"src": "6027:33:6"
															},
															"nativeSrc": "6027:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "6027:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "5923:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5964:6:6",
														"nodeType": "YulTypedName",
														"src": "5964:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5972:3:6",
														"nodeType": "YulTypedName",
														"src": "5972:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5980:5:6",
														"nodeType": "YulTypedName",
														"src": "5980:5:6",
														"type": ""
													}
												],
												"src": "5923:143:6"
											},
											{
												"body": {
													"nativeSrc": "6149:274:6",
													"nodeType": "YulBlock",
													"src": "6149:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6195:83:6",
																"nodeType": "YulBlock",
																"src": "6195:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6197:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6197:77:6"
																			},
																			"nativeSrc": "6197:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6197:79:6"
																		},
																		"nativeSrc": "6197:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6197:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6170:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6170:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6179:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6179:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:6"
																		},
																		"nativeSrc": "6166:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6166:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6162:3:6"
																},
																"nativeSrc": "6162:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6162:32:6"
															},
															"nativeSrc": "6159:119:6",
															"nodeType": "YulIf",
															"src": "6159:119:6"
														},
														{
															"nativeSrc": "6288:128:6",
															"nodeType": "YulBlock",
															"src": "6288:128:6",
															"statements": [
																{
																	"nativeSrc": "6303:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6303:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6307:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6307:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6332:74:6",
																	"nodeType": "YulAssignment",
																	"src": "6332:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6378:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6378:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6389:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6389:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6374:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6374:3:6"
																				},
																				"nativeSrc": "6374:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6374:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6398:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6398:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "6342:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "6342:31:6"
																		},
																		"nativeSrc": "6342:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6342:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6332:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6332:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "6072:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6119:9:6",
														"nodeType": "YulTypedName",
														"src": "6119:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6130:7:6",
														"nodeType": "YulTypedName",
														"src": "6130:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6142:6:6",
														"nodeType": "YulTypedName",
														"src": "6142:6:6",
														"type": ""
													}
												],
												"src": "6072:351:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600381526020017f312e3000000000000000000000000000000000000000000000000000000000008152506003908161004891906103a8565b50348015610054575f5ffd5b506040516115a03803806115a0833981810160405281019061007691906104d5565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550674563918244f4000060058190555050610500565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806101e657607f821691505b6020821081036101f9576101f86101a2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610220565b6102658683610220565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6102a96102a461029f8461027d565b610286565b61027d565b9050919050565b5f819050919050565b6102c28361028f565b6102d66102ce826102b0565b84845461022c565b825550505050565b5f5f905090565b6102ed6102de565b6102f88184846102b9565b505050565b5b8181101561031b576103105f826102e5565b6001810190506102fe565b5050565b601f82111561036057610331816101ff565b61033a84610211565b81016020851015610349578190505b61035d61035585610211565b8301826102fd565b50505b505050565b5f82821c905092915050565b5f6103805f1984600802610365565b1980831691505092915050565b5f6103988383610371565b9150826002028217905092915050565b6103b18261016b565b67ffffffffffffffff8111156103ca576103c9610175565b5b6103d482546101cf565b6103df82828561031f565b5f60209050601f831160018114610410575f84156103fe578287015190505b610408858261038d565b86555061046f565b601f19841661041e866101ff565b5f5b8281101561044557848901518255600182019150602085019450602081019050610420565b86831015610462578489015161045e601f891682610371565b8355505b6001600288020188555050505b505050505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104a48261047b565b9050919050565b6104b48161049a565b81146104be575f5ffd5b50565b5f815190506104cf816104ab565b92915050565b5f602082840312156104ea576104e9610477565b5b5f6104f7848285016104c1565b91505092915050565b6110938061050d5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063a2f7c8571161008a578063ce606ee011610064578063ce606ee014610235578063dd62ed3e14610253578063ed88c68e14610283578063fc0c546a146102a1576100cd565b8063a2f7c857146101cd578063a9059cbb146101e9578063ad0ef01814610219576100cd565b8063095ea7b3146100d157806323b872dd14610101578063260f5cf11461013157806327e235e31461014f578063677aa7ae1461017f57806370a082311461019d575b5f5ffd5b6100eb60048036038101906100e69190610b67565b6102bf565b6040516100f89190610bbf565b60405180910390f35b61011b60048036038101906101169190610bd8565b6103ac565b6040516101289190610bbf565b60405180910390f35b6101396106bb565b6040516101469190610c98565b60405180910390f35b61016960048036038101906101649190610cb8565b610747565b6040516101769190610cf2565b60405180910390f35b61018761075c565b6040516101949190610cf2565b60405180910390f35b6101b760048036038101906101b29190610cb8565b610762565b6040516101c49190610cf2565b60405180910390f35b6101e760048036038101906101e29190610cb8565b6107a8565b005b61020360048036038101906101fe9190610b67565b6107eb565b6040516102109190610bbf565b60405180910390f35b610233600480360381019061022e9190610d0b565b610a3e565b005b61023d610a48565b60405161024a9190610d45565b60405180910390f35b61026d60048036038101906102689190610d5e565b610a6d565b60405161027a9190610cf2565b60405180910390f35b61028b610a8d565b6040516102989190610d45565b60405180910390f35b6102a9610ab2565b6040516102b69190610df7565b60405180910390f35b5f8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161039a9190610cf2565b60405180910390a36001905092915050565b5f816103b785610762565b10156103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef90610e80565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104aa90610f0e565b60405180910390fd5b81600a6005546104c39190610f59565b10156105a45760055460015f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105389190610f9a565b925050819055506005548261054d9190610fcd565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105989190610f9a565b925050819055506105f8565b8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105f09190610f9a565b925050819055505b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106449190610fcd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a89190610cf2565b60405180910390a3600190509392505050565b600380546106c89061102d565b80601f01602080910402602001604051908101604052809291908181526020018280546106f49061102d565b801561073f5780601f106107165761010080835404028352916020019161073f565b820191905f5260205f20905b81548152906001019060200180831161072257829003601f168201915b505050505081565b6001602052805f5260405f205f915090505481565b60055481565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f816107f633610762565b1015610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90610e80565b60405180910390fd5b81600a6005546108479190610f59565b10156109285760055460015f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108bc9190610f9a565b92505081905550600554826108d19190610fcd565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461091c9190610f9a565b9250508190555061097c565b8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109749190610f9a565b925050819055505b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109c89190610fcd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a2c9190610cf2565b60405180910390a36001905092915050565b8060058190555050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f20602052805f5260405f205f91509150505481565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b0382610ada565b9050919050565b610b1381610af9565b8114610b1d575f5ffd5b50565b5f81359050610b2e81610b0a565b92915050565b5f819050919050565b610b4681610b34565b8114610b50575f5ffd5b50565b5f81359050610b6181610b3d565b92915050565b5f5f60408385031215610b7d57610b7c610ad6565b5b5f610b8a85828601610b20565b9250506020610b9b85828601610b53565b9150509250929050565b5f8115159050919050565b610bb981610ba5565b82525050565b5f602082019050610bd25f830184610bb0565b92915050565b5f5f5f60608486031215610bef57610bee610ad6565b5b5f610bfc86828701610b20565b9350506020610c0d86828701610b20565b9250506040610c1e86828701610b53565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c6a82610c28565b610c748185610c32565b9350610c84818560208601610c42565b610c8d81610c50565b840191505092915050565b5f6020820190508181035f830152610cb08184610c60565b905092915050565b5f60208284031215610ccd57610ccc610ad6565b5b5f610cda84828501610b20565b91505092915050565b610cec81610b34565b82525050565b5f602082019050610d055f830184610ce3565b92915050565b5f60208284031215610d2057610d1f610ad6565b5b5f610d2d84828501610b53565b91505092915050565b610d3f81610af9565b82525050565b5f602082019050610d585f830184610d36565b92915050565b5f5f60408385031215610d7457610d73610ad6565b5b5f610d8185828601610b20565b9250506020610d9285828601610b20565b9150509250929050565b5f819050919050565b5f610dbf610dba610db584610ada565b610d9c565b610ada565b9050919050565b5f610dd082610da5565b9050919050565b5f610de182610dc6565b9050919050565b610df181610dd7565b82525050565b5f602082019050610e0a5f830184610de8565b92915050565b7f53616c646f20696e737566696369656e74652070617261206f7065726163616f5f8201527f2820496e73756666696369656e742066756e6473202900000000000000000000602082015250565b5f610e6a603683610c32565b9150610e7582610e10565b604082019050919050565b5f6020820190508181035f830152610e9781610e5e565b9050919050565b7f53656d207065726d697373616f2070617261207472616e736163616f2028616c5f8201527f6c6f77616e636520746f6f206c6f772900000000000000000000000000000000602082015250565b5f610ef8603083610c32565b9150610f0382610e9e565b604082019050919050565b5f6020820190508181035f830152610f2581610eec565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f6382610b34565b9150610f6e83610b34565b9250828202610f7c81610b34565b91508282048414831517610f9357610f92610f2c565b5b5092915050565b5f610fa482610b34565b9150610faf83610b34565b9250828201905080821115610fc757610fc6610f2c565b5b92915050565b5f610fd782610b34565b9150610fe283610b34565b9250828203905081811115610ffa57610ff9610f2c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061104457607f821691505b60208210810361105757611056611000565b5b5091905056fea2646970667358221220fc53d44a72dd72e8dd2362f1c7e5e070ea293490ae8a8fe8470adc569f15c2de64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x312E300000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH2 0x48 SWAP2 SWAP1 PUSH2 0x3A8 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x54 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15A0 CODESIZE SUB DUP1 PUSH2 0x15A0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x4D5 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0x4563918244F40000 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP PUSH2 0x500 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0x1A2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x25B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x265 DUP7 DUP4 PUSH2 0x220 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A9 PUSH2 0x2A4 PUSH2 0x29F DUP5 PUSH2 0x27D JUMP JUMPDEST PUSH2 0x286 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C2 DUP4 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x2CE DUP3 PUSH2 0x2B0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x22C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x2F8 DUP2 DUP5 DUP5 PUSH2 0x2B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH2 0x310 PUSH0 DUP3 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH2 0x331 DUP2 PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x33A DUP5 PUSH2 0x211 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x349 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x35D PUSH2 0x355 DUP6 PUSH2 0x211 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2FD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x380 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x365 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x398 DUP4 DUP4 PUSH2 0x371 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B1 DUP3 PUSH2 0x16B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0x175 JUMP JUMPDEST JUMPDEST PUSH2 0x3D4 DUP3 SLOAD PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x3DF DUP3 DUP3 DUP6 PUSH2 0x31F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x410 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x408 DUP6 DUP3 PUSH2 0x38D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x41E DUP7 PUSH2 0x1FF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x445 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x420 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x462 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x45E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x371 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 DUP3 PUSH2 0x47B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B4 DUP2 PUSH2 0x49A JUMP JUMPDEST DUP2 EQ PUSH2 0x4BE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4CF DUP2 PUSH2 0x4AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EA JUMPI PUSH2 0x4E9 PUSH2 0x477 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4F7 DUP5 DUP3 DUP6 ADD PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1093 DUP1 PUSH2 0x50D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2F7C857 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCE606EE0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2A1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xA2F7C857 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xAD0EF018 EQ PUSH2 0x219 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x260F5CF1 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x677AA7AE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3B7 DUP6 PUSH2 0x762 JUMP JUMPDEST LT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EF SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x5 SLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5F8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x6C8 SWAP1 PUSH2 0x102D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F4 SWAP1 PUSH2 0x102D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x716 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x722 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x7F6 CALLER PUSH2 0x762 JUMP JUMPDEST LT ISZERO PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x5 SLOAD PUSH2 0x847 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST LT ISZERO PUSH2 0x928 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x97C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB03 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2E DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB46 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xB50 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB61 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7C PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFC DUP7 DUP3 DUP8 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC0D DUP7 DUP3 DUP8 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC1E DUP7 DUP3 DUP8 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6A DUP3 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0xC74 DUP2 DUP6 PUSH2 0xC32 JUMP JUMPDEST SWAP4 POP PUSH2 0xC84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC8D DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB0 DUP2 DUP5 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCDA DUP5 DUP3 DUP6 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEC DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD05 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD81 DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD92 DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDBF PUSH2 0xDBA PUSH2 0xDB5 DUP5 PUSH2 0xADA JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD0 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE1 DUP3 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616C646F20696E737566696369656E74652070617261206F7065726163616F PUSH0 DUP3 ADD MSTORE PUSH32 0x2820496E73756666696369656E742066756E6473202900000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE6A PUSH1 0x36 DUP4 PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP PUSH2 0xE75 DUP3 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE97 DUP2 PUSH2 0xE5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656D207065726D697373616F2070617261207472616E736163616F2028616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636520746F6F206C6F772900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF8 PUSH1 0x30 DUP4 PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP PUSH2 0xF03 DUP3 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF25 DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF63 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6E DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF7C DUP2 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA4 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAF DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1044 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1057 JUMPI PUSH2 0x1056 PUSH2 0x1000 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC MSTORE8 0xD4 BLOBBASEFEE PUSH19 0xDD72E8DD2362F1C7E5E070EA293490AE8A8FE8 SELFBALANCE EXP 0xDC JUMP SWAP16 ISZERO 0xC2 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "395:2529:5:-:0;;;597:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;902:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;956:6;941:5;;:22;;;;;;;;;;;;;;;;;;990:10;974:13;;:26;;;;;;;;;;;;;;;;;;1027:13;;;;;;;;;;;1018:6;;:22;;;;;;;;;;;;;;;;;;1065:12;1051:11;:26;;;;902:223;395:2529;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5315:117::-;5424:1;5421;5414:12;5561:126;5598:7;5638:42;5631:5;5627:54;5616:65;;5561:126;;;:::o;5693:96::-;5730:7;5759:24;5777:5;5759:24;:::i;:::-;5748:35;;5693:96;;;:::o;5795:122::-;5868:24;5886:5;5868:24;:::i;:::-;5861:5;5858:35;5848:63;;5907:1;5904;5897:12;5848:63;5795:122;:::o;5923:143::-;5980:5;6011:6;6005:13;5996:22;;6027:33;6054:5;6027:33;:::i;:::-;5923:143;;;;:::o;6072:351::-;6142:6;6191:2;6179:9;6170:7;6166:23;6162:32;6159:119;;;6197:79;;:::i;:::-;6159:119;6317:1;6342:64;6398:7;6389:6;6378:9;6374:22;6342:64;:::i;:::-;6332:74;;6288:128;6072:351;;;;:::o;395:2529:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_802": {
									"entryPoint": 2669,
									"id": 802,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1039": {
									"entryPoint": 703,
									"id": 1039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_868": {
									"entryPoint": 1890,
									"id": 868,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_796": {
									"entryPoint": 1863,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeAddressDonate_1049": {
									"entryPoint": 1960,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeValueDonate_1059": {
									"entryPoint": 2622,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@contractOwner_811": {
									"entryPoint": 2632,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donateValue_809": {
									"entryPoint": 1884,
									"id": 809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@donate_807": {
									"entryPoint": 2701,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_792": {
									"entryPoint": 2738,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1011": {
									"entryPoint": 940,
									"id": 1011,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_934": {
									"entryPoint": 2027,
									"id": 934,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@versao_805": {
									"entryPoint": 1723,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10321:6",
										"nodeType": "YulBlock",
										"src": "0:10321:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1719:48:6",
													"nodeType": "YulBlock",
													"src": "1719:48:6",
													"statements": [
														{
															"nativeSrc": "1729:32:6",
															"nodeType": "YulAssignment",
															"src": "1729:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:6"
																		},
																		"nativeSrc": "1747:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:6"
																},
																"nativeSrc": "1740:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:6",
														"nodeType": "YulTypedName",
														"src": "1701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:6",
														"nodeType": "YulTypedName",
														"src": "1711:7:6",
														"type": ""
													}
												],
												"src": "1677:90:6"
											},
											{
												"body": {
													"nativeSrc": "1832:50:6",
													"nodeType": "YulBlock",
													"src": "1832:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:6"
																		},
																		"nativeSrc": "1854:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:6"
																},
																"nativeSrc": "1842:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:6"
															},
															"nativeSrc": "1842:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:6",
														"nodeType": "YulTypedName",
														"src": "1820:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:6",
														"nodeType": "YulTypedName",
														"src": "1827:3:6",
														"type": ""
													}
												],
												"src": "1773:109:6"
											},
											{
												"body": {
													"nativeSrc": "1980:118:6",
													"nodeType": "YulBlock",
													"src": "1980:118:6",
													"statements": [
														{
															"nativeSrc": "1990:26:6",
															"nodeType": "YulAssignment",
															"src": "1990:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:6"
																},
																"nativeSrc": "1998:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:6"
																},
																"nativeSrc": "2026:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:6"
															},
															"nativeSrc": "2026:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:6",
														"nodeType": "YulTypedName",
														"src": "1952:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:6",
														"nodeType": "YulTypedName",
														"src": "1964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:6",
														"nodeType": "YulTypedName",
														"src": "1975:4:6",
														"type": ""
													}
												],
												"src": "1888:210:6"
											},
											{
												"body": {
													"nativeSrc": "2204:519:6",
													"nodeType": "YulBlock",
													"src": "2204:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2250:83:6",
																"nodeType": "YulBlock",
																"src": "2250:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2252:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2252:77:6"
																			},
																			"nativeSrc": "2252:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2252:79:6"
																		},
																		"nativeSrc": "2252:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2225:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2234:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:6"
																		},
																		"nativeSrc": "2221:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2217:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:6"
																},
																"nativeSrc": "2217:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2217:32:6"
															},
															"nativeSrc": "2214:119:6",
															"nodeType": "YulIf",
															"src": "2214:119:6"
														},
														{
															"nativeSrc": "2343:117:6",
															"nodeType": "YulBlock",
															"src": "2343:117:6",
															"statements": [
																{
																	"nativeSrc": "2358:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2358:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2372:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2372:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2362:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2362:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2387:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2387:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2422:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2422:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2433:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2433:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2418:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:6"
																				},
																				"nativeSrc": "2418:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2442:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2442:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2397:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2397:20:6"
																		},
																		"nativeSrc": "2397:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2387:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2387:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2470:118:6",
															"nodeType": "YulBlock",
															"src": "2470:118:6",
															"statements": [
																{
																	"nativeSrc": "2485:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2499:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2489:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2515:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2515:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2550:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2550:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2561:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2561:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2546:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2546:3:6"
																				},
																				"nativeSrc": "2546:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2546:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2570:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2570:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2525:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2525:20:6"
																		},
																		"nativeSrc": "2525:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2515:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2515:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2598:118:6",
															"nodeType": "YulBlock",
															"src": "2598:118:6",
															"statements": [
																{
																	"nativeSrc": "2613:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2613:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2617:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2617:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2643:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2643:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2678:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2678:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2689:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2689:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2674:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:6"
																				},
																				"nativeSrc": "2674:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2674:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2698:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2698:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2653:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2653:20:6"
																		},
																		"nativeSrc": "2653:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2643:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2643:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2104:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2158:9:6",
														"nodeType": "YulTypedName",
														"src": "2158:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2169:7:6",
														"nodeType": "YulTypedName",
														"src": "2169:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2181:6:6",
														"nodeType": "YulTypedName",
														"src": "2181:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2189:6:6",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2197:6:6",
														"nodeType": "YulTypedName",
														"src": "2197:6:6",
														"type": ""
													}
												],
												"src": "2104:619:6"
											},
											{
												"body": {
													"nativeSrc": "2788:40:6",
													"nodeType": "YulBlock",
													"src": "2788:40:6",
													"statements": [
														{
															"nativeSrc": "2799:22:6",
															"nodeType": "YulAssignment",
															"src": "2799:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2815:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2815:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2809:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2809:5:6"
																},
																"nativeSrc": "2809:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2809:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2799:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2729:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2771:5:6",
														"nodeType": "YulTypedName",
														"src": "2771:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2781:6:6",
														"nodeType": "YulTypedName",
														"src": "2781:6:6",
														"type": ""
													}
												],
												"src": "2729:99:6"
											},
											{
												"body": {
													"nativeSrc": "2930:73:6",
													"nodeType": "YulBlock",
													"src": "2930:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2947:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2947:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2952:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2952:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2940:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2940:6:6"
																},
																"nativeSrc": "2940:19:6",
																"nodeType": "YulFunctionCall",
																"src": "2940:19:6"
															},
															"nativeSrc": "2940:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "2940:19:6"
														},
														{
															"nativeSrc": "2968:29:6",
															"nodeType": "YulAssignment",
															"src": "2968:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2987:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2987:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2992:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2992:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:6"
																},
																"nativeSrc": "2983:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2983:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2968:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2834:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2902:3:6",
														"nodeType": "YulTypedName",
														"src": "2902:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2907:6:6",
														"nodeType": "YulTypedName",
														"src": "2907:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2918:11:6",
														"nodeType": "YulTypedName",
														"src": "2918:11:6",
														"type": ""
													}
												],
												"src": "2834:169:6"
											},
											{
												"body": {
													"nativeSrc": "3071:77:6",
													"nodeType": "YulBlock",
													"src": "3071:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3088:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3088:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3093:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3093:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3098:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3082:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:5:6"
																},
																"nativeSrc": "3082:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3082:23:6"
															},
															"nativeSrc": "3082:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "3082:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3125:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3125:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3130:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3130:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3121:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:6"
																		},
																		"nativeSrc": "3121:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3139:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3139:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:6"
																},
																"nativeSrc": "3114:27:6",
																"nodeType": "YulFunctionCall",
																"src": "3114:27:6"
															},
															"nativeSrc": "3114:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "3114:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3009:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3053:3:6",
														"nodeType": "YulTypedName",
														"src": "3053:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3058:3:6",
														"nodeType": "YulTypedName",
														"src": "3058:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3063:6:6",
														"nodeType": "YulTypedName",
														"src": "3063:6:6",
														"type": ""
													}
												],
												"src": "3009:139:6"
											},
											{
												"body": {
													"nativeSrc": "3202:54:6",
													"nodeType": "YulBlock",
													"src": "3202:54:6",
													"statements": [
														{
															"nativeSrc": "3212:38:6",
															"nodeType": "YulAssignment",
															"src": "3212:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3237:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3237:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3226:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:6"
																		},
																		"nativeSrc": "3226:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3226:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3246:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3242:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:6"
																		},
																		"nativeSrc": "3242:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3222:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:6"
																},
																"nativeSrc": "3222:28:6",
																"nodeType": "YulFunctionCall",
																"src": "3222:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3212:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3154:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:6",
														"nodeType": "YulTypedName",
														"src": "3185:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3195:6:6",
														"nodeType": "YulTypedName",
														"src": "3195:6:6",
														"type": ""
													}
												],
												"src": "3154:102:6"
											},
											{
												"body": {
													"nativeSrc": "3354:285:6",
													"nodeType": "YulBlock",
													"src": "3354:285:6",
													"statements": [
														{
															"nativeSrc": "3364:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3364:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3411:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3411:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3378:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3378:32:6"
																},
																"nativeSrc": "3378:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3378:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3368:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3368:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3426:78:6",
															"nodeType": "YulAssignment",
															"src": "3426:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3492:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3497:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3497:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3433:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "3433:58:6"
																},
																"nativeSrc": "3433:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3433:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3426:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3552:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3559:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3559:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3548:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3548:3:6"
																		},
																		"nativeSrc": "3548:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3566:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3566:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3571:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3571:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3513:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "3513:34:6"
																},
																"nativeSrc": "3513:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3513:65:6"
															},
															"nativeSrc": "3513:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3513:65:6"
														},
														{
															"nativeSrc": "3587:46:6",
															"nodeType": "YulAssignment",
															"src": "3587:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3598:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3598:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3625:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3625:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3603:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "3603:21:6"
																		},
																		"nativeSrc": "3603:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3594:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:6"
																},
																"nativeSrc": "3594:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3594:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3262:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3335:5:6",
														"nodeType": "YulTypedName",
														"src": "3335:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3342:3:6",
														"nodeType": "YulTypedName",
														"src": "3342:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3350:3:6",
														"nodeType": "YulTypedName",
														"src": "3350:3:6",
														"type": ""
													}
												],
												"src": "3262:377:6"
											},
											{
												"body": {
													"nativeSrc": "3763:195:6",
													"nodeType": "YulBlock",
													"src": "3763:195:6",
													"statements": [
														{
															"nativeSrc": "3773:26:6",
															"nodeType": "YulAssignment",
															"src": "3773:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3785:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3785:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3796:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3796:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3781:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3781:3:6"
																},
																"nativeSrc": "3781:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3781:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3773:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3773:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3820:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3831:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3831:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3816:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:6"
																		},
																		"nativeSrc": "3816:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3839:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3845:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3835:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:6"
																		},
																		"nativeSrc": "3835:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3809:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:6"
																},
																"nativeSrc": "3809:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3809:47:6"
															},
															"nativeSrc": "3809:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "3809:47:6"
														},
														{
															"nativeSrc": "3865:86:6",
															"nodeType": "YulAssignment",
															"src": "3865:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3937:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3937:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3946:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3946:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3873:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "3873:63:6"
																},
																"nativeSrc": "3873:78:6",
																"nodeType": "YulFunctionCall",
																"src": "3873:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3865:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3865:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3645:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3735:9:6",
														"nodeType": "YulTypedName",
														"src": "3735:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3747:6:6",
														"nodeType": "YulTypedName",
														"src": "3747:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3758:4:6",
														"nodeType": "YulTypedName",
														"src": "3758:4:6",
														"type": ""
													}
												],
												"src": "3645:313:6"
											},
											{
												"body": {
													"nativeSrc": "4030:263:6",
													"nodeType": "YulBlock",
													"src": "4030:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4076:83:6",
																"nodeType": "YulBlock",
																"src": "4076:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4078:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4078:77:6"
																			},
																			"nativeSrc": "4078:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4078:79:6"
																		},
																		"nativeSrc": "4078:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4078:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4051:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4051:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4060:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4047:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:6"
																		},
																		"nativeSrc": "4047:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4072:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4043:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:6"
																},
																"nativeSrc": "4043:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4043:32:6"
															},
															"nativeSrc": "4040:119:6",
															"nodeType": "YulIf",
															"src": "4040:119:6"
														},
														{
															"nativeSrc": "4169:117:6",
															"nodeType": "YulBlock",
															"src": "4169:117:6",
															"statements": [
																{
																	"nativeSrc": "4184:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4184:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4198:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4198:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4188:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4188:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4213:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4213:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4248:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4248:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4259:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4259:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4244:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4244:3:6"
																				},
																				"nativeSrc": "4244:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4244:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4268:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4268:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4223:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4223:20:6"
																		},
																		"nativeSrc": "4223:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4223:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4213:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4213:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3964:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4000:9:6",
														"nodeType": "YulTypedName",
														"src": "4000:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4011:7:6",
														"nodeType": "YulTypedName",
														"src": "4011:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4023:6:6",
														"nodeType": "YulTypedName",
														"src": "4023:6:6",
														"type": ""
													}
												],
												"src": "3964:329:6"
											},
											{
												"body": {
													"nativeSrc": "4364:53:6",
													"nodeType": "YulBlock",
													"src": "4364:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4381:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4404:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4404:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4386:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4386:17:6"
																		},
																		"nativeSrc": "4386:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4386:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:6"
																},
																"nativeSrc": "4374:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4374:37:6"
															},
															"nativeSrc": "4374:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4374:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4299:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4352:5:6",
														"nodeType": "YulTypedName",
														"src": "4352:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4359:3:6",
														"nodeType": "YulTypedName",
														"src": "4359:3:6",
														"type": ""
													}
												],
												"src": "4299:118:6"
											},
											{
												"body": {
													"nativeSrc": "4521:124:6",
													"nodeType": "YulBlock",
													"src": "4521:124:6",
													"statements": [
														{
															"nativeSrc": "4531:26:6",
															"nodeType": "YulAssignment",
															"src": "4531:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4543:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4543:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4554:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4554:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4539:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:6"
																},
																"nativeSrc": "4539:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4539:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4531:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4531:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4611:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4611:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4624:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4635:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4635:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4620:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:6"
																		},
																		"nativeSrc": "4620:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4620:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4567:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4567:43:6"
																},
																"nativeSrc": "4567:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4567:71:6"
															},
															"nativeSrc": "4567:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4567:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4423:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4493:9:6",
														"nodeType": "YulTypedName",
														"src": "4493:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4505:6:6",
														"nodeType": "YulTypedName",
														"src": "4505:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4516:4:6",
														"nodeType": "YulTypedName",
														"src": "4516:4:6",
														"type": ""
													}
												],
												"src": "4423:222:6"
											},
											{
												"body": {
													"nativeSrc": "4717:263:6",
													"nodeType": "YulBlock",
													"src": "4717:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4763:83:6",
																"nodeType": "YulBlock",
																"src": "4763:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4765:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4765:77:6"
																			},
																			"nativeSrc": "4765:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4765:79:6"
																		},
																		"nativeSrc": "4765:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4738:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4738:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4747:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4734:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:6"
																		},
																		"nativeSrc": "4734:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4734:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4759:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4730:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:6"
																},
																"nativeSrc": "4730:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4730:32:6"
															},
															"nativeSrc": "4727:119:6",
															"nodeType": "YulIf",
															"src": "4727:119:6"
														},
														{
															"nativeSrc": "4856:117:6",
															"nodeType": "YulBlock",
															"src": "4856:117:6",
															"statements": [
																{
																	"nativeSrc": "4871:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4871:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4885:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4885:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4875:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4875:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4900:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4900:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4935:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4935:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4946:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4946:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4931:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:6"
																				},
																				"nativeSrc": "4931:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4955:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4955:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4910:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4910:20:6"
																		},
																		"nativeSrc": "4910:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4900:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4900:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4651:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:6",
														"nodeType": "YulTypedName",
														"src": "4687:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4698:7:6",
														"nodeType": "YulTypedName",
														"src": "4698:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4710:6:6",
														"nodeType": "YulTypedName",
														"src": "4710:6:6",
														"type": ""
													}
												],
												"src": "4651:329:6"
											},
											{
												"body": {
													"nativeSrc": "5051:53:6",
													"nodeType": "YulBlock",
													"src": "5051:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5068:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5068:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5091:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5091:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5073:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5073:17:6"
																		},
																		"nativeSrc": "5073:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5061:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5061:6:6"
																},
																"nativeSrc": "5061:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5061:37:6"
															},
															"nativeSrc": "5061:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5061:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4986:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5039:5:6",
														"nodeType": "YulTypedName",
														"src": "5039:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5046:3:6",
														"nodeType": "YulTypedName",
														"src": "5046:3:6",
														"type": ""
													}
												],
												"src": "4986:118:6"
											},
											{
												"body": {
													"nativeSrc": "5208:124:6",
													"nodeType": "YulBlock",
													"src": "5208:124:6",
													"statements": [
														{
															"nativeSrc": "5218:26:6",
															"nodeType": "YulAssignment",
															"src": "5218:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5230:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5226:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5226:3:6"
																},
																"nativeSrc": "5226:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5226:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5218:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5298:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5298:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5311:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5311:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5322:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5322:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5307:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:6"
																		},
																		"nativeSrc": "5307:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5254:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5254:43:6"
																},
																"nativeSrc": "5254:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5254:71:6"
															},
															"nativeSrc": "5254:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5254:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5110:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5180:9:6",
														"nodeType": "YulTypedName",
														"src": "5180:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5192:6:6",
														"nodeType": "YulTypedName",
														"src": "5192:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5203:4:6",
														"nodeType": "YulTypedName",
														"src": "5203:4:6",
														"type": ""
													}
												],
												"src": "5110:222:6"
											},
											{
												"body": {
													"nativeSrc": "5421:391:6",
													"nodeType": "YulBlock",
													"src": "5421:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5467:83:6",
																"nodeType": "YulBlock",
																"src": "5467:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5469:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5469:77:6"
																			},
																			"nativeSrc": "5469:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5469:79:6"
																		},
																		"nativeSrc": "5469:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5469:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5442:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5442:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5451:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5451:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5438:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:6"
																		},
																		"nativeSrc": "5438:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5463:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5434:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:6"
																},
																"nativeSrc": "5434:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5434:32:6"
															},
															"nativeSrc": "5431:119:6",
															"nodeType": "YulIf",
															"src": "5431:119:6"
														},
														{
															"nativeSrc": "5560:117:6",
															"nodeType": "YulBlock",
															"src": "5560:117:6",
															"statements": [
																{
																	"nativeSrc": "5575:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5575:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5589:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5589:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5579:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5579:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5604:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5604:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5639:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5639:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5650:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5650:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5635:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5635:3:6"
																				},
																				"nativeSrc": "5635:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5635:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5659:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5659:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5614:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5614:20:6"
																		},
																		"nativeSrc": "5614:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5614:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5604:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5604:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5687:118:6",
															"nodeType": "YulBlock",
															"src": "5687:118:6",
															"statements": [
																{
																	"nativeSrc": "5702:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5702:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5716:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5716:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5706:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5706:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5732:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5732:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5767:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5767:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5778:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5778:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5763:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5763:3:6"
																				},
																				"nativeSrc": "5763:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5763:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5787:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5787:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5742:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5742:20:6"
																		},
																		"nativeSrc": "5742:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5732:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5732:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5338:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5383:9:6",
														"nodeType": "YulTypedName",
														"src": "5383:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5394:7:6",
														"nodeType": "YulTypedName",
														"src": "5394:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5406:6:6",
														"nodeType": "YulTypedName",
														"src": "5406:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5414:6:6",
														"nodeType": "YulTypedName",
														"src": "5414:6:6",
														"type": ""
													}
												],
												"src": "5338:474:6"
											},
											{
												"body": {
													"nativeSrc": "5850:28:6",
													"nodeType": "YulBlock",
													"src": "5850:28:6",
													"statements": [
														{
															"nativeSrc": "5860:12:6",
															"nodeType": "YulAssignment",
															"src": "5860:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5867:5:6",
																"nodeType": "YulIdentifier",
																"src": "5867:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5860:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5818:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5836:5:6",
														"nodeType": "YulTypedName",
														"src": "5836:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5846:3:6",
														"nodeType": "YulTypedName",
														"src": "5846:3:6",
														"type": ""
													}
												],
												"src": "5818:60:6"
											},
											{
												"body": {
													"nativeSrc": "5944:82:6",
													"nodeType": "YulBlock",
													"src": "5944:82:6",
													"statements": [
														{
															"nativeSrc": "5954:66:6",
															"nodeType": "YulAssignment",
															"src": "5954:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6012:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6012:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5994:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5994:17:6"
																				},
																				"nativeSrc": "5994:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5994:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5985:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5985:8:6"
																		},
																		"nativeSrc": "5985:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5985:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5967:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5967:17:6"
																},
																"nativeSrc": "5967:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5967:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5954:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5954:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5884:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:6",
														"nodeType": "YulTypedName",
														"src": "5924:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5934:9:6",
														"nodeType": "YulTypedName",
														"src": "5934:9:6",
														"type": ""
													}
												],
												"src": "5884:142:6"
											},
											{
												"body": {
													"nativeSrc": "6092:66:6",
													"nodeType": "YulBlock",
													"src": "6092:66:6",
													"statements": [
														{
															"nativeSrc": "6102:50:6",
															"nodeType": "YulAssignment",
															"src": "6102:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6146:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6146:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6115:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6115:30:6"
																},
																"nativeSrc": "6115:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6115:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6102:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6102:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6032:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6072:5:6",
														"nodeType": "YulTypedName",
														"src": "6072:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6082:9:6",
														"nodeType": "YulTypedName",
														"src": "6082:9:6",
														"type": ""
													}
												],
												"src": "6032:126:6"
											},
											{
												"body": {
													"nativeSrc": "6238:66:6",
													"nodeType": "YulBlock",
													"src": "6238:66:6",
													"statements": [
														{
															"nativeSrc": "6248:50:6",
															"nodeType": "YulAssignment",
															"src": "6248:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6292:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6292:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6261:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6261:30:6"
																},
																"nativeSrc": "6261:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6261:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6248:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6248:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "6164:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6218:5:6",
														"nodeType": "YulTypedName",
														"src": "6218:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6228:9:6",
														"nodeType": "YulTypedName",
														"src": "6228:9:6",
														"type": ""
													}
												],
												"src": "6164:140:6"
											},
											{
												"body": {
													"nativeSrc": "6389:80:6",
													"nodeType": "YulBlock",
													"src": "6389:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6406:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6406:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6456:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6456:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "6411:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "6411:44:6"
																		},
																		"nativeSrc": "6411:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6411:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:6"
																},
																"nativeSrc": "6399:64:6",
																"nodeType": "YulFunctionCall",
																"src": "6399:64:6"
															},
															"nativeSrc": "6399:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "6399:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "6310:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6377:5:6",
														"nodeType": "YulTypedName",
														"src": "6377:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6384:3:6",
														"nodeType": "YulTypedName",
														"src": "6384:3:6",
														"type": ""
													}
												],
												"src": "6310:159:6"
											},
											{
												"body": {
													"nativeSrc": "6587:138:6",
													"nodeType": "YulBlock",
													"src": "6587:138:6",
													"statements": [
														{
															"nativeSrc": "6597:26:6",
															"nodeType": "YulAssignment",
															"src": "6597:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6609:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6609:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6605:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6605:3:6"
																},
																"nativeSrc": "6605:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6605:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6597:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6597:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6691:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6691:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6704:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6704:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6715:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6715:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6700:3:6"
																		},
																		"nativeSrc": "6700:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6700:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "6633:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6633:57:6"
																},
																"nativeSrc": "6633:85:6",
																"nodeType": "YulFunctionCall",
																"src": "6633:85:6"
															},
															"nativeSrc": "6633:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "6633:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "6475:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6559:9:6",
														"nodeType": "YulTypedName",
														"src": "6559:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6571:6:6",
														"nodeType": "YulTypedName",
														"src": "6571:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6582:4:6",
														"nodeType": "YulTypedName",
														"src": "6582:4:6",
														"type": ""
													}
												],
												"src": "6475:250:6"
											},
											{
												"body": {
													"nativeSrc": "6837:135:6",
													"nodeType": "YulBlock",
													"src": "6837:135:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6859:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6859:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6867:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6867:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6855:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6855:3:6"
																		},
																		"nativeSrc": "6855:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:14:6"
																	},
																	{
																		"hexValue": "53616c646f20696e737566696369656e74652070617261206f7065726163616f",
																		"kind": "string",
																		"nativeSrc": "6871:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6871:34:6",
																		"type": "",
																		"value": "Saldo insuficiente para operacao"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6848:6:6"
																},
																"nativeSrc": "6848:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6848:58:6"
															},
															"nativeSrc": "6848:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6848:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6927:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6935:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6935:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6923:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:6"
																		},
																		"nativeSrc": "6923:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6923:15:6"
																	},
																	{
																		"hexValue": "2820496e73756666696369656e742066756e64732029",
																		"kind": "string",
																		"nativeSrc": "6940:24:6",
																		"nodeType": "YulLiteral",
																		"src": "6940:24:6",
																		"type": "",
																		"value": "( Insufficient funds )"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:6"
																},
																"nativeSrc": "6916:49:6",
																"nodeType": "YulFunctionCall",
																"src": "6916:49:6"
															},
															"nativeSrc": "6916:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "6916:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
												"nativeSrc": "6731:241:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6829:6:6",
														"nodeType": "YulTypedName",
														"src": "6829:6:6",
														"type": ""
													}
												],
												"src": "6731:241:6"
											},
											{
												"body": {
													"nativeSrc": "7124:220:6",
													"nodeType": "YulBlock",
													"src": "7124:220:6",
													"statements": [
														{
															"nativeSrc": "7134:74:6",
															"nodeType": "YulAssignment",
															"src": "7134:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7200:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7200:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7205:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7205:2:6",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7141:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7141:58:6"
																},
																"nativeSrc": "7141:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7141:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7134:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7306:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7306:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
																	"nativeSrc": "7217:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7217:88:6"
																},
																"nativeSrc": "7217:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7217:93:6"
															},
															"nativeSrc": "7217:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7217:93:6"
														},
														{
															"nativeSrc": "7319:19:6",
															"nodeType": "YulAssignment",
															"src": "7319:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7330:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7330:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7335:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7335:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7326:3:6"
																},
																"nativeSrc": "7326:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7326:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7319:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7319:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6978:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7112:3:6",
														"nodeType": "YulTypedName",
														"src": "7112:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7120:3:6",
														"nodeType": "YulTypedName",
														"src": "7120:3:6",
														"type": ""
													}
												],
												"src": "6978:366:6"
											},
											{
												"body": {
													"nativeSrc": "7521:248:6",
													"nodeType": "YulBlock",
													"src": "7521:248:6",
													"statements": [
														{
															"nativeSrc": "7531:26:6",
															"nodeType": "YulAssignment",
															"src": "7531:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7543:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7543:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7554:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7539:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7539:3:6"
																},
																"nativeSrc": "7539:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7539:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7531:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7531:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7578:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7578:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7589:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7589:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7574:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7574:3:6"
																		},
																		"nativeSrc": "7574:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7574:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7597:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7597:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7603:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7603:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:6"
																		},
																		"nativeSrc": "7593:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7593:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7567:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7567:6:6"
																},
																"nativeSrc": "7567:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7567:47:6"
															},
															"nativeSrc": "7567:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7567:47:6"
														},
														{
															"nativeSrc": "7623:139:6",
															"nodeType": "YulAssignment",
															"src": "7623:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7757:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7757:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7631:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7631:124:6"
																},
																"nativeSrc": "7631:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7631:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7623:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7623:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7350:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7501:9:6",
														"nodeType": "YulTypedName",
														"src": "7501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7516:4:6",
														"nodeType": "YulTypedName",
														"src": "7516:4:6",
														"type": ""
													}
												],
												"src": "7350:419:6"
											},
											{
												"body": {
													"nativeSrc": "7881:129:6",
													"nodeType": "YulBlock",
													"src": "7881:129:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7911:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7911:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:14:6"
																	},
																	{
																		"hexValue": "53656d207065726d697373616f2070617261207472616e736163616f2028616c",
																		"kind": "string",
																		"nativeSrc": "7915:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7915:34:6",
																		"type": "",
																		"value": "Sem permissao para transacao (al"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:6"
																},
																"nativeSrc": "7892:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7892:58:6"
															},
															"nativeSrc": "7892:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7892:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7971:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7971:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7979:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7979:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7967:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7967:3:6"
																		},
																		"nativeSrc": "7967:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7967:15:6"
																	},
																	{
																		"hexValue": "6c6f77616e636520746f6f206c6f7729",
																		"kind": "string",
																		"nativeSrc": "7984:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7984:18:6",
																		"type": "",
																		"value": "lowance too low)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7960:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7960:6:6"
																},
																"nativeSrc": "7960:43:6",
																"nodeType": "YulFunctionCall",
																"src": "7960:43:6"
															},
															"nativeSrc": "7960:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "7960:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f",
												"nativeSrc": "7775:235:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7873:6:6",
														"nodeType": "YulTypedName",
														"src": "7873:6:6",
														"type": ""
													}
												],
												"src": "7775:235:6"
											},
											{
												"body": {
													"nativeSrc": "8162:220:6",
													"nodeType": "YulBlock",
													"src": "8162:220:6",
													"statements": [
														{
															"nativeSrc": "8172:74:6",
															"nodeType": "YulAssignment",
															"src": "8172:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8238:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8238:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8243:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8243:2:6",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8179:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8179:58:6"
																},
																"nativeSrc": "8179:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8179:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8172:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8172:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8344:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8344:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f",
																	"nativeSrc": "8255:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8255:88:6"
																},
																"nativeSrc": "8255:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8255:93:6"
															},
															"nativeSrc": "8255:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8255:93:6"
														},
														{
															"nativeSrc": "8357:19:6",
															"nodeType": "YulAssignment",
															"src": "8357:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8368:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8368:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8373:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8373:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8364:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8364:3:6"
																},
																"nativeSrc": "8364:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8364:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8357:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8357:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8016:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8150:3:6",
														"nodeType": "YulTypedName",
														"src": "8150:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8158:3:6",
														"nodeType": "YulTypedName",
														"src": "8158:3:6",
														"type": ""
													}
												],
												"src": "8016:366:6"
											},
											{
												"body": {
													"nativeSrc": "8559:248:6",
													"nodeType": "YulBlock",
													"src": "8559:248:6",
													"statements": [
														{
															"nativeSrc": "8569:26:6",
															"nodeType": "YulAssignment",
															"src": "8569:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8581:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8581:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8592:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8592:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8577:3:6"
																},
																"nativeSrc": "8577:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8577:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8569:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8569:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8616:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8616:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8627:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8627:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8612:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:6"
																		},
																		"nativeSrc": "8612:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8635:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8635:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8641:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8641:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8631:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8631:3:6"
																		},
																		"nativeSrc": "8631:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8631:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8605:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8605:6:6"
																},
																"nativeSrc": "8605:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8605:47:6"
															},
															"nativeSrc": "8605:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8605:47:6"
														},
														{
															"nativeSrc": "8661:139:6",
															"nodeType": "YulAssignment",
															"src": "8661:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8795:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8795:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8669:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8669:124:6"
																},
																"nativeSrc": "8669:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8669:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8661:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8661:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8388:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8539:9:6",
														"nodeType": "YulTypedName",
														"src": "8539:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8554:4:6",
														"nodeType": "YulTypedName",
														"src": "8554:4:6",
														"type": ""
													}
												],
												"src": "8388:419:6"
											},
											{
												"body": {
													"nativeSrc": "8841:152:6",
													"nodeType": "YulBlock",
													"src": "8841:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8858:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8858:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8861:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8861:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8851:6:6"
																},
																"nativeSrc": "8851:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8851:88:6"
															},
															"nativeSrc": "8851:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8851:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8955:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8955:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8958:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8958:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8948:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:6"
																},
																"nativeSrc": "8948:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8948:15:6"
															},
															"nativeSrc": "8948:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8948:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8979:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8979:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8982:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8982:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8972:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8972:6:6"
																},
																"nativeSrc": "8972:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8972:15:6"
															},
															"nativeSrc": "8972:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8972:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8813:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8813:180:6"
											},
											{
												"body": {
													"nativeSrc": "9047:362:6",
													"nodeType": "YulBlock",
													"src": "9047:362:6",
													"statements": [
														{
															"nativeSrc": "9057:25:6",
															"nodeType": "YulAssignment",
															"src": "9057:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9080:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9080:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9062:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9062:17:6"
																},
																"nativeSrc": "9062:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9062:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9057:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9057:1:6"
																}
															]
														},
														{
															"nativeSrc": "9091:25:6",
															"nodeType": "YulAssignment",
															"src": "9091:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9114:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9114:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9096:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9096:17:6"
																},
																"nativeSrc": "9096:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9096:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9091:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9091:1:6"
																}
															]
														},
														{
															"nativeSrc": "9125:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9125:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9148:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9151:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9151:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9144:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9144:3:6"
																},
																"nativeSrc": "9144:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9144:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9129:11:6",
																	"nodeType": "YulTypedName",
																	"src": "9129:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9162:41:6",
															"nodeType": "YulAssignment",
															"src": "9162:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9191:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "9191:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9173:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9173:17:6"
																},
																"nativeSrc": "9173:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9173:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9162:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9162:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9380:22:6",
																"nodeType": "YulBlock",
																"src": "9380:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9382:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9382:16:6"
																			},
																			"nativeSrc": "9382:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9382:18:6"
																		},
																		"nativeSrc": "9382:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9382:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9313:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9313:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9306:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9306:6:6"
																				},
																				"nativeSrc": "9306:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9306:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9336:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "9336:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9343:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "9343:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9352:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "9352:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9339:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9339:3:6"
																						},
																						"nativeSrc": "9339:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9339:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9333:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "9333:2:6"
																				},
																				"nativeSrc": "9333:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9333:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9286:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9286:2:6"
																		},
																		"nativeSrc": "9286:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9286:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9266:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:6"
																},
																"nativeSrc": "9266:113:6",
																"nodeType": "YulFunctionCall",
																"src": "9266:113:6"
															},
															"nativeSrc": "9263:139:6",
															"nodeType": "YulIf",
															"src": "9263:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8999:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9030:1:6",
														"nodeType": "YulTypedName",
														"src": "9030:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9033:1:6",
														"nodeType": "YulTypedName",
														"src": "9033:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9039:7:6",
														"nodeType": "YulTypedName",
														"src": "9039:7:6",
														"type": ""
													}
												],
												"src": "8999:410:6"
											},
											{
												"body": {
													"nativeSrc": "9459:147:6",
													"nodeType": "YulBlock",
													"src": "9459:147:6",
													"statements": [
														{
															"nativeSrc": "9469:25:6",
															"nodeType": "YulAssignment",
															"src": "9469:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9492:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9492:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9474:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9474:17:6"
																},
																"nativeSrc": "9474:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9474:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9469:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9469:1:6"
																}
															]
														},
														{
															"nativeSrc": "9503:25:6",
															"nodeType": "YulAssignment",
															"src": "9503:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9526:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9526:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9508:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9508:17:6"
																},
																"nativeSrc": "9508:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9508:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9503:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9503:1:6"
																}
															]
														},
														{
															"nativeSrc": "9537:16:6",
															"nodeType": "YulAssignment",
															"src": "9537:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9548:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9548:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9551:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9551:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9544:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9544:3:6"
																},
																"nativeSrc": "9544:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9544:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9577:22:6",
																"nodeType": "YulBlock",
																"src": "9577:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9579:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9579:16:6"
																			},
																			"nativeSrc": "9579:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9579:18:6"
																		},
																		"nativeSrc": "9579:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9579:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9569:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9569:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9572:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9566:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9566:2:6"
																},
																"nativeSrc": "9566:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9566:10:6"
															},
															"nativeSrc": "9563:36:6",
															"nodeType": "YulIf",
															"src": "9563:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9415:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9446:1:6",
														"nodeType": "YulTypedName",
														"src": "9446:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9449:1:6",
														"nodeType": "YulTypedName",
														"src": "9449:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9455:3:6",
														"nodeType": "YulTypedName",
														"src": "9455:3:6",
														"type": ""
													}
												],
												"src": "9415:191:6"
											},
											{
												"body": {
													"nativeSrc": "9657:149:6",
													"nodeType": "YulBlock",
													"src": "9657:149:6",
													"statements": [
														{
															"nativeSrc": "9667:25:6",
															"nodeType": "YulAssignment",
															"src": "9667:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9690:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9690:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9672:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9672:17:6"
																},
																"nativeSrc": "9672:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9672:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9667:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9667:1:6"
																}
															]
														},
														{
															"nativeSrc": "9701:25:6",
															"nodeType": "YulAssignment",
															"src": "9701:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9724:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9724:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9706:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9706:17:6"
																},
																"nativeSrc": "9706:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9706:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9701:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9701:1:6"
																}
															]
														},
														{
															"nativeSrc": "9735:17:6",
															"nodeType": "YulAssignment",
															"src": "9735:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9747:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9747:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9750:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9750:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9743:3:6"
																},
																"nativeSrc": "9743:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9743:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9735:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9735:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9777:22:6",
																"nodeType": "YulBlock",
																"src": "9777:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9779:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9779:16:6"
																			},
																			"nativeSrc": "9779:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9779:18:6"
																		},
																		"nativeSrc": "9779:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9779:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9768:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9768:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9774:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9774:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9765:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9765:2:6"
																},
																"nativeSrc": "9765:11:6",
																"nodeType": "YulFunctionCall",
																"src": "9765:11:6"
															},
															"nativeSrc": "9762:37:6",
															"nodeType": "YulIf",
															"src": "9762:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9612:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9643:1:6",
														"nodeType": "YulTypedName",
														"src": "9643:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9646:1:6",
														"nodeType": "YulTypedName",
														"src": "9646:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9652:4:6",
														"nodeType": "YulTypedName",
														"src": "9652:4:6",
														"type": ""
													}
												],
												"src": "9612:194:6"
											},
											{
												"body": {
													"nativeSrc": "9840:152:6",
													"nodeType": "YulBlock",
													"src": "9840:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9857:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9857:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9860:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9860:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:6"
																},
																"nativeSrc": "9850:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9850:88:6"
															},
															"nativeSrc": "9850:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9850:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9954:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9954:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9957:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:6"
																},
																"nativeSrc": "9947:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9947:15:6"
															},
															"nativeSrc": "9947:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9947:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9978:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9978:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9981:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9981:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9971:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9971:6:6"
																},
																"nativeSrc": "9971:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9971:15:6"
															},
															"nativeSrc": "9971:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9971:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9812:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9812:180:6"
											},
											{
												"body": {
													"nativeSrc": "10049:269:6",
													"nodeType": "YulBlock",
													"src": "10049:269:6",
													"statements": [
														{
															"nativeSrc": "10059:22:6",
															"nodeType": "YulAssignment",
															"src": "10059:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10073:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10073:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10079:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10079:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10069:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10069:3:6"
																},
																"nativeSrc": "10069:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10069:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10059:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10059:6:6"
																}
															]
														},
														{
															"nativeSrc": "10090:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10090:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10120:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10120:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10126:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10126:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10116:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10116:3:6"
																},
																"nativeSrc": "10116:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10116:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10094:18:6",
																	"nodeType": "YulTypedName",
																	"src": "10094:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10167:51:6",
																"nodeType": "YulBlock",
																"src": "10167:51:6",
																"statements": [
																	{
																		"nativeSrc": "10181:27:6",
																		"nodeType": "YulAssignment",
																		"src": "10181:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10195:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10195:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10203:4:6",
																					"nodeType": "YulLiteral",
																					"src": "10203:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10191:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "10191:3:6"
																			},
																			"nativeSrc": "10191:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10191:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10181:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10181:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10147:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "10147:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10140:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10140:6:6"
																},
																"nativeSrc": "10140:26:6",
																"nodeType": "YulFunctionCall",
																"src": "10140:26:6"
															},
															"nativeSrc": "10137:81:6",
															"nodeType": "YulIf",
															"src": "10137:81:6"
														},
														{
															"body": {
																"nativeSrc": "10270:42:6",
																"nodeType": "YulBlock",
																"src": "10270:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10284:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10284:16:6"
																			},
																			"nativeSrc": "10284:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10284:18:6"
																		},
																		"nativeSrc": "10284:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10284:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10234:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "10234:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10257:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10257:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10265:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10254:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10254:2:6"
																		},
																		"nativeSrc": "10254:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10254:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10231:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10231:2:6"
																},
																"nativeSrc": "10231:38:6",
																"nodeType": "YulFunctionCall",
																"src": "10231:38:6"
															},
															"nativeSrc": "10228:84:6",
															"nodeType": "YulIf",
															"src": "10228:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9998:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10033:4:6",
														"nodeType": "YulTypedName",
														"src": "10033:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10042:6:6",
														"nodeType": "YulTypedName",
														"src": "10042:6:6",
														"type": ""
													}
												],
												"src": "9998:320:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12(memPtr) {\n\n        mstore(add(memPtr, 0), \"Saldo insuficiente para operacao\")\n\n        mstore(add(memPtr, 32), \"( Insufficient funds )\")\n\n    }\n\n    function abi_encode_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sem permissao para transacao (al\")\n\n        mstore(add(memPtr, 32), \"lowance too low)\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2F7C857 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCE606EE0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x2A1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0xA2F7C857 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xAD0EF018 EQ PUSH2 0x219 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x260F5CF1 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x677AA7AE EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x19D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x3B7 DUP6 PUSH2 0x762 JUMP JUMPDEST LT ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EF SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x5 SLOAD PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x538 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH2 0x54D SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x598 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5F8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x6C8 SWAP1 PUSH2 0x102D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6F4 SWAP1 PUSH2 0x102D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x716 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x722 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x7F6 CALLER PUSH2 0x762 JUMP JUMPDEST LT ISZERO PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP1 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xA PUSH1 0x5 SLOAD PUSH2 0x847 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST LT ISZERO PUSH2 0x928 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 SLOAD DUP3 PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x97C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0xF9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xFCD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA2C SWAP2 SWAP1 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB03 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB13 DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xB1D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2E DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB46 DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP2 EQ PUSH2 0xB50 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB61 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7C PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB9 DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD2 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBEE PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBFC DUP7 DUP3 DUP8 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC0D DUP7 DUP3 DUP8 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC1E DUP7 DUP3 DUP8 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6A DUP3 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0xC74 DUP2 DUP6 PUSH2 0xC32 JUMP JUMPDEST SWAP4 POP PUSH2 0xC84 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC42 JUMP JUMPDEST PUSH2 0xC8D DUP2 PUSH2 0xC50 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB0 DUP2 DUP5 PUSH2 0xC60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH2 0xCCC PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCDA DUP5 DUP3 DUP6 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCEC DUP2 PUSH2 0xB34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD05 PUSH0 DUP4 ADD DUP5 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD20 JUMPI PUSH2 0xD1F PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xB53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD3F DUP2 PUSH2 0xAF9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH0 DUP4 ADD DUP5 PUSH2 0xD36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD81 DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD92 DUP6 DUP3 DUP7 ADD PUSH2 0xB20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDBF PUSH2 0xDBA PUSH2 0xDB5 DUP5 PUSH2 0xADA JUMP JUMPDEST PUSH2 0xD9C JUMP JUMPDEST PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD0 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE1 DUP3 PUSH2 0xDC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDD7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE0A PUSH0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616C646F20696E737566696369656E74652070617261206F7065726163616F PUSH0 DUP3 ADD MSTORE PUSH32 0x2820496E73756666696369656E742066756E6473202900000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE6A PUSH1 0x36 DUP4 PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP PUSH2 0xE75 DUP3 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE97 DUP2 PUSH2 0xE5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656D207065726D697373616F2070617261207472616E736163616F2028616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636520746F6F206C6F772900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF8 PUSH1 0x30 DUP4 PUSH2 0xC32 JUMP JUMPDEST SWAP2 POP PUSH2 0xF03 DUP3 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF25 DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF63 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xF6E DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF7C DUP2 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA4 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAF DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xFC7 JUMPI PUSH2 0xFC6 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFD7 DUP3 PUSH2 0xB34 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP4 PUSH2 0xB34 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0xF2C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1044 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1057 JUMPI PUSH2 0x1056 PUSH2 0x1000 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC MSTORE8 0xD4 BLOBBASEFEE PUSH19 0xDD72E8DD2362F1C7E5E070EA293490AE8A8FE8 SELFBALANCE EXP 0xDC JUMP SWAP16 ISZERO 0xC2 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "395:2529:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1825:653;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;669:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2697:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1249:564;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2807:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;704:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;527:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2492:198;2553:4;2603:5;2570:9;:21;2580:10;2570:21;;;;;;;;;;;;;;;:30;2592:7;2570:30;;;;;;;;;;;;;;;:38;;;;2645:7;2624:36;;2633:10;2624:36;;;2654:5;2624:36;;;;;;:::i;:::-;;;;;;;;2678:4;2671:11;;2492:198;;;;:::o;1825:653::-;1901:4;1945:5;1926:15;1936:4;1926:9;:15::i;:::-;:24;;1918:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2060:5;2029:9;:15;2039:4;2029:15;;;;;;;;;;;;;;;:27;2045:10;2029:27;;;;;;;;;;;;;;;;:36;;2021:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;2160:5;2152:2;2138:11;;:16;;;;:::i;:::-;2136:29;2131:226;;;2208:11;;2183:8;:18;2193:6;;;;;;;;;;;2183:18;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;2269:11;;2261:5;:19;;;;:::i;:::-;2234:8;:12;2243:2;2234:12;;;;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;2131:226;;;2340:5;2315:8;:12;2324:2;2315:12;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2131:226;2391:5;2373:8;:14;2382:4;2373:14;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;2436:2;2421:25;;2430:4;2421:25;;;2440:5;2421:25;;;;;;:::i;:::-;;;;;;;;2466:4;2459:11;;1825:653;;;;;:::o;597:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;480:40::-;;;;;;;;;;;;;;;;;:::o;669:26::-;;;;:::o;1136:101::-;1190:4;1214:8;:15;1223:5;1214:15;;;;;;;;;;;;;;;;1207:22;;1136:101;;;:::o;2697:102::-;2778:12;2769:6;;:21;;;;;;;;;;;;;;;;;;2697:102;:::o;1249:564::-;1306:4;1356:5;1331:21;1341:10;1331:9;:21::i;:::-;:30;;1323:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;1464:5;1456:2;1442:11;;:16;;;;:::i;:::-;1440:29;1435:226;;;1512:11;;1487:8;:18;1497:6;;;;;;;;;;;1487:18;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1573:11;;1565:5;:19;;;;:::i;:::-;1538:8;:12;1547:2;1538:12;;;;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;1435:226;;;1644:5;1619:8;:12;1628:2;1619:12;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1435:226;1721:5;1697:8;:20;1706:10;1697:20;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;1773:2;1752:31;;1761:10;1752:31;;;1777:5;1752:31;;;;;;:::i;:::-;;;;;;;;1801:4;1794:11;;1249:564;;;;:::o;2807:105::-;2891:12;2877:11;:26;;;;2807:105;:::o;704:28::-;;;;;;;;;;;;;:::o;527:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;636:21::-;;;;;;;;;;;;;:::o;419:19::-;;;;;;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:619::-;2181:6;2189;2197;2246:2;2234:9;2225:7;2221:23;2217:32;2214:119;;;2252:79;;:::i;:::-;2214:119;2372:1;2397:53;2442:7;2433:6;2422:9;2418:22;2397:53;:::i;:::-;2387:63;;2343:117;2499:2;2525:53;2570:7;2561:6;2550:9;2546:22;2525:53;:::i;:::-;2515:63;;2470:118;2627:2;2653:53;2698:7;2689:6;2678:9;2674:22;2653:53;:::i;:::-;2643:63;;2598:118;2104:619;;;;;:::o;2729:99::-;2781:6;2815:5;2809:12;2799:22;;2729:99;;;:::o;2834:169::-;2918:11;2952:6;2947:3;2940:19;2992:4;2987:3;2983:14;2968:29;;2834:169;;;;:::o;3009:139::-;3098:6;3093:3;3088;3082:23;3139:1;3130:6;3125:3;3121:16;3114:27;3009:139;;;:::o;3154:102::-;3195:6;3246:2;3242:7;3237:2;3230:5;3226:14;3222:28;3212:38;;3154:102;;;:::o;3262:377::-;3350:3;3378:39;3411:5;3378:39;:::i;:::-;3433:71;3497:6;3492:3;3433:71;:::i;:::-;3426:78;;3513:65;3571:6;3566:3;3559:4;3552:5;3548:16;3513:65;:::i;:::-;3603:29;3625:6;3603:29;:::i;:::-;3598:3;3594:39;3587:46;;3354:285;3262:377;;;;:::o;3645:313::-;3758:4;3796:2;3785:9;3781:18;3773:26;;3845:9;3839:4;3835:20;3831:1;3820:9;3816:17;3809:47;3873:78;3946:4;3937:6;3873:78;:::i;:::-;3865:86;;3645:313;;;;:::o;3964:329::-;4023:6;4072:2;4060:9;4051:7;4047:23;4043:32;4040:119;;;4078:79;;:::i;:::-;4040:119;4198:1;4223:53;4268:7;4259:6;4248:9;4244:22;4223:53;:::i;:::-;4213:63;;4169:117;3964:329;;;;:::o;4299:118::-;4386:24;4404:5;4386:24;:::i;:::-;4381:3;4374:37;4299:118;;:::o;4423:222::-;4516:4;4554:2;4543:9;4539:18;4531:26;;4567:71;4635:1;4624:9;4620:17;4611:6;4567:71;:::i;:::-;4423:222;;;;:::o;4651:329::-;4710:6;4759:2;4747:9;4738:7;4734:23;4730:32;4727:119;;;4765:79;;:::i;:::-;4727:119;4885:1;4910:53;4955:7;4946:6;4935:9;4931:22;4910:53;:::i;:::-;4900:63;;4856:117;4651:329;;;;:::o;4986:118::-;5073:24;5091:5;5073:24;:::i;:::-;5068:3;5061:37;4986:118;;:::o;5110:222::-;5203:4;5241:2;5230:9;5226:18;5218:26;;5254:71;5322:1;5311:9;5307:17;5298:6;5254:71;:::i;:::-;5110:222;;;;:::o;5338:474::-;5406:6;5414;5463:2;5451:9;5442:7;5438:23;5434:32;5431:119;;;5469:79;;:::i;:::-;5431:119;5589:1;5614:53;5659:7;5650:6;5639:9;5635:22;5614:53;:::i;:::-;5604:63;;5560:117;5716:2;5742:53;5787:7;5778:6;5767:9;5763:22;5742:53;:::i;:::-;5732:63;;5687:118;5338:474;;;;;:::o;5818:60::-;5846:3;5867:5;5860:12;;5818:60;;;:::o;5884:142::-;5934:9;5967:53;5985:34;5994:24;6012:5;5994:24;:::i;:::-;5985:34;:::i;:::-;5967:53;:::i;:::-;5954:66;;5884:142;;;:::o;6032:126::-;6082:9;6115:37;6146:5;6115:37;:::i;:::-;6102:50;;6032:126;;;:::o;6164:140::-;6228:9;6261:37;6292:5;6261:37;:::i;:::-;6248:50;;6164:140;;;:::o;6310:159::-;6411:51;6456:5;6411:51;:::i;:::-;6406:3;6399:64;6310:159;;:::o;6475:250::-;6582:4;6620:2;6609:9;6605:18;6597:26;;6633:85;6715:1;6704:9;6700:17;6691:6;6633:85;:::i;:::-;6475:250;;;;:::o;6731:241::-;6871:34;6867:1;6859:6;6855:14;6848:58;6940:24;6935:2;6927:6;6923:15;6916:49;6731:241;:::o;6978:366::-;7120:3;7141:67;7205:2;7200:3;7141:67;:::i;:::-;7134:74;;7217:93;7306:3;7217:93;:::i;:::-;7335:2;7330:3;7326:12;7319:19;;6978:366;;;:::o;7350:419::-;7516:4;7554:2;7543:9;7539:18;7531:26;;7603:9;7597:4;7593:20;7589:1;7578:9;7574:17;7567:47;7631:131;7757:4;7631:131;:::i;:::-;7623:139;;7350:419;;;:::o;7775:235::-;7915:34;7911:1;7903:6;7899:14;7892:58;7984:18;7979:2;7971:6;7967:15;7960:43;7775:235;:::o;8016:366::-;8158:3;8179:67;8243:2;8238:3;8179:67;:::i;:::-;8172:74;;8255:93;8344:3;8255:93;:::i;:::-;8373:2;8368:3;8364:12;8357:19;;8016:366;;;:::o;8388:419::-;8554:4;8592:2;8581:9;8577:18;8569:26;;8641:9;8635:4;8631:20;8627:1;8616:9;8612:17;8605:47;8669:131;8795:4;8669:131;:::i;:::-;8661:139;;8388:419;;;:::o;8813:180::-;8861:77;8858:1;8851:88;8958:4;8955:1;8948:15;8982:4;8979:1;8972:15;8999:410;9039:7;9062:20;9080:1;9062:20;:::i;:::-;9057:25;;9096:20;9114:1;9096:20;:::i;:::-;9091:25;;9151:1;9148;9144:9;9173:30;9191:11;9173:30;:::i;:::-;9162:41;;9352:1;9343:7;9339:15;9336:1;9333:22;9313:1;9306:9;9286:83;9263:139;;9382:18;;:::i;:::-;9263:139;9047:362;8999:410;;;;:::o;9415:191::-;9455:3;9474:20;9492:1;9474:20;:::i;:::-;9469:25;;9508:20;9526:1;9508:20;:::i;:::-;9503:25;;9551:1;9548;9544:9;9537:16;;9572:3;9569:1;9566:10;9563:36;;;9579:18;;:::i;:::-;9563:36;9415:191;;;;:::o;9612:194::-;9652:4;9672:20;9690:1;9672:20;:::i;:::-;9667:25;;9706:20;9724:1;9706:20;:::i;:::-;9701:25;;9750:1;9747;9743:9;9735:17;;9774:1;9768:4;9765:11;9762:37;;;9779:18;;:::i;:::-;9762:37;9612:194;;;;:::o;9812:180::-;9860:77;9857:1;9850:88;9957:4;9954:1;9947:15;9981:4;9978:1;9971:15;9998:320;10042:6;10079:1;10073:4;10069:12;10059:22;;10126:1;10120:4;10116:12;10147:18;10137:81;;10203:4;10195:6;10191:17;10181:27;;10137:81;10265:2;10257:6;10254:14;10234:18;10231:38;10228:84;;10284:18;;:::i;:::-;10228:84;10049:269;9998:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "848600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"balances(address)": "2869",
								"changeAddressDonate(address)": "24738",
								"changeValueDonate(uint256)": "22582",
								"contractOwner()": "2530",
								"donate()": "2574",
								"donateValue()": "2514",
								"token()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"versao()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "312E300000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 597,
									"end": 625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 597,
									"end": 625,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 597,
									"end": 625,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 902,
									"end": 1125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 956,
									"end": 962,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 941,
									"end": 946,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 946,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 941,
									"end": 963,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 963,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 963,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 941,
									"end": 963,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 990,
									"end": 1000,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 974,
									"end": 987,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 974,
									"end": 987,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 974,
									"end": 1000,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1027,
									"end": 1040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1024,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1018,
									"end": 1024,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1040,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1065,
									"end": 1077,
									"name": "PUSH",
									"source": 5,
									"value": "4563918244F40000"
								},
								{
									"begin": 1051,
									"end": 1062,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1051,
									"end": 1077,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1077,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1077,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1077,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 902,
									"end": 1125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5315,
									"end": 5432,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5424,
									"end": 5425,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5421,
									"end": 5422,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5414,
									"end": 5426,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5687,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5561,
									"end": 5687,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5598,
									"end": 5605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5638,
									"end": 5680,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5631,
									"end": 5636,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5627,
									"end": 5681,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5616,
									"end": 5681,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5616,
									"end": 5681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5687,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5687,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5687,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5561,
									"end": 5687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5693,
									"end": 5789,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5693,
									"end": 5789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5730,
									"end": 5737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5759,
									"end": 5783,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5777,
									"end": 5782,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5759,
									"end": 5783,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 5759,
									"end": 5783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5759,
									"end": 5783,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5759,
									"end": 5783,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5783,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5693,
									"end": 5789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5693,
									"end": 5789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5693,
									"end": 5789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5693,
									"end": 5789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5917,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 5795,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5868,
									"end": 5892,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5886,
									"end": 5891,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5868,
									"end": 5892,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 5868,
									"end": 5892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5868,
									"end": 5892,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5868,
									"end": 5892,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5861,
									"end": 5866,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5858,
									"end": 5893,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5848,
									"end": 5911,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5907,
									"end": 5908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5904,
									"end": 5905,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5897,
									"end": 5909,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5911,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5848,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5917,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5795,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5980,
									"end": 5985,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6005,
									"end": 6018,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6018,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6027,
									"end": 6060,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 6054,
									"end": 6059,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6027,
									"end": 6060,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 6027,
									"end": 6060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6027,
									"end": 6060,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 6027,
									"end": 6060,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6148,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6191,
									"end": 6193,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6188,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6170,
									"end": 6177,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6166,
									"end": 6189,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6194,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 6159,
									"end": 6278,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6159,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 6159,
									"end": 6278,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6197,
									"end": 6276,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 6197,
									"end": 6276,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 6197,
									"end": 6276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6197,
									"end": 6276,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 6197,
									"end": 6276,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6159,
									"end": 6278,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 6159,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6342,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6398,
									"end": 6405,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6389,
									"end": 6395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6378,
									"end": 6387,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6374,
									"end": 6396,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6342,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6342,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6342,
									"end": 6406,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6342,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6332,
									"end": 6406,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6332,
									"end": 6406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6288,
									"end": 6416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6072,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 2924,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc53d44a72dd72e8dd2362f1c7e5e070ea293490ae8a8fe8470adc569f15c2de64736f6c634300081e0033",
									".code": [
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "A2F7C857"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "CE606EE0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "CE606EE0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "ED88C68E"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "A2F7C857"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "AD0EF018"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "260F5CF1"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "27E235E3"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "677AA7AE"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 2924,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1825,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1825,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1825,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 597,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 597,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 480,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 480,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 480,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 669,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1136,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1136,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1136,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2697,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2697,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1249,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1249,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2807,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2807,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 704,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 704,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 636,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 636,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 419,
											"end": 438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 419,
											"end": 438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2590,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2591,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2600,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2643,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2654,
											"end": 2659,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2624,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2660,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2682,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1950,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1926,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1926,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1950,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1950,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1918,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1918,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2043,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2044,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2055,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2056,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2065,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2065,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2021,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2021,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2138,
											"end": 2149,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2138,
											"end": 2149,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2138,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2165,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2191,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2183,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2219,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2269,
											"end": 2280,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2261,
											"end": 2280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2242,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2234,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2323,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2315,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2131,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2386,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2373,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2421,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2446,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2470,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2459,
											"end": 2470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 2478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 597,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 597,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 597,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 597,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 669,
											"end": 695,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 669,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1222,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1229,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2769,
											"end": 2790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1341,
											"end": 1351,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1331,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1361,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1323,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1323,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1442,
											"end": 1453,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1442,
											"end": 1453,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1442,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1442,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1440,
											"end": 1469,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1512,
											"end": 1523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1503,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1487,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1573,
											"end": 1584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1565,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1565,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1538,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1627,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1619,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1435,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1716,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1697,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1771,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1752,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1783,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1794,
											"end": 1805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2877,
											"end": 2903,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2903,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 527,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 636,
											"end": 657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2252,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2397,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2570,
											"end": 2577,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2525,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2653,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2828,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2729,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 2990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 3003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3125,
											"end": 3128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3114,
											"end": 3141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3242,
											"end": 3249,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3230,
											"end": 3235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3222,
											"end": 3250,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3378,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3378,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3497,
											"end": 3503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3433,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3504,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3569,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3513,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3578,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3513,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3603,
											"end": 3632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3632,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3603,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 3950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3943,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3873,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3951,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3873,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4051,
											"end": 4058,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4047,
											"end": 4070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4043,
											"end": 4075,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4040,
											"end": 4159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4078,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4078,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4157,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4078,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4159,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4040,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4257,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4223,
											"end": 4276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4276,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4223,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 4286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4299,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4404,
											"end": 4409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4386,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4386,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4299,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4539,
											"end": 4557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4567,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4567,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4762,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4765,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4765,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4727,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4910,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4856,
											"end": 4973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4651,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5073,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5073,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5061,
											"end": 5098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5324,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5254,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5254,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5449,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5461,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5466,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5550,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5431,
											"end": 5550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5469,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5469,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5548,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5469,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5550,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5431,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5639,
											"end": 5648,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5614,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5614,
											"end": 5667,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5614,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5604,
											"end": 5667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5742,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5742,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5338,
											"end": 5812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 6026,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5884,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5985,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6012,
											"end": 6017,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5994,
											"end": 6018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5994,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5985,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6019,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5985,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5967,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5967,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 6026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 6026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 6026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6032,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6146,
											"end": 6151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6115,
											"end": 6152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6152,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6115,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6102,
											"end": 6152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6032,
											"end": 6158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6304,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6164,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6261,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6292,
											"end": 6297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6261,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6261,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6261,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6469,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6310,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6456,
											"end": 6461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6411,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6462,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6411,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6609,
											"end": 6618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6713,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6633,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6718,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 6633,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6475,
											"end": 6725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6731,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6905,
											"name": "PUSH",
											"source": 6,
											"value": "53616C646F20696E737566696369656E74652070617261206F7065726163616F"
										},
										{
											"begin": 6867,
											"end": 6868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6855,
											"end": 6869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6906,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6964,
											"name": "PUSH",
											"source": 6,
											"value": "2820496E73756666696369656E742066756E6473202900000000000000000000"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6923,
											"end": 6938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6916,
											"end": 6965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7344,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6978,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7123,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 7200,
											"end": 7203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7141,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7208,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7141,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7134,
											"end": 7208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 7217,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7310,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7217,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7326,
											"end": 7338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7350,
											"end": 7769,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 7350,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7516,
											"end": 7520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7603,
											"end": 7612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7597,
											"end": 7601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7589,
											"end": 7590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7587,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7757,
											"end": 7761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7631,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7762,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7631,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7623,
											"end": 7762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7623,
											"end": 7762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7350,
											"end": 7769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7350,
											"end": 7769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7350,
											"end": 7769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7350,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 8010,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 7775,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7949,
											"name": "PUSH",
											"source": 6,
											"value": "53656D207065726D697373616F2070617261207472616E736163616F2028616C"
										},
										{
											"begin": 7911,
											"end": 7912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8002,
											"name": "PUSH",
											"source": 6,
											"value": "6C6F77616E636520746F6F206C6F772900000000000000000000000000000000"
										},
										{
											"begin": 7979,
											"end": 7981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 7982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7960,
											"end": 8003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 8010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 8010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8382,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8016,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8179,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8243,
											"end": 8245,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 8238,
											"end": 8241,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 8179,
											"end": 8246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8246,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 8179,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8255,
											"end": 8348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8348,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 8255,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8368,
											"end": 8371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8016,
											"end": 8382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8807,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 8388,
											"end": 8807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8581,
											"end": 8590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8577,
											"end": 8595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8641,
											"end": 8650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8635,
											"end": 8639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8631,
											"end": 8651,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8625,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8652,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8669,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8800,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 8669,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8993,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8813,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 8938,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8962,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8955,
											"end": 8956,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8948,
											"end": 8963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8982,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8979,
											"end": 8980,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8972,
											"end": 8987,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9039,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9080,
											"end": 9081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9062,
											"end": 9082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9062,
											"end": 9082,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9062,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9114,
											"end": 9115,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9096,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9116,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9096,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9091,
											"end": 9116,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9091,
											"end": 9116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9152,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9191,
											"end": 9202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9173,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9173,
											"end": 9203,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 9173,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9162,
											"end": 9203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9162,
											"end": 9203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9354,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9313,
											"end": 9314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9306,
											"end": 9315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9286,
											"end": 9369,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9382,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9263,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9047,
											"end": 9409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8999,
											"end": 9409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9492,
											"end": 9493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9474,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9474,
											"end": 9494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9474,
											"end": 9494,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9474,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9469,
											"end": 9494,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9469,
											"end": 9494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9526,
											"end": 9527,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9508,
											"end": 9528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9528,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9548,
											"end": 9549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9572,
											"end": 9575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9569,
											"end": 9570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9576,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9599,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9563,
											"end": 9599,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9579,
											"end": 9597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 9599,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 9563,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9415,
											"end": 9606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9652,
											"end": 9656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9690,
											"end": 9691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9672,
											"end": 9692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9672,
											"end": 9692,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9672,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9667,
											"end": 9692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9724,
											"end": 9725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 9706,
											"end": 9726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9726,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9750,
											"end": 9751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9747,
											"end": 9748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9735,
											"end": 9752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9735,
											"end": 9752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9768,
											"end": 9772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9776,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9762,
											"end": 9799,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9762,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9762,
											"end": 9799,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9779,
											"end": 9797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9762,
											"end": 9799,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9762,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9992,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 9812,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9860,
											"end": 9937,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9850,
											"end": 9938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9957,
											"end": 9961,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9954,
											"end": 9955,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9947,
											"end": 9962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9981,
											"end": 9985,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 9986,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10318,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 9998,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10080,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10069,
											"end": 10081,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10059,
											"end": 10081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10059,
											"end": 10081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10126,
											"end": 10127,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10120,
											"end": 10124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10116,
											"end": 10128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10137,
											"end": 10218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10207,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 10195,
											"end": 10201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10137,
											"end": 10218,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10137,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10254,
											"end": 10268,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10231,
											"end": 10269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10228,
											"end": 10312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10284,
											"end": 10302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10312,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10228,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10318,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9998,
											"end": 10318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CCK/CC2/ctoc.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"changeAddressDonate(address)": "a2f7c857",
							"changeValueDonate(uint256)": "ad0ef018",
							"contractOwner()": "ce606ee0",
							"donate()": "ed88c68e",
							"donateValue()": "677aa7ae",
							"token()": "fc0c546a",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"versao()": "260f5cf1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pDonateValue\",\"type\":\"address\"}],\"name\":\"changeAddressDonate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pDonateValue\",\"type\":\"uint256\"}],\"name\":\"changeValueDonate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donateValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versao\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CCK/CC2/ctoc.sol\":\"TokenHH\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CCK/CC2/ctoc.sol\":{\"keccak256\":\"0x8a25bf29265d00a8542e8be1d7dffa204600160c746c94dcf7027131e7c2d7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb0066cc41647c7a59f0604ce9c62c8edd435e697ed78a7dd6b9de05e37251ca\",\"dweb:/ipfs/QmRKdgdLdQkGkbzEPUTixCa2SWxVKvytJu1pnvYhrqFZXZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 792,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 796,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 802,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 805,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "versao",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 807,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "donate",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 809,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "donateValue",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/CCK/CC2/ctoc.sol:TokenHH",
								"label": "contractOwner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/CCK/CC2/ctoc.sol": {
				"ast": {
					"absolutePath": "contracts/CCK/CC2/ctoc.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"TokenHH": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "255:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 730,
							"src": "280:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 652,
							"src": "338:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenHH",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1060,
							"linearizedBaseContracts": [
								1060
							],
							"name": "TokenHH",
							"nameLocation": "404:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 792,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "433:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "419:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 791,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 790,
											"name": "IERC20",
											"nameLocations": [
												"419:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "419:6:5"
										},
										"referencedDeclaration": 729,
										"src": "419:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 796,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "512:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "480:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 795,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 793,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "488:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "480:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 794,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "499:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 802,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "579:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "527:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 801,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 797,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "535:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "527:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 800,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 798,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "554:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "546:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 799,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "565:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "260f5cf1",
									"id": 805,
									"mutability": "mutable",
									"name": "versao",
									"nameLocation": "611:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "597:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 803,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "597:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "312e30",
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "620:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3",
											"typeString": "literal_string \"1.0\""
										},
										"value": "1.0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed88c68e",
									"id": 807,
									"mutability": "mutable",
									"name": "donate",
									"nameLocation": "651:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "636:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 806,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "677aa7ae",
									"id": 809,
									"mutability": "mutable",
									"name": "donateValue",
									"nameLocation": "684:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "669:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 808,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "669:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 811,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "719:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1060,
									"src": "704:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 819,
									"name": "Transfer",
									"nameLocation": "751:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "776:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "760:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "798:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "782:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "807:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "802:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "802:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:54:5"
									},
									"src": "745:69:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 827,
									"name": "Approval",
									"nameLocation": "826:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "851:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "835:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "874:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "858:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "888:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "883:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:60:5"
									},
									"src": "820:75:5"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "930:195:5",
										"statements": [
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 832,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "941:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 834,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "956:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 833,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "949:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "949:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "941:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "941:22:5"
											},
											{
												"expression": {
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 838,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "974:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 839,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "990:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "994:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "990:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "974:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "974:26:5"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "donate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1018:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "1027:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1018:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1018:22:5"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 847,
														"name": "donateValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "1051:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1065:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1069:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1075:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1069:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1065:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000"
														}
													},
													"src": "1051:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "1051:26:5"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "922:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "914:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:16:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:5"
									},
									"scope": 1060,
									"src": "902:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1196:41:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 863,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1214:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 865,
													"indexExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1223:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1214:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 866,
												"nodeType": "Return",
												"src": "1207:22:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1145:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:15:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1190:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1190:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:6:5"
									},
									"scope": 1060,
									"src": "1136:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1312:501:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 879,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1341:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1345:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1341:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1331:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1331:21:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "1356:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1331:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c646f20696e737566696369656e74652070617261206f7065726163616f2820496e73756666696369656e742066756e64732029",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1363:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
																"typeString": "literal_string \"Saldo insuficiente para operacao( Insufficient funds )\""
															},
															"value": "Saldo insuficiente para operacao( Insufficient funds )"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
																"typeString": "literal_string \"Saldo insuficiente para operacao( Insufficient funds )\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1323:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1323:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1323:97:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 887,
																	"name": "donateValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1442:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1456:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1442:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 890,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1440:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 891,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1464:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1440:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "1604:57:5",
													"statements": [
														{
															"expression": {
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 909,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1619:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 911,
																	"indexExpression": {
																		"id": 910,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "1628:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1619:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 912,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "1644:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1619:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 914,
															"nodeType": "ExpressionStatement",
															"src": "1619:30:5"
														}
													]
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "1435:226:5",
												"trueBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "1472:126:5",
													"statements": [
														{
															"expression": {
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 893,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1487:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 895,
																	"indexExpression": {
																		"id": 894,
																		"name": "donate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "1497:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1487:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 896,
																	"name": "donateValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "1512:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1487:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "1487:36:5"
														},
														{
															"expression": {
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 899,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "1538:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 901,
																	"indexExpression": {
																		"id": 900,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "1547:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1538:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 902,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "1565:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 903,
																				"name": "donateValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "1573:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1565:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 905,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1563:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1538:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "1538:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 917,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1697:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 920,
														"indexExpression": {
															"expression": {
																"id": 918,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1706:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1706:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1697:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 921,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1721:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1697:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1697:29:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1761:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1765:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1761:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "1773:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "1777:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1752:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "EmitStatement",
												"src": "1747:36:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1801:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 876,
												"id": 932,
												"nodeType": "Return",
												"src": "1794:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1258:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1275:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1267:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1284:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1279:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1279:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:24:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1306:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:6:5"
									},
									"scope": 1060,
									"src": "1249:564:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "1907:571:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "1936:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 946,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1926:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 949,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "1945:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1926:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c646f20696e737566696369656e74652070617261206f7065726163616f2820496e73756666696369656e742066756e64732029",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1952:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
																"typeString": "literal_string \"Saldo insuficiente para operacao( Insufficient funds )\""
															},
															"value": "Saldo insuficiente para operacao( Insufficient funds )"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24407f1884b86557e62545d040256950f9d7109bb733b4ce6f7508f4b52de12",
																"typeString": "literal_string \"Saldo insuficiente para operacao( Insufficient funds )\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1918:92:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1918:92:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 955,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2029:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 957,
																	"indexExpression": {
																		"id": 956,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "2039:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2029:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 960,
																"indexExpression": {
																	"expression": {
																		"id": 958,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2045:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2049:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2045:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2029:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 961,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "2060:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2029:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656d207065726d697373616f2070617261207472616e736163616f2028616c6c6f77616e636520746f6f206c6f7729",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2067:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f",
																"typeString": "literal_string \"Sem permissao para transacao (allowance too low)\""
															},
															"value": "Sem permissao para transacao (allowance too low)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d6d00e20e7316085ee77ba5ae2de891ad1f23cffe4ce0559e1d4c51e460764f",
																"typeString": "literal_string \"Sem permissao para transacao (allowance too low)\""
															}
														],
														"id": 954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2021:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "2021:97:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "donateValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "2138:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2152:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2138:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 969,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2136:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 970,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "2160:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2136:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "2300:57:5",
													"statements": [
														{
															"expression": {
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 988,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2315:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 990,
																	"indexExpression": {
																		"id": 989,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "2324:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2315:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "2340:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2315:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "2315:30:5"
														}
													]
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "2131:226:5",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "2168:126:5",
													"statements": [
														{
															"expression": {
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 972,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2183:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 974,
																	"indexExpression": {
																		"id": 973,
																		"name": "donate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "2193:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2183:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 975,
																	"name": "donateValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "2208:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2183:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "2183:36:5"
														},
														{
															"expression": {
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 978,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2234:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 980,
																	"indexExpression": {
																		"id": 979,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "2243:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2234:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 981,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 940,
																				"src": "2261:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 982,
																				"name": "donateValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "2269:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2261:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 984,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2259:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2234:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "2234:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 996,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2373:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 997,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "2382:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2373:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 999,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "2391:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2373:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2373:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1003,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "2430:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "2436:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "2440:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "2421:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2421:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "EmitStatement",
												"src": "2416:30:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2466:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 944,
												"id": 1009,
												"nodeType": "Return",
												"src": "2459:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1834:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1855:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1847:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1869:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1861:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1873:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1873:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1846:39:5"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1901:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1901:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:6:5"
									},
									"scope": 1060,
									"src": "1825:653:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2559:131:5",
										"statements": [
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1020,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2570:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1024,
															"indexExpression": {
																"expression": {
																	"id": 1021,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2580:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2584:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2580:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2570:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1023,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "2592:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2570:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1026,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "2603:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2570:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "2570:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2633:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2637:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2633:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "2645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "2654:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1029,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2624:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "EmitStatement",
												"src": "2619:41:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2678:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1019,
												"id": 1037,
												"nodeType": "Return",
												"src": "2671:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2501:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2531:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2526:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2526:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:29:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2553:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2553:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:6:5"
									},
									"scope": 1060,
									"src": "2492:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "2760:39:5",
										"statements": [
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "donate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "2769:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "pDonateValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2778:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2769:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2769:21:5"
											}
										]
									},
									"functionSelector": "a2f7c857",
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAddressDonate",
									"nameLocation": "2706:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "pDonateValue",
												"nameLocation": "2736:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2728:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2728:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:26:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2760:0:5"
									},
									"scope": 1060,
									"src": "2697:102:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "2865:47:5",
										"statements": [
											{
												"expression": {
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1054,
														"name": "donateValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2877:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1055,
														"name": "pDonateValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "2891:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2877:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "2877:26:5"
											}
										]
									},
									"functionSelector": "ad0ef018",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeValueDonate",
									"nameLocation": "2816:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "pDonateValue",
												"nameLocation": "2842:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2836:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2836:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2833:23:5"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2865:0:5"
									},
									"scope": 1060,
									"src": "2807:105:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1061,
							"src": "395:2529:5",
							"usedErrors": [],
							"usedEvents": [
								819,
								827
							]
						}
					],
					"src": "255:2675:5"
				},
				"id": 5
			}
		}
	}
}